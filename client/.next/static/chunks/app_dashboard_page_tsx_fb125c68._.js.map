{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///home/joeagharib/My-Github/taskhive/client/app/dashboard/page.tsx"],"sourcesContent":["// store/auth.ts\n\"use client\";\nimport { create } from \"zustand\";\nimport axios from \"axios\";\n\ntype User = { id: string; email: string };\n\ntype AuthState = {\n  user: User | null;\n  accessToken: string | null;\n  loading: boolean;\n  error: string | null;\n  login: (email: string, password: string) => Promise<void>;\n  register: (email: string, password: string) => Promise<void>;\n  logout: () => Promise<void>;\n  refreshToken: () => Promise<void>;\n  fetchUser: () => Promise<void>;\n  rehydrate: () => void;\n};\n\nexport const useAuthStore = create<AuthState>((set, get) => ({\n  user: null,\n  accessToken: null,\n  loading: false,\n  error: null,\n\n  rehydrate: () => {\n    const token = localStorage.getItem(\"accessToken\");\n    if (token) set({ accessToken: token });\n  },\n\n  login: async (email, password) => {\n    set({ loading: true, error: null });\n    try {\n      const { data } = await axios.post(\n        `${process.env.NEXT_PUBLIC_API_URL}/auth/login`,\n        { email, password },\n        { withCredentials: true }\n      );\n\n      set({ accessToken: data.accessToken });\n      localStorage.setItem(\"accessToken\", data.accessToken);\n\n      await get().fetchUser();\n    } catch (err: any) {\n      set({ error: err.message || \"Login failed\" });\n      throw err;\n    } finally {\n      set({ loading: false });\n    }\n  },\n\n  register: async (email, password) => {\n    set({ loading: true, error: null });\n    try {\n      const { data } = await axios.post(\n        `${process.env.NEXT_PUBLIC_API_URL}/auth/register`,\n        { email, password },\n        { withCredentials: true }\n      );\n\n      set({ accessToken: data.accessToken });\n      localStorage.setItem(\"accessToken\", data.accessToken);\n\n      await get().fetchUser();\n    } catch (err: any) {\n      set({ error: err.message || \"Register failed\" });\n      throw err;\n    } finally {\n      set({ loading: false });\n    }\n  },\n\n  logout: async () => {\n    try {\n      await axios.post(\n        `${process.env.NEXT_PUBLIC_API_URL}/auth/logout`,\n        {},\n        { withCredentials: true }\n      );\n    } catch {}\n    localStorage.removeItem(\"accessToken\");\n    set({ user: null, accessToken: null });\n  },\n\n  refreshToken: async () => {\n    try {\n      const { data } = await axios.post(\n        `${process.env.NEXT_PUBLIC_API_URL}/auth/refresh`,\n        {},\n        { withCredentials: true }\n      );\n      set({ accessToken: data.accessToken });\n      localStorage.setItem(\"accessToken\", data.accessToken);\n    } catch {\n      set({ user: null, accessToken: null });\n    }\n  },\n\n  fetchUser: async () => {\n    const { accessToken } = get();\n    if (!accessToken) return;\n    try {\n      const { data } = await axios.get(\n        `${process.env.NEXT_PUBLIC_API_URL}/auth/me`,\n        {\n          headers: { Authorization: `Bearer ${accessToken}` },\n          withCredentials: true,\n        }\n      );\n      set({ user: data.user });\n    } catch {\n      set({ user: null });\n    }\n  },\n}));\n"],"names":[],"mappings":"AAAA,gBAAgB;;;;;AAmCL;AAjCX;AACA;AAFA;;;AAmBO,MAAM,eAAe,IAAA,qJAAM,EAAY,CAAC,KAAK,MAAQ,CAAC;QAC3D,MAAM;QACN,aAAa;QACb,SAAS;QACT,OAAO;QAEP,WAAW;YACT,MAAM,QAAQ,aAAa,OAAO,CAAC;YACnC,IAAI,OAAO,IAAI;gBAAE,aAAa;YAAM;QACtC;QAEA,OAAO,OAAO,OAAO;YACnB,IAAI;gBAAE,SAAS;gBAAM,OAAO;YAAK;YACjC,IAAI;gBACF,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,mJAAK,CAAC,IAAI,CAC/B,AAAC,GAAkC,sEAAA,gBACnC;oBAAE;oBAAO;gBAAS,GAClB;oBAAE,iBAAiB;gBAAK;gBAG1B,IAAI;oBAAE,aAAa,KAAK,WAAW;gBAAC;gBACpC,aAAa,OAAO,CAAC,eAAe,KAAK,WAAW;gBAEpD,MAAM,MAAM,SAAS;YACvB,EAAE,OAAO,KAAU;gBACjB,IAAI;oBAAE,OAAO,IAAI,OAAO,IAAI;gBAAe;gBAC3C,MAAM;YACR,SAAU;gBACR,IAAI;oBAAE,SAAS;gBAAM;YACvB;QACF;QAEA,UAAU,OAAO,OAAO;YACtB,IAAI;gBAAE,SAAS;gBAAM,OAAO;YAAK;YACjC,IAAI;gBACF,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,mJAAK,CAAC,IAAI,CAC/B,AAAC,GAAkC,sEAAA,mBACnC;oBAAE;oBAAO;gBAAS,GAClB;oBAAE,iBAAiB;gBAAK;gBAG1B,IAAI;oBAAE,aAAa,KAAK,WAAW;gBAAC;gBACpC,aAAa,OAAO,CAAC,eAAe,KAAK,WAAW;gBAEpD,MAAM,MAAM,SAAS;YACvB,EAAE,OAAO,KAAU;gBACjB,IAAI;oBAAE,OAAO,IAAI,OAAO,IAAI;gBAAkB;gBAC9C,MAAM;YACR,SAAU;gBACR,IAAI;oBAAE,SAAS;gBAAM;YACvB;QACF;QAEA,QAAQ;YACN,IAAI;gBACF,MAAM,mJAAK,CAAC,IAAI,CACd,AAAC,GAAkC,sEAAA,iBACnC,CAAC,GACD;oBAAE,iBAAiB;gBAAK;YAE5B,EAAE,UAAM,CAAC;YACT,aAAa,UAAU,CAAC;YACxB,IAAI;gBAAE,MAAM;gBAAM,aAAa;YAAK;QACtC;QAEA,cAAc;YACZ,IAAI;gBACF,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,mJAAK,CAAC,IAAI,CAC/B,AAAC,GAAkC,sEAAA,kBACnC,CAAC,GACD;oBAAE,iBAAiB;gBAAK;gBAE1B,IAAI;oBAAE,aAAa,KAAK,WAAW;gBAAC;gBACpC,aAAa,OAAO,CAAC,eAAe,KAAK,WAAW;YACtD,EAAE,UAAM;gBACN,IAAI;oBAAE,MAAM;oBAAM,aAAa;gBAAK;YACtC;QACF;QAEA,WAAW;YACT,MAAM,EAAE,WAAW,EAAE,GAAG;YACxB,IAAI,CAAC,aAAa;YAClB,IAAI;gBACF,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,mJAAK,CAAC,GAAG,CAC9B,AAAC,GAAkC,sEAAA,aACnC;oBACE,SAAS;wBAAE,eAAe,AAAC,UAAqB,OAAZ;oBAAc;oBAClD,iBAAiB;gBACnB;gBAEF,IAAI;oBAAE,MAAM,KAAK,IAAI;gBAAC;YACxB,EAAE,UAAM;gBACN,IAAI;oBAAE,MAAM;gBAAK;YACnB;QACF;IACF,CAAC","debugId":null}}]
}