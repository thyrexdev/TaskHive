{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///home/joeagharib/My-Github/taskhive/client/store/auth.ts"],"sourcesContent":["import { Router } from \"express\";\nimport {\n  register,\n  login,\n  refreshAccessToken,\n  logout,\n  changePassword,\n  forgotPassword,\n  resetPassword,\n  me,\n} from \"../controllers/auth.controller\";\nimport rateLimit from \"express-rate-limit\";\nimport { authMiddleware } from \"../middlewares/auth.middleware\";\n\nconst loginLimiter = rateLimit({\n  windowMs: 15 * 60 * 1000, // 15 ÿØŸÇŸäŸÇÿ©\n  max: 5, // ÿ®ÿ≥ 5 ŸÖÿ≠ÿßŸàŸÑÿßÿ™\n  message: { message: \"Too many login attempts, try again later.\" },\n});\n\nconst router = Router();\n\nrouter.post(\"/register\", register);\nrouter.post(\"/login\", loginLimiter, login);\nrouter.get(\"/me\", authMiddleware, me)\nrouter.post(\"/logout\", logout);\nrouter.post(\"/refresh-token\", refreshAccessToken);\nrouter.post(\"/change-password\", authMiddleware , changePassword)\nrouter.post(\"/forgot-password\", forgotPassword);\nrouter.post(\"/reset-password\", resetPassword);\n\nexport default router;\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAcA,MAAM,eAAe,UAAU;IAC7B,UAAU,KAAK,KAAK;IACpB,KAAK;IACL,SAAS;QAAE,SAAS;IAA4C;AAClE;AAEA,MAAM,SAAS;AAEf,OAAO,IAAI,CAAC,aAAa;AACzB,OAAO,IAAI,CAAC,UAAU,cAAc;AACpC,OAAO,GAAG,CAAC,OAAO,gBAAgB;AAClC,OAAO,IAAI,CAAC,WAAW;AACvB,OAAO,IAAI,CAAC,kBAAkB;AAC9B,OAAO,IAAI,CAAC,oBAAoB,gBAAiB;AACjD,OAAO,IAAI,CAAC,oBAAoB;AAChC,OAAO,IAAI,CAAC,mBAAmB;uCAEhB","debugId":null}},
    {"offset": {"line": 56, "column": 0}, "map": {"version":3,"sources":["file:///home/joeagharib/My-Github/taskhive/client/app/dashboard/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useAuthStore } from \"@/store/auth\";\nimport { useRouter } from \"next/navigation\";\nimport { useEffect } from \"react\";\n\nconst Page = () => {\n  const { user, fetchUser, accessToken, rehydrate, loading } = useAuthStore();\n  const router = useRouter();\n\n  useEffect(() => {\n    // ÿ£ŸàŸÑ ŸÖÿ±ÿ© ÿßŸÅÿ™ÿ≠ ÿßŸÑÿµŸÅÿ≠ÿ© ÿ®ÿπÿØ refresh\n    rehydrate();\n  }, [rehydrate]);\n\n  useEffect(() => {\n    if (accessToken && !user) {\n      fetchUser();\n    }\n  }, [accessToken, user, fetchUser]);\n\n  useEffect(() => {\n    if (!loading && !accessToken) {\n      router.push(\"/login\");\n    }\n  }, [loading, accessToken, router]);\n\n  if (loading || (!user && accessToken)) return <p>Loading...</p>;\n\n  if (!user) return null; // üëà ŸáŸÜÿß ÿπÿ¥ÿßŸÜ ŸÖŸäÿπŸÖŸÑÿ¥ ŸÅŸÑÿßÿ¥ ÿπŸÑŸâ login \n\n  return <div>Welcome {user.email} üöÄ</div>;\n};\n\nexport default Page;\n"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;;;AAJA;;;;AAMA,MAAM,OAAO;;IACX,MAAM,EAAE,IAAI,EAAE,SAAS,EAAE,WAAW,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,IAAA,gIAAY;IACzE,MAAM,SAAS,IAAA,kJAAS;IAExB,IAAA,0KAAS;0BAAC;YACR,kCAAkC;YAClC;QACF;yBAAG;QAAC;KAAU;IAEd,IAAA,0KAAS;0BAAC;YACR,IAAI,eAAe,CAAC,MAAM;gBACxB;YACF;QACF;yBAAG;QAAC;QAAa;QAAM;KAAU;IAEjC,IAAA,0KAAS;0BAAC;YACR,IAAI,CAAC,WAAW,CAAC,aAAa;gBAC5B,OAAO,IAAI,CAAC;YACd;QACF;yBAAG;QAAC;QAAS;QAAa;KAAO;IAEjC,IAAI,WAAY,CAAC,QAAQ,aAAc,qBAAO,6LAAC;kBAAE;;;;;;IAEjD,IAAI,CAAC,MAAM,OAAO,MAAM,qCAAqC;IAE7D,qBAAO,6LAAC;;YAAI;YAAS,KAAK,KAAK;YAAC;;;;;;;AAClC;GA1BM;;QACyD,gIAAY;QAC1D,kJAAS;;;KAFpB;uCA4BS","debugId":null}},
    {"offset": {"line": 140, "column": 0}, "map": {"version":3,"sources":["file:///home/joeagharib/My-Github/taskhive/client/node_modules/next/navigation.js"],"sourcesContent":["module.exports = require('./dist/client/components/navigation')\n"],"names":[],"mappings":"AAAA,OAAO,OAAO","ignoreList":[0],"debugId":null}}]
}