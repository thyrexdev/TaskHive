{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40chakra-ui/react/dist/esm/card/card.mjs/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const Card = registerClientReference(\n    function() { throw new Error(\"Attempted to call Card() from the server but Card is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@chakra-ui/react/dist/esm/card/card.mjs <module evaluation>\",\n    \"Card\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,OAAO,IAAA,wQAAuB,EACvC;IAAa,MAAM,IAAI,MAAM;AAAwN,GACrP,sFACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 37, "column": 0}, "map": {"version":3,"sources":["file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40chakra-ui/react/dist/esm/card/card.mjs/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const Card = registerClientReference(\n    function() { throw new Error(\"Attempted to call Card() from the server but Card is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@chakra-ui/react/dist/esm/card/card.mjs\",\n    \"Card\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,OAAO,IAAA,wQAAuB,EACvC;IAAa,MAAM,IAAI,MAAM;AAAwN,GACrP,kEACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 51, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 59, "column": 0}, "map": {"version":3,"sources":["file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40chakra-ui/react/dist/esm/card/card-header.mjs/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const CardHeader = registerClientReference(\n    function() { throw new Error(\"Attempted to call CardHeader() from the server but CardHeader is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@chakra-ui/react/dist/esm/card/card-header.mjs <module evaluation>\",\n    \"CardHeader\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,aAAa,IAAA,wQAAuB,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,6FACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 73, "column": 0}, "map": {"version":3,"sources":["file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40chakra-ui/react/dist/esm/card/card-header.mjs/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const CardHeader = registerClientReference(\n    function() { throw new Error(\"Attempted to call CardHeader() from the server but CardHeader is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@chakra-ui/react/dist/esm/card/card-header.mjs\",\n    \"CardHeader\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,aAAa,IAAA,wQAAuB,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,yEACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 87, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 95, "column": 0}, "map": {"version":3,"sources":["file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40chakra-ui/react/dist/esm/card/card-body.mjs/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const CardBody = registerClientReference(\n    function() { throw new Error(\"Attempted to call CardBody() from the server but CardBody is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@chakra-ui/react/dist/esm/card/card-body.mjs <module evaluation>\",\n    \"CardBody\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,WAAW,IAAA,wQAAuB,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,2FACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 109, "column": 0}, "map": {"version":3,"sources":["file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40chakra-ui/react/dist/esm/card/card-body.mjs/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const CardBody = registerClientReference(\n    function() { throw new Error(\"Attempted to call CardBody() from the server but CardBody is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@chakra-ui/react/dist/esm/card/card-body.mjs\",\n    \"CardBody\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,WAAW,IAAA,wQAAuB,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,uEACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 123, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 131, "column": 0}, "map": {"version":3,"sources":["file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/react/src/index.ts"],"sourcesContent":["export * from '@saas-ui/core'\nexport * from '@saas-ui/hooks'\nexport * from '@saas-ui/theme'\nexport * from '@saas-ui/nprogress'\nexport * from '@saas-ui/modals'\nexport * from '@saas-ui/data-table'\nexport * from '@saas-ui/hotkeys'\nexport * from '@saas-ui/forms'\n"],"names":[],"mappings":";;;;;;;;;;CAOA,cAAc,oBAAA","debugId":null}},
    {"offset": {"line": 146, "column": 0}, "map": {"version":3,"sources":["file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/core/dist/index.mjs/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const AppShell = registerClientReference(\n    function() { throw new Error(\"Attempted to call AppShell() from the server but AppShell is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"AppShell\",\n);\nexport const Banner = registerClientReference(\n    function() { throw new Error(\"Attempted to call Banner() from the server but Banner is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"Banner\",\n);\nexport const BannerActions = registerClientReference(\n    function() { throw new Error(\"Attempted to call BannerActions() from the server but BannerActions is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"BannerActions\",\n);\nexport const BannerCloseButton = registerClientReference(\n    function() { throw new Error(\"Attempted to call BannerCloseButton() from the server but BannerCloseButton is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"BannerCloseButton\",\n);\nexport const BannerContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call BannerContent() from the server but BannerContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"BannerContent\",\n);\nexport const BannerDescription = registerClientReference(\n    function() { throw new Error(\"Attempted to call BannerDescription() from the server but BannerDescription is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"BannerDescription\",\n);\nexport const BannerIcon = registerClientReference(\n    function() { throw new Error(\"Attempted to call BannerIcon() from the server but BannerIcon is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"BannerIcon\",\n);\nexport const BannerTitle = registerClientReference(\n    function() { throw new Error(\"Attempted to call BannerTitle() from the server but BannerTitle is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"BannerTitle\",\n);\nexport const Br = registerClientReference(\n    function() { throw new Error(\"Attempted to call Br() from the server but Br is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"Br\",\n);\nexport const CalendarIcon = registerClientReference(\n    function() { throw new Error(\"Attempted to call CalendarIcon() from the server but CalendarIcon is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"CalendarIcon\",\n);\nexport const CheckIcon = registerClientReference(\n    function() { throw new Error(\"Attempted to call CheckIcon() from the server but CheckIcon is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"CheckIcon\",\n);\nexport const ChevronDownIcon = registerClientReference(\n    function() { throw new Error(\"Attempted to call ChevronDownIcon() from the server but ChevronDownIcon is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"ChevronDownIcon\",\n);\nexport const ChevronLeftIcon = registerClientReference(\n    function() { throw new Error(\"Attempted to call ChevronLeftIcon() from the server but ChevronLeftIcon is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"ChevronLeftIcon\",\n);\nexport const ChevronRightIcon = registerClientReference(\n    function() { throw new Error(\"Attempted to call ChevronRightIcon() from the server but ChevronRightIcon is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"ChevronRightIcon\",\n);\nexport const ChevronUpIcon = registerClientReference(\n    function() { throw new Error(\"Attempted to call ChevronUpIcon() from the server but ChevronUpIcon is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"ChevronUpIcon\",\n);\nexport const CloseIcon = registerClientReference(\n    function() { throw new Error(\"Attempted to call CloseIcon() from the server but CloseIcon is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"CloseIcon\",\n);\nexport const CollapseProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call CollapseProvider() from the server but CollapseProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"CollapseProvider\",\n);\nexport const Command = registerClientReference(\n    function() { throw new Error(\"Attempted to call Command() from the server but Command is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"Command\",\n);\nexport const ContextMenu = registerClientReference(\n    function() { throw new Error(\"Attempted to call ContextMenu() from the server but ContextMenu is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"ContextMenu\",\n);\nexport const ContextMenuItem = registerClientReference(\n    function() { throw new Error(\"Attempted to call ContextMenuItem() from the server but ContextMenuItem is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"ContextMenuItem\",\n);\nexport const ContextMenuList = registerClientReference(\n    function() { throw new Error(\"Attempted to call ContextMenuList() from the server but ContextMenuList is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"ContextMenuList\",\n);\nexport const ContextMenuProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call ContextMenuProvider() from the server but ContextMenuProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"ContextMenuProvider\",\n);\nexport const ContextMenuTrigger = registerClientReference(\n    function() { throw new Error(\"Attempted to call ContextMenuTrigger() from the server but ContextMenuTrigger is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"ContextMenuTrigger\",\n);\nexport const EmptyState = registerClientReference(\n    function() { throw new Error(\"Attempted to call EmptyState() from the server but EmptyState is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"EmptyState\",\n);\nexport const EmptyStateActions = registerClientReference(\n    function() { throw new Error(\"Attempted to call EmptyStateActions() from the server but EmptyStateActions is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"EmptyStateActions\",\n);\nexport const EmptyStateBody = registerClientReference(\n    function() { throw new Error(\"Attempted to call EmptyStateBody() from the server but EmptyStateBody is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"EmptyStateBody\",\n);\nexport const EmptyStateContainer = registerClientReference(\n    function() { throw new Error(\"Attempted to call EmptyStateContainer() from the server but EmptyStateContainer is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"EmptyStateContainer\",\n);\nexport const EmptyStateDescription = registerClientReference(\n    function() { throw new Error(\"Attempted to call EmptyStateDescription() from the server but EmptyStateDescription is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"EmptyStateDescription\",\n);\nexport const EmptyStateFooter = registerClientReference(\n    function() { throw new Error(\"Attempted to call EmptyStateFooter() from the server but EmptyStateFooter is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"EmptyStateFooter\",\n);\nexport const EmptyStateIcon = registerClientReference(\n    function() { throw new Error(\"Attempted to call EmptyStateIcon() from the server but EmptyStateIcon is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"EmptyStateIcon\",\n);\nexport const EmptyStateTitle = registerClientReference(\n    function() { throw new Error(\"Attempted to call EmptyStateTitle() from the server but EmptyStateTitle is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"EmptyStateTitle\",\n);\nexport const ErrorBoundary = registerClientReference(\n    function() { throw new Error(\"Attempted to call ErrorBoundary() from the server but ErrorBoundary is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"ErrorBoundary\",\n);\nexport const FilterIcon = registerClientReference(\n    function() { throw new Error(\"Attempted to call FilterIcon() from the server but FilterIcon is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"FilterIcon\",\n);\nexport const HamburgerIcon = registerClientReference(\n    function() { throw new Error(\"Attempted to call HamburgerIcon() from the server but HamburgerIcon is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"HamburgerIcon\",\n);\nexport const IconBadge = registerClientReference(\n    function() { throw new Error(\"Attempted to call IconBadge() from the server but IconBadge is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"IconBadge\",\n);\nexport const Link = registerClientReference(\n    function() { throw new Error(\"Attempted to call Link() from the server but Link is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"Link\",\n);\nexport const LoadingOverlay = registerClientReference(\n    function() { throw new Error(\"Attempted to call LoadingOverlay() from the server but LoadingOverlay is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"LoadingOverlay\",\n);\nexport const LoadingSpinner = registerClientReference(\n    function() { throw new Error(\"Attempted to call LoadingSpinner() from the server but LoadingSpinner is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"LoadingSpinner\",\n);\nexport const LoadingText = registerClientReference(\n    function() { throw new Error(\"Attempted to call LoadingText() from the server but LoadingText is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"LoadingText\",\n);\nexport const MinusIcon = registerClientReference(\n    function() { throw new Error(\"Attempted to call MinusIcon() from the server but MinusIcon is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"MinusIcon\",\n);\nexport const Nav = registerClientReference(\n    function() { throw new Error(\"Attempted to call Nav() from the server but Nav is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"Nav\",\n);\nexport const NavGroup = registerClientReference(\n    function() { throw new Error(\"Attempted to call NavGroup() from the server but NavGroup is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"NavGroup\",\n);\nexport const NavGroupContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call NavGroupContent() from the server but NavGroupContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"NavGroupContent\",\n);\nexport const NavGroupStylesProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call NavGroupStylesProvider() from the server but NavGroupStylesProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"NavGroupStylesProvider\",\n);\nexport const NavGroupTitle = registerClientReference(\n    function() { throw new Error(\"Attempted to call NavGroupTitle() from the server but NavGroupTitle is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"NavGroupTitle\",\n);\nexport const NavItem = registerClientReference(\n    function() { throw new Error(\"Attempted to call NavItem() from the server but NavItem is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"NavItem\",\n);\nexport const NavItemLabel = registerClientReference(\n    function() { throw new Error(\"Attempted to call NavItemLabel() from the server but NavItemLabel is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"NavItemLabel\",\n);\nexport const NavItemStylesProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call NavItemStylesProvider() from the server but NavItemStylesProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"NavItemStylesProvider\",\n);\nexport const Navbar = registerClientReference(\n    function() { throw new Error(\"Attempted to call Navbar() from the server but Navbar is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"Navbar\",\n);\nexport const NavbarBrand = registerClientReference(\n    function() { throw new Error(\"Attempted to call NavbarBrand() from the server but NavbarBrand is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"NavbarBrand\",\n);\nexport const NavbarContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call NavbarContent() from the server but NavbarContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"NavbarContent\",\n);\nexport const NavbarItem = registerClientReference(\n    function() { throw new Error(\"Attempted to call NavbarItem() from the server but NavbarItem is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"NavbarItem\",\n);\nexport const NavbarLink = registerClientReference(\n    function() { throw new Error(\"Attempted to call NavbarLink() from the server but NavbarLink is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"NavbarLink\",\n);\nexport const NavbarProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call NavbarProvider() from the server but NavbarProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"NavbarProvider\",\n);\nexport const OverflowMenu = registerClientReference(\n    function() { throw new Error(\"Attempted to call OverflowMenu() from the server but OverflowMenu is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"OverflowMenu\",\n);\nexport const Persona = registerClientReference(\n    function() { throw new Error(\"Attempted to call Persona() from the server but Persona is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"Persona\",\n);\nexport const PersonaAvatar = registerClientReference(\n    function() { throw new Error(\"Attempted to call PersonaAvatar() from the server but PersonaAvatar is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"PersonaAvatar\",\n);\nexport const PersonaContainer = registerClientReference(\n    function() { throw new Error(\"Attempted to call PersonaContainer() from the server but PersonaContainer is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"PersonaContainer\",\n);\nexport const PersonaDetails = registerClientReference(\n    function() { throw new Error(\"Attempted to call PersonaDetails() from the server but PersonaDetails is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"PersonaDetails\",\n);\nexport const PersonaLabel = registerClientReference(\n    function() { throw new Error(\"Attempted to call PersonaLabel() from the server but PersonaLabel is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"PersonaLabel\",\n);\nexport const PersonaSecondaryLabel = registerClientReference(\n    function() { throw new Error(\"Attempted to call PersonaSecondaryLabel() from the server but PersonaSecondaryLabel is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"PersonaSecondaryLabel\",\n);\nexport const PersonaTertiaryLabel = registerClientReference(\n    function() { throw new Error(\"Attempted to call PersonaTertiaryLabel() from the server but PersonaTertiaryLabel is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"PersonaTertiaryLabel\",\n);\nexport const PlusIcon = registerClientReference(\n    function() { throw new Error(\"Attempted to call PlusIcon() from the server but PlusIcon is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"PlusIcon\",\n);\nexport const Presence = registerClientReference(\n    function() { throw new Error(\"Attempted to call Presence() from the server but Presence is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"Presence\",\n);\nexport const Property = registerClientReference(\n    function() { throw new Error(\"Attempted to call Property() from the server but Property is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"Property\",\n);\nexport const PropertyLabel = registerClientReference(\n    function() { throw new Error(\"Attempted to call PropertyLabel() from the server but PropertyLabel is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"PropertyLabel\",\n);\nexport const PropertyList = registerClientReference(\n    function() { throw new Error(\"Attempted to call PropertyList() from the server but PropertyList is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"PropertyList\",\n);\nexport const PropertyValue = registerClientReference(\n    function() { throw new Error(\"Attempted to call PropertyValue() from the server but PropertyValue is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"PropertyValue\",\n);\nexport const SaasContext = registerClientReference(\n    function() { throw new Error(\"Attempted to call SaasContext() from the server but SaasContext is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"SaasContext\",\n);\nexport const SaasProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call SaasProvider() from the server but SaasProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"SaasProvider\",\n);\nexport const SearchIcon = registerClientReference(\n    function() { throw new Error(\"Attempted to call SearchIcon() from the server but SearchIcon is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"SearchIcon\",\n);\nexport const SearchInput = registerClientReference(\n    function() { throw new Error(\"Attempted to call SearchInput() from the server but SearchInput is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"SearchInput\",\n);\nexport const Sidebar = registerClientReference(\n    function() { throw new Error(\"Attempted to call Sidebar() from the server but Sidebar is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"Sidebar\",\n);\nexport const SidebarOverlay = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarOverlay() from the server but SidebarOverlay is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"SidebarOverlay\",\n);\nexport const SidebarProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarProvider() from the server but SidebarProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"SidebarProvider\",\n);\nexport const SidebarSection = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarSection() from the server but SidebarSection is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"SidebarSection\",\n);\nexport const SidebarStylesProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarStylesProvider() from the server but SidebarStylesProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"SidebarStylesProvider\",\n);\nexport const SidebarToggleButton = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarToggleButton() from the server but SidebarToggleButton is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"SidebarToggleButton\",\n);\nexport const Snackbar = registerClientReference(\n    function() { throw new Error(\"Attempted to call Snackbar() from the server but Snackbar is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"Snackbar\",\n);\nexport const StepperProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call StepperProvider() from the server but StepperProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"StepperProvider\",\n);\nexport const Steps = registerClientReference(\n    function() { throw new Error(\"Attempted to call Steps() from the server but Steps is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"Steps\",\n);\nexport const StepsCompleted = registerClientReference(\n    function() { throw new Error(\"Attempted to call StepsCompleted() from the server but StepsCompleted is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"StepsCompleted\",\n);\nexport const StepsContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call StepsContent() from the server but StepsContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"StepsContent\",\n);\nexport const StepsItem = registerClientReference(\n    function() { throw new Error(\"Attempted to call StepsItem() from the server but StepsItem is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"StepsItem\",\n);\nexport const StructuredList = registerClientReference(\n    function() { throw new Error(\"Attempted to call StructuredList() from the server but StructuredList is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"StructuredList\",\n);\nexport const StructuredListButton = registerClientReference(\n    function() { throw new Error(\"Attempted to call StructuredListButton() from the server but StructuredListButton is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"StructuredListButton\",\n);\nexport const StructuredListCell = registerClientReference(\n    function() { throw new Error(\"Attempted to call StructuredListCell() from the server but StructuredListCell is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"StructuredListCell\",\n);\nexport const StructuredListHeader = registerClientReference(\n    function() { throw new Error(\"Attempted to call StructuredListHeader() from the server but StructuredListHeader is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"StructuredListHeader\",\n);\nexport const StructuredListIcon = registerClientReference(\n    function() { throw new Error(\"Attempted to call StructuredListIcon() from the server but StructuredListIcon is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"StructuredListIcon\",\n);\nexport const StructuredListItem = registerClientReference(\n    function() { throw new Error(\"Attempted to call StructuredListItem() from the server but StructuredListItem is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"StructuredListItem\",\n);\nexport const Timeline = registerClientReference(\n    function() { throw new Error(\"Attempted to call Timeline() from the server but Timeline is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"Timeline\",\n);\nexport const TimelineContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call TimelineContent() from the server but TimelineContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"TimelineContent\",\n);\nexport const TimelineDot = registerClientReference(\n    function() { throw new Error(\"Attempted to call TimelineDot() from the server but TimelineDot is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"TimelineDot\",\n);\nexport const TimelineIcon = registerClientReference(\n    function() { throw new Error(\"Attempted to call TimelineIcon() from the server but TimelineIcon is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"TimelineIcon\",\n);\nexport const TimelineItem = registerClientReference(\n    function() { throw new Error(\"Attempted to call TimelineItem() from the server but TimelineItem is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"TimelineItem\",\n);\nexport const TimelineSeparator = registerClientReference(\n    function() { throw new Error(\"Attempted to call TimelineSeparator() from the server but TimelineSeparator is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"TimelineSeparator\",\n);\nexport const TimelineTrack = registerClientReference(\n    function() { throw new Error(\"Attempted to call TimelineTrack() from the server but TimelineTrack is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"TimelineTrack\",\n);\nexport const ViewIcon = registerClientReference(\n    function() { throw new Error(\"Attempted to call ViewIcon() from the server but ViewIcon is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"ViewIcon\",\n);\nexport const ViewOffIcon = registerClientReference(\n    function() { throw new Error(\"Attempted to call ViewOffIcon() from the server but ViewOffIcon is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"ViewOffIcon\",\n);\nexport const Web3Address = registerClientReference(\n    function() { throw new Error(\"Attempted to call Web3Address() from the server but Web3Address is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"Web3Address\",\n);\nexport const createIcon = registerClientReference(\n    function() { throw new Error(\"Attempted to call createIcon() from the server but createIcon is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"createIcon\",\n);\nexport const createStandAloneSnackbar = registerClientReference(\n    function() { throw new Error(\"Attempted to call createStandAloneSnackbar() from the server but createStandAloneSnackbar is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"createStandAloneSnackbar\",\n);\nexport const defaultPresenceTokens = registerClientReference(\n    function() { throw new Error(\"Attempted to call defaultPresenceTokens() from the server but defaultPresenceTokens is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"defaultPresenceTokens\",\n);\nexport const splitProps = registerClientReference(\n    function() { throw new Error(\"Attempted to call splitProps() from the server but splitProps is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"splitProps\",\n);\nexport const useCollapse = registerClientReference(\n    function() { throw new Error(\"Attempted to call useCollapse() from the server but useCollapse is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"useCollapse\",\n);\nexport const useCollapseContext = registerClientReference(\n    function() { throw new Error(\"Attempted to call useCollapseContext() from the server but useCollapseContext is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"useCollapseContext\",\n);\nexport const useContextMenu = registerClientReference(\n    function() { throw new Error(\"Attempted to call useContextMenu() from the server but useContextMenu is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"useContextMenu\",\n);\nexport const useContextMenuContext = registerClientReference(\n    function() { throw new Error(\"Attempted to call useContextMenuContext() from the server but useContextMenuContext is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"useContextMenuContext\",\n);\nexport const useEmptyStateStyles = registerClientReference(\n    function() { throw new Error(\"Attempted to call useEmptyStateStyles() from the server but useEmptyStateStyles is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"useEmptyStateStyles\",\n);\nexport const useLink = registerClientReference(\n    function() { throw new Error(\"Attempted to call useLink() from the server but useLink is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"useLink\",\n);\nexport const useNavGroupStyles = registerClientReference(\n    function() { throw new Error(\"Attempted to call useNavGroupStyles() from the server but useNavGroupStyles is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"useNavGroupStyles\",\n);\nexport const useNavItemStyles = registerClientReference(\n    function() { throw new Error(\"Attempted to call useNavItemStyles() from the server but useNavItemStyles is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"useNavItemStyles\",\n);\nexport const useNavbar = registerClientReference(\n    function() { throw new Error(\"Attempted to call useNavbar() from the server but useNavbar is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"useNavbar\",\n);\nexport const useNavbarContext = registerClientReference(\n    function() { throw new Error(\"Attempted to call useNavbarContext() from the server but useNavbarContext is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"useNavbarContext\",\n);\nexport const useSaas = registerClientReference(\n    function() { throw new Error(\"Attempted to call useSaas() from the server but useSaas is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"useSaas\",\n);\nexport const useSidebarContext = registerClientReference(\n    function() { throw new Error(\"Attempted to call useSidebarContext() from the server but useSidebarContext is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"useSidebarContext\",\n);\nexport const useSidebarStyles = registerClientReference(\n    function() { throw new Error(\"Attempted to call useSidebarStyles() from the server but useSidebarStyles is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"useSidebarStyles\",\n);\nexport const useSidebarToggleButton = registerClientReference(\n    function() { throw new Error(\"Attempted to call useSidebarToggleButton() from the server but useSidebarToggleButton is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"useSidebarToggleButton\",\n);\nexport const useSnackbar = registerClientReference(\n    function() { throw new Error(\"Attempted to call useSnackbar() from the server but useSnackbar is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"useSnackbar\",\n);\nexport const useStep = registerClientReference(\n    function() { throw new Error(\"Attempted to call useStep() from the server but useStep is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"useStep\",\n);\nexport const useStepper = registerClientReference(\n    function() { throw new Error(\"Attempted to call useStepper() from the server but useStepper is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"useStepper\",\n);\nexport const useStepperContext = registerClientReference(\n    function() { throw new Error(\"Attempted to call useStepperContext() from the server but useStepperContext is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"useStepperContext\",\n);\nexport const useStepperNextButton = registerClientReference(\n    function() { throw new Error(\"Attempted to call useStepperNextButton() from the server but useStepperNextButton is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"useStepperNextButton\",\n);\nexport const useStepperPrevButton = registerClientReference(\n    function() { throw new Error(\"Attempted to call useStepperPrevButton() from the server but useStepperPrevButton is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"useStepperPrevButton\",\n);\nexport const useTimelineStyles = registerClientReference(\n    function() { throw new Error(\"Attempted to call useTimelineStyles() from the server but useTimelineStyles is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs <module evaluation>\",\n    \"useTimelineStyles\",\n);\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 780, "column": 0}, "map": {"version":3,"sources":["file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/core/dist/index.mjs/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const AppShell = registerClientReference(\n    function() { throw new Error(\"Attempted to call AppShell() from the server but AppShell is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"AppShell\",\n);\nexport const Banner = registerClientReference(\n    function() { throw new Error(\"Attempted to call Banner() from the server but Banner is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"Banner\",\n);\nexport const BannerActions = registerClientReference(\n    function() { throw new Error(\"Attempted to call BannerActions() from the server but BannerActions is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"BannerActions\",\n);\nexport const BannerCloseButton = registerClientReference(\n    function() { throw new Error(\"Attempted to call BannerCloseButton() from the server but BannerCloseButton is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"BannerCloseButton\",\n);\nexport const BannerContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call BannerContent() from the server but BannerContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"BannerContent\",\n);\nexport const BannerDescription = registerClientReference(\n    function() { throw new Error(\"Attempted to call BannerDescription() from the server but BannerDescription is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"BannerDescription\",\n);\nexport const BannerIcon = registerClientReference(\n    function() { throw new Error(\"Attempted to call BannerIcon() from the server but BannerIcon is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"BannerIcon\",\n);\nexport const BannerTitle = registerClientReference(\n    function() { throw new Error(\"Attempted to call BannerTitle() from the server but BannerTitle is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"BannerTitle\",\n);\nexport const Br = registerClientReference(\n    function() { throw new Error(\"Attempted to call Br() from the server but Br is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"Br\",\n);\nexport const CalendarIcon = registerClientReference(\n    function() { throw new Error(\"Attempted to call CalendarIcon() from the server but CalendarIcon is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"CalendarIcon\",\n);\nexport const CheckIcon = registerClientReference(\n    function() { throw new Error(\"Attempted to call CheckIcon() from the server but CheckIcon is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"CheckIcon\",\n);\nexport const ChevronDownIcon = registerClientReference(\n    function() { throw new Error(\"Attempted to call ChevronDownIcon() from the server but ChevronDownIcon is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"ChevronDownIcon\",\n);\nexport const ChevronLeftIcon = registerClientReference(\n    function() { throw new Error(\"Attempted to call ChevronLeftIcon() from the server but ChevronLeftIcon is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"ChevronLeftIcon\",\n);\nexport const ChevronRightIcon = registerClientReference(\n    function() { throw new Error(\"Attempted to call ChevronRightIcon() from the server but ChevronRightIcon is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"ChevronRightIcon\",\n);\nexport const ChevronUpIcon = registerClientReference(\n    function() { throw new Error(\"Attempted to call ChevronUpIcon() from the server but ChevronUpIcon is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"ChevronUpIcon\",\n);\nexport const CloseIcon = registerClientReference(\n    function() { throw new Error(\"Attempted to call CloseIcon() from the server but CloseIcon is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"CloseIcon\",\n);\nexport const CollapseProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call CollapseProvider() from the server but CollapseProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"CollapseProvider\",\n);\nexport const Command = registerClientReference(\n    function() { throw new Error(\"Attempted to call Command() from the server but Command is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"Command\",\n);\nexport const ContextMenu = registerClientReference(\n    function() { throw new Error(\"Attempted to call ContextMenu() from the server but ContextMenu is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"ContextMenu\",\n);\nexport const ContextMenuItem = registerClientReference(\n    function() { throw new Error(\"Attempted to call ContextMenuItem() from the server but ContextMenuItem is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"ContextMenuItem\",\n);\nexport const ContextMenuList = registerClientReference(\n    function() { throw new Error(\"Attempted to call ContextMenuList() from the server but ContextMenuList is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"ContextMenuList\",\n);\nexport const ContextMenuProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call ContextMenuProvider() from the server but ContextMenuProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"ContextMenuProvider\",\n);\nexport const ContextMenuTrigger = registerClientReference(\n    function() { throw new Error(\"Attempted to call ContextMenuTrigger() from the server but ContextMenuTrigger is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"ContextMenuTrigger\",\n);\nexport const EmptyState = registerClientReference(\n    function() { throw new Error(\"Attempted to call EmptyState() from the server but EmptyState is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"EmptyState\",\n);\nexport const EmptyStateActions = registerClientReference(\n    function() { throw new Error(\"Attempted to call EmptyStateActions() from the server but EmptyStateActions is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"EmptyStateActions\",\n);\nexport const EmptyStateBody = registerClientReference(\n    function() { throw new Error(\"Attempted to call EmptyStateBody() from the server but EmptyStateBody is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"EmptyStateBody\",\n);\nexport const EmptyStateContainer = registerClientReference(\n    function() { throw new Error(\"Attempted to call EmptyStateContainer() from the server but EmptyStateContainer is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"EmptyStateContainer\",\n);\nexport const EmptyStateDescription = registerClientReference(\n    function() { throw new Error(\"Attempted to call EmptyStateDescription() from the server but EmptyStateDescription is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"EmptyStateDescription\",\n);\nexport const EmptyStateFooter = registerClientReference(\n    function() { throw new Error(\"Attempted to call EmptyStateFooter() from the server but EmptyStateFooter is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"EmptyStateFooter\",\n);\nexport const EmptyStateIcon = registerClientReference(\n    function() { throw new Error(\"Attempted to call EmptyStateIcon() from the server but EmptyStateIcon is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"EmptyStateIcon\",\n);\nexport const EmptyStateTitle = registerClientReference(\n    function() { throw new Error(\"Attempted to call EmptyStateTitle() from the server but EmptyStateTitle is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"EmptyStateTitle\",\n);\nexport const ErrorBoundary = registerClientReference(\n    function() { throw new Error(\"Attempted to call ErrorBoundary() from the server but ErrorBoundary is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"ErrorBoundary\",\n);\nexport const FilterIcon = registerClientReference(\n    function() { throw new Error(\"Attempted to call FilterIcon() from the server but FilterIcon is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"FilterIcon\",\n);\nexport const HamburgerIcon = registerClientReference(\n    function() { throw new Error(\"Attempted to call HamburgerIcon() from the server but HamburgerIcon is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"HamburgerIcon\",\n);\nexport const IconBadge = registerClientReference(\n    function() { throw new Error(\"Attempted to call IconBadge() from the server but IconBadge is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"IconBadge\",\n);\nexport const Link = registerClientReference(\n    function() { throw new Error(\"Attempted to call Link() from the server but Link is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"Link\",\n);\nexport const LoadingOverlay = registerClientReference(\n    function() { throw new Error(\"Attempted to call LoadingOverlay() from the server but LoadingOverlay is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"LoadingOverlay\",\n);\nexport const LoadingSpinner = registerClientReference(\n    function() { throw new Error(\"Attempted to call LoadingSpinner() from the server but LoadingSpinner is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"LoadingSpinner\",\n);\nexport const LoadingText = registerClientReference(\n    function() { throw new Error(\"Attempted to call LoadingText() from the server but LoadingText is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"LoadingText\",\n);\nexport const MinusIcon = registerClientReference(\n    function() { throw new Error(\"Attempted to call MinusIcon() from the server but MinusIcon is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"MinusIcon\",\n);\nexport const Nav = registerClientReference(\n    function() { throw new Error(\"Attempted to call Nav() from the server but Nav is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"Nav\",\n);\nexport const NavGroup = registerClientReference(\n    function() { throw new Error(\"Attempted to call NavGroup() from the server but NavGroup is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"NavGroup\",\n);\nexport const NavGroupContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call NavGroupContent() from the server but NavGroupContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"NavGroupContent\",\n);\nexport const NavGroupStylesProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call NavGroupStylesProvider() from the server but NavGroupStylesProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"NavGroupStylesProvider\",\n);\nexport const NavGroupTitle = registerClientReference(\n    function() { throw new Error(\"Attempted to call NavGroupTitle() from the server but NavGroupTitle is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"NavGroupTitle\",\n);\nexport const NavItem = registerClientReference(\n    function() { throw new Error(\"Attempted to call NavItem() from the server but NavItem is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"NavItem\",\n);\nexport const NavItemLabel = registerClientReference(\n    function() { throw new Error(\"Attempted to call NavItemLabel() from the server but NavItemLabel is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"NavItemLabel\",\n);\nexport const NavItemStylesProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call NavItemStylesProvider() from the server but NavItemStylesProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"NavItemStylesProvider\",\n);\nexport const Navbar = registerClientReference(\n    function() { throw new Error(\"Attempted to call Navbar() from the server but Navbar is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"Navbar\",\n);\nexport const NavbarBrand = registerClientReference(\n    function() { throw new Error(\"Attempted to call NavbarBrand() from the server but NavbarBrand is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"NavbarBrand\",\n);\nexport const NavbarContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call NavbarContent() from the server but NavbarContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"NavbarContent\",\n);\nexport const NavbarItem = registerClientReference(\n    function() { throw new Error(\"Attempted to call NavbarItem() from the server but NavbarItem is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"NavbarItem\",\n);\nexport const NavbarLink = registerClientReference(\n    function() { throw new Error(\"Attempted to call NavbarLink() from the server but NavbarLink is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"NavbarLink\",\n);\nexport const NavbarProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call NavbarProvider() from the server but NavbarProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"NavbarProvider\",\n);\nexport const OverflowMenu = registerClientReference(\n    function() { throw new Error(\"Attempted to call OverflowMenu() from the server but OverflowMenu is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"OverflowMenu\",\n);\nexport const Persona = registerClientReference(\n    function() { throw new Error(\"Attempted to call Persona() from the server but Persona is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"Persona\",\n);\nexport const PersonaAvatar = registerClientReference(\n    function() { throw new Error(\"Attempted to call PersonaAvatar() from the server but PersonaAvatar is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"PersonaAvatar\",\n);\nexport const PersonaContainer = registerClientReference(\n    function() { throw new Error(\"Attempted to call PersonaContainer() from the server but PersonaContainer is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"PersonaContainer\",\n);\nexport const PersonaDetails = registerClientReference(\n    function() { throw new Error(\"Attempted to call PersonaDetails() from the server but PersonaDetails is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"PersonaDetails\",\n);\nexport const PersonaLabel = registerClientReference(\n    function() { throw new Error(\"Attempted to call PersonaLabel() from the server but PersonaLabel is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"PersonaLabel\",\n);\nexport const PersonaSecondaryLabel = registerClientReference(\n    function() { throw new Error(\"Attempted to call PersonaSecondaryLabel() from the server but PersonaSecondaryLabel is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"PersonaSecondaryLabel\",\n);\nexport const PersonaTertiaryLabel = registerClientReference(\n    function() { throw new Error(\"Attempted to call PersonaTertiaryLabel() from the server but PersonaTertiaryLabel is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"PersonaTertiaryLabel\",\n);\nexport const PlusIcon = registerClientReference(\n    function() { throw new Error(\"Attempted to call PlusIcon() from the server but PlusIcon is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"PlusIcon\",\n);\nexport const Presence = registerClientReference(\n    function() { throw new Error(\"Attempted to call Presence() from the server but Presence is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"Presence\",\n);\nexport const Property = registerClientReference(\n    function() { throw new Error(\"Attempted to call Property() from the server but Property is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"Property\",\n);\nexport const PropertyLabel = registerClientReference(\n    function() { throw new Error(\"Attempted to call PropertyLabel() from the server but PropertyLabel is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"PropertyLabel\",\n);\nexport const PropertyList = registerClientReference(\n    function() { throw new Error(\"Attempted to call PropertyList() from the server but PropertyList is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"PropertyList\",\n);\nexport const PropertyValue = registerClientReference(\n    function() { throw new Error(\"Attempted to call PropertyValue() from the server but PropertyValue is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"PropertyValue\",\n);\nexport const SaasContext = registerClientReference(\n    function() { throw new Error(\"Attempted to call SaasContext() from the server but SaasContext is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"SaasContext\",\n);\nexport const SaasProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call SaasProvider() from the server but SaasProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"SaasProvider\",\n);\nexport const SearchIcon = registerClientReference(\n    function() { throw new Error(\"Attempted to call SearchIcon() from the server but SearchIcon is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"SearchIcon\",\n);\nexport const SearchInput = registerClientReference(\n    function() { throw new Error(\"Attempted to call SearchInput() from the server but SearchInput is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"SearchInput\",\n);\nexport const Sidebar = registerClientReference(\n    function() { throw new Error(\"Attempted to call Sidebar() from the server but Sidebar is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"Sidebar\",\n);\nexport const SidebarOverlay = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarOverlay() from the server but SidebarOverlay is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"SidebarOverlay\",\n);\nexport const SidebarProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarProvider() from the server but SidebarProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"SidebarProvider\",\n);\nexport const SidebarSection = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarSection() from the server but SidebarSection is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"SidebarSection\",\n);\nexport const SidebarStylesProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarStylesProvider() from the server but SidebarStylesProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"SidebarStylesProvider\",\n);\nexport const SidebarToggleButton = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarToggleButton() from the server but SidebarToggleButton is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"SidebarToggleButton\",\n);\nexport const Snackbar = registerClientReference(\n    function() { throw new Error(\"Attempted to call Snackbar() from the server but Snackbar is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"Snackbar\",\n);\nexport const StepperProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call StepperProvider() from the server but StepperProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"StepperProvider\",\n);\nexport const Steps = registerClientReference(\n    function() { throw new Error(\"Attempted to call Steps() from the server but Steps is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"Steps\",\n);\nexport const StepsCompleted = registerClientReference(\n    function() { throw new Error(\"Attempted to call StepsCompleted() from the server but StepsCompleted is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"StepsCompleted\",\n);\nexport const StepsContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call StepsContent() from the server but StepsContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"StepsContent\",\n);\nexport const StepsItem = registerClientReference(\n    function() { throw new Error(\"Attempted to call StepsItem() from the server but StepsItem is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"StepsItem\",\n);\nexport const StructuredList = registerClientReference(\n    function() { throw new Error(\"Attempted to call StructuredList() from the server but StructuredList is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"StructuredList\",\n);\nexport const StructuredListButton = registerClientReference(\n    function() { throw new Error(\"Attempted to call StructuredListButton() from the server but StructuredListButton is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"StructuredListButton\",\n);\nexport const StructuredListCell = registerClientReference(\n    function() { throw new Error(\"Attempted to call StructuredListCell() from the server but StructuredListCell is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"StructuredListCell\",\n);\nexport const StructuredListHeader = registerClientReference(\n    function() { throw new Error(\"Attempted to call StructuredListHeader() from the server but StructuredListHeader is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"StructuredListHeader\",\n);\nexport const StructuredListIcon = registerClientReference(\n    function() { throw new Error(\"Attempted to call StructuredListIcon() from the server but StructuredListIcon is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"StructuredListIcon\",\n);\nexport const StructuredListItem = registerClientReference(\n    function() { throw new Error(\"Attempted to call StructuredListItem() from the server but StructuredListItem is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"StructuredListItem\",\n);\nexport const Timeline = registerClientReference(\n    function() { throw new Error(\"Attempted to call Timeline() from the server but Timeline is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"Timeline\",\n);\nexport const TimelineContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call TimelineContent() from the server but TimelineContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"TimelineContent\",\n);\nexport const TimelineDot = registerClientReference(\n    function() { throw new Error(\"Attempted to call TimelineDot() from the server but TimelineDot is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"TimelineDot\",\n);\nexport const TimelineIcon = registerClientReference(\n    function() { throw new Error(\"Attempted to call TimelineIcon() from the server but TimelineIcon is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"TimelineIcon\",\n);\nexport const TimelineItem = registerClientReference(\n    function() { throw new Error(\"Attempted to call TimelineItem() from the server but TimelineItem is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"TimelineItem\",\n);\nexport const TimelineSeparator = registerClientReference(\n    function() { throw new Error(\"Attempted to call TimelineSeparator() from the server but TimelineSeparator is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"TimelineSeparator\",\n);\nexport const TimelineTrack = registerClientReference(\n    function() { throw new Error(\"Attempted to call TimelineTrack() from the server but TimelineTrack is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"TimelineTrack\",\n);\nexport const ViewIcon = registerClientReference(\n    function() { throw new Error(\"Attempted to call ViewIcon() from the server but ViewIcon is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"ViewIcon\",\n);\nexport const ViewOffIcon = registerClientReference(\n    function() { throw new Error(\"Attempted to call ViewOffIcon() from the server but ViewOffIcon is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"ViewOffIcon\",\n);\nexport const Web3Address = registerClientReference(\n    function() { throw new Error(\"Attempted to call Web3Address() from the server but Web3Address is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"Web3Address\",\n);\nexport const createIcon = registerClientReference(\n    function() { throw new Error(\"Attempted to call createIcon() from the server but createIcon is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"createIcon\",\n);\nexport const createStandAloneSnackbar = registerClientReference(\n    function() { throw new Error(\"Attempted to call createStandAloneSnackbar() from the server but createStandAloneSnackbar is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"createStandAloneSnackbar\",\n);\nexport const defaultPresenceTokens = registerClientReference(\n    function() { throw new Error(\"Attempted to call defaultPresenceTokens() from the server but defaultPresenceTokens is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"defaultPresenceTokens\",\n);\nexport const splitProps = registerClientReference(\n    function() { throw new Error(\"Attempted to call splitProps() from the server but splitProps is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"splitProps\",\n);\nexport const useCollapse = registerClientReference(\n    function() { throw new Error(\"Attempted to call useCollapse() from the server but useCollapse is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"useCollapse\",\n);\nexport const useCollapseContext = registerClientReference(\n    function() { throw new Error(\"Attempted to call useCollapseContext() from the server but useCollapseContext is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"useCollapseContext\",\n);\nexport const useContextMenu = registerClientReference(\n    function() { throw new Error(\"Attempted to call useContextMenu() from the server but useContextMenu is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"useContextMenu\",\n);\nexport const useContextMenuContext = registerClientReference(\n    function() { throw new Error(\"Attempted to call useContextMenuContext() from the server but useContextMenuContext is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"useContextMenuContext\",\n);\nexport const useEmptyStateStyles = registerClientReference(\n    function() { throw new Error(\"Attempted to call useEmptyStateStyles() from the server but useEmptyStateStyles is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"useEmptyStateStyles\",\n);\nexport const useLink = registerClientReference(\n    function() { throw new Error(\"Attempted to call useLink() from the server but useLink is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"useLink\",\n);\nexport const useNavGroupStyles = registerClientReference(\n    function() { throw new Error(\"Attempted to call useNavGroupStyles() from the server but useNavGroupStyles is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"useNavGroupStyles\",\n);\nexport const useNavItemStyles = registerClientReference(\n    function() { throw new Error(\"Attempted to call useNavItemStyles() from the server but useNavItemStyles is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"useNavItemStyles\",\n);\nexport const useNavbar = registerClientReference(\n    function() { throw new Error(\"Attempted to call useNavbar() from the server but useNavbar is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"useNavbar\",\n);\nexport const useNavbarContext = registerClientReference(\n    function() { throw new Error(\"Attempted to call useNavbarContext() from the server but useNavbarContext is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"useNavbarContext\",\n);\nexport const useSaas = registerClientReference(\n    function() { throw new Error(\"Attempted to call useSaas() from the server but useSaas is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"useSaas\",\n);\nexport const useSidebarContext = registerClientReference(\n    function() { throw new Error(\"Attempted to call useSidebarContext() from the server but useSidebarContext is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"useSidebarContext\",\n);\nexport const useSidebarStyles = registerClientReference(\n    function() { throw new Error(\"Attempted to call useSidebarStyles() from the server but useSidebarStyles is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"useSidebarStyles\",\n);\nexport const useSidebarToggleButton = registerClientReference(\n    function() { throw new Error(\"Attempted to call useSidebarToggleButton() from the server but useSidebarToggleButton is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"useSidebarToggleButton\",\n);\nexport const useSnackbar = registerClientReference(\n    function() { throw new Error(\"Attempted to call useSnackbar() from the server but useSnackbar is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"useSnackbar\",\n);\nexport const useStep = registerClientReference(\n    function() { throw new Error(\"Attempted to call useStep() from the server but useStep is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"useStep\",\n);\nexport const useStepper = registerClientReference(\n    function() { throw new Error(\"Attempted to call useStepper() from the server but useStepper is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"useStepper\",\n);\nexport const useStepperContext = registerClientReference(\n    function() { throw new Error(\"Attempted to call useStepperContext() from the server but useStepperContext is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"useStepperContext\",\n);\nexport const useStepperNextButton = registerClientReference(\n    function() { throw new Error(\"Attempted to call useStepperNextButton() from the server but useStepperNextButton is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"useStepperNextButton\",\n);\nexport const useStepperPrevButton = registerClientReference(\n    function() { throw new Error(\"Attempted to call useStepperPrevButton() from the server but useStepperPrevButton is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"useStepperPrevButton\",\n);\nexport const useTimelineStyles = registerClientReference(\n    function() { throw new Error(\"Attempted to call useTimelineStyles() from the server but useTimelineStyles is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/core/dist/index.mjs\",\n    \"useTimelineStyles\",\n);\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1414, "column": 0}, "map": {"version":3,"sources":["file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/core/src/command/command.tsx","file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/core/src/typography/br.tsx","file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/core/src/empty-state/empty-state.tsx","file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/core/src/error-boundary/error-boundary.tsx","file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/core/src/provider/saas-provider.tsx","file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/core/src/provider/use-link.tsx","file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/core/src/app-shell/app-shell.tsx","file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/core/src/app-shell/app-shell-context.ts","file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/core/src/sidebar/sidebar-utils.ts","file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/core/src/banner/banner.tsx","file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/core/src/banner/icons.tsx","file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/core/src/banner/banner-transition.tsx","file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/core/src/collapse/use-collapse.ts","file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/core/src/structured-list/list.tsx","file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/core/src/link/link.tsx","file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/core/src/loading-overlay/loading-overlay.tsx","file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/core/src/menu/overflow-menu.tsx","file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/core/src/menu/icons.tsx","file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/core/src/menu/context-menu.tsx","file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/saas-ui-hooks/src/use-promise.tsx","file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/saas-ui-hooks/src/use-local-storage.ts","file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/saas-ui-hooks/src/use-steps.ts","file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/saas-ui-hooks/src/use-script.ts","file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/saas-ui-hooks/src/use-scroll-position.ts","file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/saas-ui-hooks/src/use-outside-click.ts","file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/core/src/persona/persona.tsx","file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/core/src/property/property.tsx","file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/core/src/navbar/use-navbar.ts","file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/core/src/navbar/navbar-context.ts","file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/core/src/navbar/navbar.tsx","file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/core/src/navbar/navbar-brand.tsx","file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/core/src/navbar/navbar-content.tsx","file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/core/src/navbar/navbar-item.tsx","file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/core/src/navbar/navbar-link.tsx","file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/core/src/sidebar/sidebar.tsx","file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/core/src/sidebar/use-sidebar.ts","file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/core/src/sidebar/sidebar-context.tsx","file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/core/src/sidebar/nav.tsx","file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/core/src/sidebar/nav-group.tsx","file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/core/src/sidebar/nav-context.tsx","file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/core/src/sidebar/nav-item.tsx","file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/core/src/search-input/search-input.tsx","file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/core/src/snackbar/use-snackbar.tsx","file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/core/src/snackbar/standalone.tsx","file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/core/src/stepper/steps.tsx","file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/core/src/stepper/use-stepper.tsx","file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/core/src/web3-address/address.tsx","file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/core/src/timeline/timeline.tsx","file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/core/src/icon-badge/icon-badge.tsx"],"sourcesContent":["import * as React from 'react'\n\nimport { chakra, Kbd, HTMLChakraProps, useStyleConfig } from '@chakra-ui/react'\nimport { cx } from '@chakra-ui/utils'\n\nconst Key: React.FC<HTMLChakraProps<'span'>> = ({ children }) => {\n  if (typeof children !== 'string') {\n    return <>{children}</>\n  }\n\n  if (['then', 'or', '+'].includes(children)) {\n    return <chakra.span>{children}</chakra.span>\n  }\n\n  return <Kbd>{children}</Kbd>\n}\n\n/**\n * Command\n * A command is used to show which key or combination of keys performs a given action.\n *\n * All single letters A-Z are uppercase.\n * For non-letter keys such as enter, esc and shift, stick to lowercase.\n * Use symbols (⌥ ⇧ ⌃ ⌘) as opposed to spelling things out.\n */\nexport const Command: React.FC<HTMLChakraProps<'span'>> = (props) => {\n  const { children, className, ...rest } = props\n  if (typeof children !== 'string') {\n    return <>{children}</>\n  }\n  const keys = children.split(/\\s|\\+/)\n\n  const styles = useStyleConfig('SuiCommand')\n\n  const commandStyles = {\n    '& > *:not(style) ~ *:not(style)': { marginEnd: 1 },\n    color: 'muted',\n    ...styles,\n  }\n\n  return (\n    <chakra.span\n      className={cx('sui-command', className)}\n      __css={commandStyles}\n      {...rest}\n    >\n      {keys.map((key) => (\n        <Key key={key}>{key}</Key>\n      ))}\n    </chakra.span>\n  )\n}\n","import * as React from 'react'\nimport { chakra, HTMLChakraProps } from '@chakra-ui/react'\n\nexport const Br: React.FC<HTMLChakraProps<'span'>> = (props) => {\n  return (\n    <chakra.span {...props}>\n      <br />\n    </chakra.span>\n  )\n}\n","import * as React from 'react'\nimport {\n  forwardRef,\n  Icon,\n  chakra,\n  ThemingProps,\n  omitThemingProps,\n  useMultiStyleConfig,\n  ButtonGroup,\n  IconProps,\n  SystemProps,\n  SystemStyleObject,\n  HTMLChakraProps,\n  TextProps,\n  ButtonGroupProps,\n  createStylesContext,\n} from '@chakra-ui/react'\n\nimport { cx } from '@chakra-ui/utils'\n\nconst [StylesProvider, useStyles] = createStylesContext('SuiEmptyState')\n\nexport const useEmptyStateStyles = useStyles\n\nexport interface EmptyStateProps\n  extends Omit<EmptyStateContainerProps, 'title'> {\n  title?: React.ReactNode\n  description?: React.ReactNode\n  icon?: React.ElementType\n  actions?: React.ReactNode\n  footer?: React.ReactNode\n  children?: React.ReactNode\n  spacing?: SystemProps['margin']\n}\n/**\n * Display actionable feedback when no data is available.\n *\n * @see Docs https://saas-ui.dev/docs/components/data-display/empty-state\n */\nexport const EmptyState: React.FC<EmptyStateProps> = (props) => {\n  const {\n    children,\n    spacing,\n    icon,\n    title,\n    description,\n    actions,\n    footer,\n    ...rest\n  } = props\n\n  return (\n    <EmptyStateContainer {...rest}>\n      <EmptyStateBody spacing={spacing}>\n        {icon && <EmptyStateIcon as={icon} />}\n        <chakra.div>\n          {title && <EmptyStateTitle>{title}</EmptyStateTitle>}\n          {description && (\n            <EmptyStateDescription>{description}</EmptyStateDescription>\n          )}\n        </chakra.div>\n        {children}\n\n        {actions && <EmptyStateActions>{actions}</EmptyStateActions>}\n        {footer && <EmptyStateFooter>{footer}</EmptyStateFooter>}\n      </EmptyStateBody>\n    </EmptyStateContainer>\n  )\n}\n\nEmptyState.displayName = 'EmptyState'\n\nexport interface EmptyStateContainerProps\n  extends HTMLChakraProps<'div'>,\n    ThemingProps<'SuiEmptyState'> {\n  children?: React.ReactNode\n  spacing?: SystemProps['margin']\n}\n\nexport const EmptyStateContainer: React.FC<EmptyStateContainerProps> = (\n  props\n) => {\n  const { children, spacing, ...rest } = props\n  const styles = useMultiStyleConfig('SuiEmptyState', props)\n\n  const containerProps = omitThemingProps(rest)\n\n  const containerStyles: SystemStyleObject = {\n    display: 'flex',\n    flex: 1,\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    ...styles.container,\n  }\n\n  return (\n    <StylesProvider value={styles}>\n      <chakra.div\n        {...containerProps}\n        __css={containerStyles}\n        className={cx('sui-empty-state', props.className)}\n      >\n        {children}\n      </chakra.div>\n    </StylesProvider>\n  )\n}\n\nEmptyStateContainer.displayName = 'EmptyStateContainer'\n\nexport const EmptyStateIcon = forwardRef<IconProps, typeof Icon>(\n  (props, ref) => {\n    const styles = useStyles()\n\n    return (\n      <Icon\n        ref={ref}\n        role=\"presentation\"\n        {...props}\n        boxSize={props.boxSize ?? 10}\n        sx={{\n          ...styles.icon,\n          ...props.sx,\n        }}\n        className={cx('sui-empty-state__icon', props.className)}\n      />\n    )\n  }\n)\n\nEmptyStateIcon.displayName = 'EmptyStateIcon'\n\nexport interface EmptyStateTitleProps extends HTMLChakraProps<'h3'> {}\n\nexport const EmptyStateTitle: React.FC<EmptyStateTitleProps> = (props) => {\n  const styles = useStyles()\n\n  const titleStyles = {\n    mb: 1,\n    ...styles.title,\n  }\n\n  return (\n    <chakra.h3\n      __css={titleStyles}\n      {...props}\n      className={cx('sui-empty-state__title', props.className)}\n    />\n  )\n}\n\nEmptyStateTitle.displayName = 'EmptyStateTitle'\n\nexport const EmptyStateDescription: React.FC<TextProps> = (props) => {\n  const styles = useStyles()\n\n  const descriptionStyles: SystemStyleObject = {\n    color: 'muted',\n    fontSize: 'md',\n    ...styles.description,\n  }\n\n  return (\n    <chakra.p\n      __css={descriptionStyles}\n      {...props}\n      className={cx('sui-empty-state__description', props.className)}\n    />\n  )\n}\n\nEmptyStateDescription.displayName = 'EmptyStateDescription'\n\nexport interface EmptyStateBodyProps extends HTMLChakraProps<'div'> {\n  spacing?: SystemProps['margin']\n}\n\nexport const EmptyStateBody: React.FC<EmptyStateBodyProps> = (props) => {\n  const { spacing = 8, ...rest } = props\n  const styles = useStyles()\n\n  const bodyStyles: SystemStyleObject = {\n    ...styles.body,\n  }\n\n  return (\n    <chakra.div\n      __css={bodyStyles}\n      {...rest}\n      className={cx('sui-empty-state__body', props.className)}\n    />\n  )\n}\n\nEmptyStateBody.displayName = 'EmptyStateBody'\n\nexport const EmptyStateActions: React.FC<ButtonGroupProps> = (props) => {\n  const styles = useStyles()\n  return (\n    <ButtonGroup\n      sx={styles.actions}\n      {...props}\n      className={cx('sui-empty-state__actions', props.className)}\n    />\n  )\n}\n\nEmptyStateActions.displayName = 'EmptyStateActions'\n\nexport const EmptyStateFooter: React.FC<HTMLChakraProps<'footer'>> = (\n  props\n) => {\n  const styles = useStyles()\n  return (\n    <chakra.footer\n      __css={styles.footer}\n      {...props}\n      className={cx('sui-empty-state__footer', props.className)}\n    />\n  )\n}\n\nEmptyStateFooter.displayName = 'EmptyStateFooter'\n","import * as React from 'react'\n\nimport { SaasContext } from '../provider'\n\nexport interface ErrorBoundaryProps {\n  fallback?: React.ReactNode\n  children: React.ReactNode\n  onError?: (error: Error, errorInfo: React.ErrorInfo) => void\n}\n\nexport interface ErrorBoundaryState {\n  error?: Error | null\n  errorInfo?: any\n}\n/**\n * A container component that catches errors and displays a fallback UI.\n *\n * @see Docs https://saas-ui.dev/docs/components/utils/error-boundary\n */\nexport class ErrorBoundary extends React.Component<ErrorBoundaryProps> {\n  state: ErrorBoundaryState\n\n  static contextType = SaasContext\n\n  declare context: React.ContextType<typeof SaasContext>\n\n  constructor(props: ErrorBoundaryProps) {\n    super(props)\n    this.state = { error: null }\n  }\n\n  static getDerivedStateFromError(error: Error) {\n    return { error }\n  }\n\n  onError = (error: Error, errorInfo: any) => {\n    this.props.onError?.(error, errorInfo)\n    this.context.onError?.(error, errorInfo)\n  }\n\n  componentDidCatch(error: Error, errorInfo: any) {\n    this.onError(error, errorInfo)\n  }\n\n  render() {\n    if (this.state.error) {\n      return this.props.fallback || <h1>Something went wrong.</h1>\n    }\n\n    return this.props.children\n  }\n}\n","import * as React from 'react'\n\nimport { ChakraProvider, ChakraProviderProps } from '@chakra-ui/react'\n\nimport { theme as defaultTheme } from '@saas-ui/theme'\nimport { Dict } from '@chakra-ui/utils'\n\nexport interface SaasContextValue {\n  linkComponent?: React.ElementType<any>\n  onError?: (error: Error, errorInfo: React.ErrorInfo) => void\n}\n\nexport const SaasContext = React.createContext<SaasContextValue>({})\n\nexport interface SaasProviderProps extends ChakraProviderProps {\n  theme?: Dict\n  linkComponent?: React.ElementType<any>\n  children: React.ReactNode\n  onError?: (error: Error, errorInfo: React.ErrorInfo) => void\n}\n\nexport function SaasProvider(props: SaasProviderProps) {\n  const { theme, linkComponent, onError, children, ...rest } = props\n\n  const context = {\n    linkComponent,\n    onError,\n  }\n\n  return (\n    <SaasContext.Provider value={context}>\n      <ChakraProvider {...rest} theme={theme || defaultTheme}>\n        {children}\n      </ChakraProvider>\n    </SaasContext.Provider>\n  )\n}\n\nexport const useSaas = (): SaasContextValue => React.useContext(SaasContext)\n","import React from 'react'\nimport { chakra } from '@chakra-ui/react'\nimport { useSaas } from './saas-provider'\n\nconst Link: React.FC<any> = (props) => <chakra.a {...props} />\n\nexport function useLink(): React.ElementType<any> {\n  const context = useSaas()\n  if (context?.linkComponent) {\n    return context.linkComponent\n  }\n  return Link\n}\n","import * as React from 'react'\n\nimport {\n  Flex,\n  createStylesContext,\n  HTMLChakraProps,\n  ThemingProps,\n  useMultiStyleConfig,\n  omitThemingProps,\n  SystemStyleObject,\n  forwardRef,\n} from '@chakra-ui/react'\n\nimport { cx } from '@chakra-ui/utils'\nimport { AppShellProvider, useAppShell } from './app-shell-context'\n\nconst [StylesProvider, useStyles] = createStylesContext('SuiAppShell')\n\nexport interface AppShellProps\n  extends HTMLChakraProps<'div'>,\n    ThemingProps<'SuiAppShell'> {\n  /**\n   * The top header navigation\n   */\n  navbar?: React.ReactNode\n  /**\n   * Main sidebar, positioned on the left\n   */\n  sidebar?: React.ReactElement\n  /**\n   * Secondary sidebar, positioned on the right\n   */\n  aside?: React.ReactNode\n  /**\n   * The footer\n   */\n  footer?: React.ReactNode\n  /**\n   * The main content\n   */\n  children: React.ReactNode\n  mainRef?: React.RefObject<HTMLDivElement>\n}\n\n/**\n * The App Shell defines the main structure of your app.\n *\n * @see Docs https://saas-ui.dev/docs/components/layout/app-shell\n */\nexport const AppShell = forwardRef<AppShellProps, 'div'>((props, ref) => {\n  const styles = useMultiStyleConfig('SuiAppShell', props) as Record<\n    string,\n    SystemStyleObject\n  >\n\n  const {\n    navbar,\n    sidebar,\n    aside,\n    footer,\n    children,\n    mainRef,\n    ...containerProps\n  } = omitThemingProps(props)\n\n  const containerStyles: SystemStyleObject = {\n    flexDirection: 'column',\n    ...styles.container,\n  }\n\n  const innerStyles: SystemStyleObject = {\n    flex: 1,\n    minHeight: 0, // make sure child flex divs get correct height.\n    minWidth: 0, // make sure child flex divs get correct width.\n    ...styles.inner,\n  }\n\n  const mainStyles: SystemStyleObject = {\n    flex: 1,\n    flexDirection: 'column',\n    minWidth: 0, // make sure child flex divs get correct width.\n    ...styles.main,\n  }\n\n  const isSidebar =\n    React.isValidElement(sidebar) && (sidebar as any).type.id === 'Sidebar'\n\n  const context = useAppShell({\n    toggleBreakpoint: isSidebar\n      ? (sidebar as any)?.props.toggleBreakpoint\n      : undefined,\n  })\n\n  return (\n    <AppShellProvider value={context}>\n      <StylesProvider value={styles}>\n        <Flex\n          ref={ref}\n          {...containerProps}\n          sx={containerStyles}\n          className={cx('sui-app-shell', props.className)}\n        >\n          {navbar}\n          <Flex sx={innerStyles} className=\"saas-app-shell__inner\">\n            {sidebar}\n            <Flex\n              ref={mainRef}\n              sx={mainStyles}\n              className=\"saas-app-shell__main\"\n            >\n              {children}\n            </Flex>\n            {aside}\n          </Flex>\n          {footer}\n        </Flex>\n      </StylesProvider>\n    </AppShellProvider>\n  )\n})\n\nAppShell.displayName = 'AppShell'\n","import * as React from 'react'\nimport { createContext } from '@chakra-ui/utils'\nimport { useBreakpointValue, useDisclosure } from '@chakra-ui/react'\nimport { Breakpoints, getBreakpoints } from '../sidebar/sidebar-utils'\n\nexport const [AppShellProvider, useAppShellContext] = createContext<\n  ReturnType<typeof useAppShell>\n>({\n  strict: false,\n  errorMessage: 'AppShell context not available.',\n})\n\nexport interface UseAppShellProps {\n  toggleBreakpoint?: Breakpoints\n}\n\nexport const useAppShell = (props: UseAppShellProps) => {\n  const disclosure = useDisclosure()\n\n  const breakpoints = getBreakpoints(props.toggleBreakpoint)\n\n  const isMobile = useBreakpointValue(breakpoints, {\n    fallback: props.toggleBreakpoint || 'lg',\n  })\n\n  return {\n    isSidebarOpen: disclosure.isOpen,\n    closeSidebar: disclosure.onClose,\n    openSidebar: disclosure.onOpen,\n    toggleSidebar: disclosure.onToggle,\n    isMobile,\n  }\n}\n","export type Breakpoints = false | 'base' | 'sm' | 'md' | 'lg' | 'xl' | '2xl'\nexport const getBreakpoints = (breakpoint: Breakpoints = 'lg') => {\n  return breakpoint\n    ? {\n        base: true,\n        [breakpoint]: false,\n      }\n    : { base: false }\n}\n","import * as React from 'react'\nimport {\n  CloseButton,\n  CloseButtonProps,\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  ButtonGroup,\n  ButtonGroupProps,\n  SystemStyleObject,\n  ThemingProps,\n  useMultiStyleConfig,\n  HTMLChakraProps,\n  createStylesContext,\n  Icon,\n} from '@chakra-ui/react'\nimport { callAllHandlers, cx, createContext } from '@chakra-ui/utils'\n\nimport { InfoIcon, WarningIcon, CheckIcon } from './icons'\n\nimport { AnimatePresence } from 'framer-motion'\n\nimport {\n  BannerTransition,\n  BannerTransitionProps,\n  BannerMotion,\n} from './banner-transition'\n\nconst [StylesProvider, useStyles] = createStylesContext('SuiBanner')\n\nconst STATUSES = {\n  info: { icon: InfoIcon, colorScheme: 'blue' },\n  warning: { icon: WarningIcon, colorScheme: 'orange' },\n  success: { icon: CheckIcon, colorScheme: 'green' },\n  error: { icon: WarningIcon, colorScheme: 'red' },\n}\n\nexport type BannerStatus = keyof typeof STATUSES\n\ninterface BannerOptions {\n  /**\n   * The status of the banner.\n   */\n  status?: BannerStatus\n  /**\n   * Show or hide the banner.\n   */\n  isOpen?: boolean\n  /**\n   * Callback fired when the close button is clicked.\n   */\n  onClose?: () => void\n  /**\n   * Customize the close animation.\n   * @default 'slideOutTop'\n   * @type 'slideOutTop', 'slideOutBottom', 'fade', 'scale', 'none'\n   */\n  motionPreset?: BannerMotion\n}\n\ninterface BannerContext extends BannerOptions {\n  id: string\n  status: BannerStatus\n}\n\nconst [BannerProvider, useBannerContext] = createContext<BannerContext>({\n  name: 'BannerContext',\n  errorMessage:\n    'useBannerContext: `context` is undefined. Seems you forgot to wrap banner components in `<Banner />`',\n})\n\nexport interface BannerProps\n  extends Omit<BannerTransitionProps, 'motionPreset'>,\n    BannerOptions,\n    ThemingProps<'SuiBanner'> {}\n\n/**\n * Banner is used to communicate the state or status of a\n * page, feature or action\n *\n * @see Docs https://saas-ui.dev/docs/components/feedback/banner\n */\nexport const Banner = forwardRef<BannerProps, 'div'>((props, ref) => {\n  const {\n    id,\n    status = 'info',\n    isOpen = true,\n    onClose,\n    motionPreset = 'slideOutTop',\n    ...rest\n  } = omitThemingProps(props)\n  const colorScheme = props.colorScheme ?? STATUSES[status].colorScheme\n\n  const styles = useMultiStyleConfig('SuiBanner', {\n    ...props,\n    colorScheme,\n  })\n\n  const containerStyles: SystemStyleObject = {\n    width: '100%',\n    display: 'flex',\n    alignItems: 'center',\n    position: 'relative',\n    overflow: 'hidden',\n    ...styles.container,\n  }\n\n  const context = {\n    id: id || `banner-${React.useId()}`,\n    status,\n    onClose,\n    isOpen,\n  }\n\n  const role = ['warning', 'error'].includes(status) ? 'alert' : 'status'\n\n  const animate = isOpen ? 'enter' : 'exit'\n\n  return (\n    <BannerProvider value={context}>\n      <StylesProvider value={styles}>\n        <AnimatePresence>\n          {isOpen && (\n            <BannerTransition\n              id={context.id}\n              role={role}\n              ref={ref}\n              motionPreset={motionPreset}\n              animate={animate}\n              {...rest}\n              className={cx('sui-banner', props.className)}\n              __css={containerStyles}\n            />\n          )}\n        </AnimatePresence>\n      </StylesProvider>\n    </BannerProvider>\n  )\n})\n\nBanner.displayName = 'Banner'\n\nexport interface BannerContentProps extends HTMLChakraProps<'div'> {}\n\n/**\n * The wrapper for the banner title and description.\n *\n * @see Docs https://saas-ui.dev/docs/components/feedback/banner\n */\nexport const BannerContent = forwardRef<BannerContentProps, 'div'>(\n  (props, ref) => {\n    const styles = useStyles()\n\n    return (\n      <chakra.div\n        ref={ref}\n        {...props}\n        className={cx('sui-banner__content', props.className)}\n        __css={styles.content}\n      />\n    )\n  }\n)\n\nBannerContent.displayName = 'BannerContent'\n\nexport interface BannerDescriptionProps extends HTMLChakraProps<'div'> {}\n\nexport interface BannerTitleProps extends HTMLChakraProps<'div'> {}\n\n/**\n * The title of the banner to be announced by screen readers.\n *\n * @see Docs https://saas-ui.dev/docs/components/feedback/banner\n */\nexport const BannerTitle = forwardRef<BannerTitleProps, 'div'>((props, ref) => {\n  const styles = useStyles()\n\n  return (\n    <chakra.div\n      ref={ref}\n      {...props}\n      className={cx('sui-banner__title', props.className)}\n      __css={styles.title}\n    />\n  )\n})\n\nBannerTitle.displayName = 'BannerTitle'\n\nexport interface BannerDescriptionProps extends HTMLChakraProps<'div'> {}\n\n/**\n * The description of the banner to be announced by screen readers.\n *\n * @see Docs https://saas-ui.dev/docs/components/feedback/banner\n */\nexport const BannerDescription = forwardRef<BannerDescriptionProps, 'div'>(\n  (props, ref) => {\n    const styles = useStyles()\n    const descriptionStyles: SystemStyleObject = {\n      display: 'inline',\n      ...styles.description,\n    }\n\n    return (\n      <chakra.div\n        ref={ref}\n        {...props}\n        className={cx('sui-banner__desc', props.className)}\n        __css={descriptionStyles}\n      />\n    )\n  }\n)\n\nBannerDescription.displayName = 'BannerDescription'\n\nexport interface BannerActionsProps\n  extends HTMLChakraProps<'div'>,\n    ButtonGroupProps {}\n\n/**\n * The banner actions, renders a ButtonGroup.\n *\n * @see Docs https://saas-ui.dev/docs/components/feedback/banner\n */\nexport const BannerActions = forwardRef<BannerActionsProps, 'div'>(\n  (props, ref) => {\n    const { children, variant } = props\n    const styles = useStyles()\n\n    return (\n      <chakra.div\n        ref={ref}\n        {...props}\n        className={cx('sui-banner__actions', props.className)}\n        __css={styles.actions}\n      >\n        <ButtonGroup variant={variant}>{children}</ButtonGroup>\n      </chakra.div>\n    )\n  }\n)\n\nBannerActions.displayName = 'BannerActions'\n\nexport interface BannerIconProps extends HTMLChakraProps<'span'> {\n  icon?: React.ElementType\n}\n\n/**\n * The visual icon for the banner.\n *\n * @see Docs https://saas-ui.dev/docs/components/feedback/banner\n */\nexport const BannerIcon: React.FC<BannerIconProps> = (props) => {\n  const { status } = useBannerContext()\n  const { icon, ...rest } = props\n  const { icon: statusIcon } = STATUSES[status]\n  const styles = useStyles()\n\n  return (\n    <chakra.span\n      display=\"inherit\"\n      {...rest}\n      className={cx('sui-banner__icon', props.className)}\n      __css={styles.icon}\n    >\n      <Icon as={icon || statusIcon} w=\"100%\" h=\"100%\" />\n    </chakra.span>\n  )\n}\n\nBannerIcon.displayName = 'BannerIcon'\n\n/**\n * The close button.\n *\n * @see Docs https://saas-ui.dev/docs/components/feedback/banner\n */\nexport const BannerCloseButton = forwardRef<CloseButtonProps, 'button'>(\n  (props, ref) => {\n    const { onClick, className, ...rest } = props\n    const { onClose, isOpen, id } = useBannerContext()\n\n    const _className = cx('sui-banner__close-btn', className)\n\n    const styles = useStyles()\n\n    return (\n      <CloseButton\n        ref={ref}\n        __css={styles.closeButton}\n        className={_className}\n        onClick={callAllHandlers(onClick, (event) => {\n          event.stopPropagation()\n          onClose?.()\n        })}\n        aria-controls={id}\n        aria-expanded={isOpen?.toString() ? 'true' : 'false'}\n        {...rest}\n      />\n    )\n  }\n)\n\nBannerCloseButton.displayName = 'BannerCloseButton'\n","import { Icon, IconProps } from '@chakra-ui/react'\n\nexport function CheckIcon(props: IconProps) {\n  return (\n    <Icon viewBox=\"0 0 24 24\" {...props}>\n      <path\n        fill=\"currentColor\"\n        d=\"M12,0A12,12,0,1,0,24,12,12.014,12.014,0,0,0,12,0Zm6.927,8.2-6.845,9.289a1.011,1.011,0,0,1-1.43.188L5.764,13.769a1,1,0,1,1,1.25-1.562l4.076,3.261,6.227-8.451A1,1,0,1,1,18.927,8.2Z\"\n      />\n    </Icon>\n  )\n}\n\nexport function InfoIcon(props: IconProps) {\n  return (\n    <Icon viewBox=\"0 0 24 24\" {...props}>\n      <path\n        fill=\"currentColor\"\n        d=\"M12,0A12,12,0,1,0,24,12,12.013,12.013,0,0,0,12,0Zm.25,5a1.5,1.5,0,1,1-1.5,1.5A1.5,1.5,0,0,1,12.25,5ZM14.5,18.5h-4a1,1,0,0,1,0-2h.75a.25.25,0,0,0,.25-.25v-4.5a.25.25,0,0,0-.25-.25H10.5a1,1,0,0,1,0-2h1a2,2,0,0,1,2,2v4.75a.25.25,0,0,0,.25.25h.75a1,1,0,1,1,0,2Z\"\n      />\n    </Icon>\n  )\n}\n\nexport function WarningIcon(props: IconProps) {\n  return (\n    <Icon viewBox=\"0 0 24 24\" {...props}>\n      <path\n        fill=\"currentColor\"\n        d=\"M11.983,0a12.206,12.206,0,0,0-8.51,3.653A11.8,11.8,0,0,0,0,12.207,11.779,11.779,0,0,0,11.8,24h.214A12.111,12.111,0,0,0,24,11.791h0A11.766,11.766,0,0,0,11.983,0ZM10.5,16.542a1.476,1.476,0,0,1,1.449-1.53h.027a1.527,1.527,0,0,1,1.523,1.47,1.475,1.475,0,0,1-1.449,1.53h-.027A1.529,1.529,0,0,1,10.5,16.542ZM11,12.5v-6a1,1,0,0,1,2,0v6a1,1,0,1,1-2,0Z\"\n      />\n    </Icon>\n  )\n}\n","import * as React from 'react'\nimport { chakra, ChakraProps } from '@chakra-ui/react'\nimport { HTMLMotionProps, motion } from 'framer-motion'\nimport { EASINGS, scaleFadeConfig, slideFadeConfig } from '@chakra-ui/react'\n\nexport type BannerMotion =\n  | 'slideOutTop'\n  | 'slideOutBottom'\n  | 'fade'\n  | 'scale'\n  | 'none'\n\nexport interface BannerTransitionProps\n  extends Omit<HTMLMotionProps<'div'>, 'color' | 'transition'>,\n    ChakraProps {\n  motionPreset: BannerMotion\n}\n\nconst defaultTransition = {\n  enter: {\n    duration: 0.2,\n    ease: EASINGS.easeOut,\n  },\n  exit: {\n    duration: 0.2,\n    ease: EASINGS.easeIn,\n  },\n}\n\nconst transitions = {\n  slideOutTop: {\n    ...slideFadeConfig,\n    custom: {\n      offsetY: '-100%',\n      reverse: true,\n      transition: defaultTransition,\n    },\n    initial: 'enter',\n  },\n  slideOutBottom: {\n    ...slideFadeConfig,\n    custom: {\n      offsetY: '100%',\n      reverse: true,\n      transition: defaultTransition,\n    },\n    initial: 'enter',\n  },\n  fade: {\n    ...slideFadeConfig,\n    custom: {\n      transition: defaultTransition,\n    },\n    initial: 'enter',\n  },\n  scale: {\n    ...scaleFadeConfig,\n    custom: { initialScale: 0.1, reverse: true, transition: defaultTransition },\n    initial: 'enter',\n  },\n  none: {\n    custom: {},\n  },\n}\n\nconst Motion = chakra(motion.div)\n\nexport const BannerTransition = React.forwardRef(\n  (props: BannerTransitionProps, ref: React.Ref<any>) => {\n    const { motionPreset, ...rest } = props\n\n    const preset = transitions[motionPreset]\n\n    const motionProps = {\n      ...preset,\n    }\n\n    return <Motion ref={ref} {...(motionProps as ChakraProps)} {...rest} />\n  }\n)\n","import * as React from 'react'\nimport { useDisclosure } from '@chakra-ui/react'\nimport { cx, createContext, PropGetter } from '@chakra-ui/utils'\n\nexport const [CollapseProvider, useCollapseContext] =\n  createContext<UseCollapseReturn>({\n    name: 'UseCollapseReturn',\n  })\n\nexport interface UseCollapse {\n  defaultIsOpen?: boolean\n  isOpen?: boolean\n  onOpen?: () => void\n  onClose?: () => void\n  isCollapsible?: boolean\n}\n\nexport const useCollapse = (props: UseCollapse = {}) => {\n  const { isCollapsible = true, ...rest } = props\n\n  const id = `collapse-${React.useId()}`\n\n  const { isOpen, onToggle, onOpen, onClose } = useDisclosure(rest)\n\n  const getToggleProps: PropGetter = React.useCallback(\n    (props = {}) => {\n      const { className, ...rest } = props\n      if (isCollapsible) {\n        return {\n          className: cx('sui-collapse-toggle', className),\n          onClick: () => onToggle(),\n          'aria-expanded': isOpen.toString(),\n          'aria-controls': id,\n          ...rest,\n        }\n      }\n      return {}\n    },\n    [isCollapsible, isOpen]\n  )\n\n  const getCollapseProps = React.useCallback(\n    (props: any = {}) => {\n      return {\n        id,\n        in: isOpen,\n        ...props,\n      }\n    },\n    [isOpen]\n  )\n\n  return {\n    isCollapsible,\n    isOpen,\n    getToggleProps,\n    getCollapseProps,\n    onToggle,\n    onOpen,\n    onClose,\n  }\n}\n\nexport interface UseCollapseReturn extends ReturnType<typeof useCollapse> {}\n","import * as React from 'react'\n\nimport {\n  chakra,\n  forwardRef,\n  HTMLChakraProps,\n  ThemingProps,\n  omitThemingProps,\n  SystemProps,\n  SystemStyleObject,\n  useMultiStyleConfig,\n  createStylesContext,\n  Icon,\n  useMergeRefs,\n} from '@chakra-ui/react'\n\nimport { callAllHandlers, cx, dataAttr, createContext } from '@chakra-ui/utils'\n\nimport { nextById, prevById, queryAll } from '@zag-js/dom-utils'\n\nconst [StylesProvider, useStyles] = createStylesContext('SuiStructuredList')\n\ninterface StructuredListContext {\n  id: string\n  containerRef: React.RefObject<HTMLUListElement>\n  focusId: string | null\n  setFocusId: React.Dispatch<React.SetStateAction<string | null>>\n}\n\nconst [StructuredListProvider, useStructuredListContext] =\n  createContext<StructuredListContext>({\n    name: 'StructuredListContext',\n    errorMessage:\n      'useStructuredListContext: `context` is undefined. Seems you forgot to wrap the components in `<StructuredList />`',\n  })\n\nfunction queryAllItems(root: HTMLElement | null) {\n  return queryAll(root, `[role='button']:not([disabled])`)\n}\n\nconst useStructuredList = (props: StructuredListProps) => {\n  const id = React.useId()\n\n  const ref = React.useRef<HTMLUListElement>(null)\n\n  const [focusId, setFocusId] = React.useState<string | null>(null)\n\n  const listProps: StructuredListProps = {\n    onBlur: callAllHandlers(props.onBlur, (e) => {\n      if (e.relatedTarget) {\n        const items = queryAllItems(ref.current)\n        if (!items.includes(e.relatedTarget as HTMLElement)) {\n          setFocusId(null)\n        }\n      }\n    }),\n  }\n\n  return {\n    id: props.id ?? id,\n    containerRef: ref,\n    focusId,\n    setFocusId,\n    listProps,\n  }\n}\n\ninterface StructuredListOptions {\n  /**\n   * An array of list items\n   */\n  items?: Array<StructuredListItemProps>\n}\n\nexport interface StructuredListProps\n  extends StructuredListOptions,\n    HTMLChakraProps<'ul'>,\n    ThemingProps<'SuiStructuredList'> {}\n\n/**\n * React component to render lists of data\n */\nexport const StructuredList = forwardRef<StructuredListProps, 'ul'>(\n  (props, ref) => {\n    const { items, children, ...rest } = props\n\n    const styles = useMultiStyleConfig('SuiStructuredList', rest)\n\n    const ownProps = omitThemingProps(rest)\n\n    let content\n    if (items) {\n      content = items.map((item: any, i: number) => {\n        return <StructuredListItem {...item} key={item.id || i} />\n      })\n    } else {\n      content = children\n    }\n\n    const listStyles: SystemStyleObject = {\n      py: 2,\n      position: 'relative',\n      ...styles.list,\n    }\n\n    const { listProps, ...context } = useStructuredList(props)\n\n    return (\n      <StructuredListProvider value={context}>\n        <StylesProvider value={styles}>\n          <chakra.ul\n            ref={useMergeRefs(ref, context.containerRef)}\n            __css={listStyles}\n            {...ownProps}\n            {...listProps}\n            className={cx('sui-list', props.className)}\n          >\n            {content}\n          </chakra.ul>\n        </StylesProvider>\n      </StructuredListProvider>\n    )\n  }\n)\n\nStructuredList.displayName = 'StructuredList'\n\nexport interface StructuredListHeaderProps extends HTMLChakraProps<'li'> {\n  /**\n   * Action rendered next to the title\n   */\n  action?: React.ReactNode\n  /**\n   * The aria-level\n   */\n  level?: number\n}\n\nexport const StructuredListHeader = forwardRef<StructuredListHeaderProps, 'li'>(\n  (props, ref) => {\n    const {\n      children,\n      onClick,\n      action,\n      role = 'heading',\n      level = 1,\n      ...rest\n    } = props\n    const styles = useStyles()\n\n    return (\n      <chakra.li\n        ref={ref}\n        __css={styles.header}\n        onClick={onClick}\n        {...rest}\n        className={cx('sui-list__header', props.className)}\n      >\n        <chakra.span flex=\"1\" userSelect=\"none\" role={role} aria-level={level}>\n          {children}\n        </chakra.span>\n        {action}\n      </chakra.li>\n    )\n  }\n)\n\nStructuredListHeader.displayName = 'StructuredListHeader'\n\nexport interface StructuredListItemProps extends HTMLChakraProps<'li'> {\n  onClick?: (e: React.MouseEvent) => void\n  href?: string | object\n  isDisabled?: boolean\n}\n\n/**\n * Adding `onClick` or `href` props will wrap the content in a `StructuredListButton`\n */\nexport const StructuredListItem = forwardRef<StructuredListItemProps, 'li'>(\n  (props, ref) => {\n    const { onClick, href, as, children, isDisabled, ...rest } = props\n\n    const styles = useStyles()\n\n    const isButton = !!(onClick || href)\n\n    const ContentWrapper = isButton ? StructuredListButton : React.Fragment\n    const disablePadding = !!isButton\n\n    const itemStyles: SystemStyleObject = {\n      ...styles.item,\n      ...(disablePadding ? { py: 0, px: 0 } : {}),\n    }\n\n    const wrapperProps = isButton\n      ? {\n          onClick,\n          href,\n          as,\n          isDisabled,\n        }\n      : {}\n\n    const content = isButton ? (\n      <ContentWrapper {...wrapperProps}>{children}</ContentWrapper>\n    ) : (\n      children\n    )\n\n    return (\n      <chakra.li\n        ref={ref}\n        __css={itemStyles}\n        {...rest}\n        className={cx('sui-list__item', props.className)}\n      >\n        {content}\n      </chakra.li>\n    )\n  }\n)\n\nStructuredListItem.displayName = 'StructuredListItem'\n\nconst useStructuredListButton = (props: StructuredListButtonProps) => {\n  const {\n    id: containerId,\n    containerRef,\n    focusId,\n    setFocusId,\n  } = useStructuredListContext()\n\n  const id = `${containerId}-${React.useId()}`\n  const buttonId = props.id ?? id\n\n  const isFocused = focusId === buttonId\n\n  function getItems() {\n    return queryAll(\n      containerRef.current,\n      `.sui-list__item-button:not([aria-disabled=true])`\n    )\n  }\n\n  const buttonProps = {\n    id: buttonId,\n    ['data-focus']: dataAttr(isFocused),\n    ['aria-disabled']: props.isDisabled ? 'true' : undefined,\n    tabIndex: props.isDisabled ? -1 : 0,\n    onFocus: callAllHandlers(props.onFocus, () => {\n      setFocusId(buttonId)\n    }),\n    onKeyDown: callAllHandlers(\n      props.onKeyDown,\n      React.useCallback(\n        (e: React.KeyboardEvent) => {\n          const items = getItems()\n\n          const keyMap: Record<string, React.KeyboardEventHandler> = {\n            ArrowUp: () => {\n              prevById(items, buttonId)?.focus()\n            },\n            ArrowDown: () => {\n              nextById(items, buttonId)?.focus()\n            },\n            Home: () => {\n              items[0]?.focus()\n            },\n            End: () => {\n              items[items.length - 1]?.focus()\n            },\n          }\n\n          if (keyMap[e.key]) {\n            e.preventDefault()\n            keyMap[e.key](e)\n          }\n        },\n        [buttonId]\n      )\n    ),\n    onClick: (e: React.MouseEvent) => {\n      if (props.isDisabled) {\n        e.preventDefault()\n        e.stopPropagation()\n        return\n      }\n\n      props.onClick?.(e)\n    },\n  }\n\n  return {\n    buttonProps,\n  }\n}\n\nexport interface StructuredListButtonProps extends HTMLChakraProps<'div'> {\n  onClick?: (e: React.MouseEvent) => void\n  as?: React.ElementType\n  isDisabled?: boolean\n}\n\n/**\n * Behaves like a button by default.\n * Use the 'as' prop to render a link.\n *\n * <StructuredListItemButton as=\"a\" href=\"/page\" />\n *\n * or\n *\n * <StructuredListItemButton as={Link} href={{path: '/page}} />\n */\nexport const StructuredListButton = forwardRef<\n  StructuredListButtonProps,\n  'div'\n>((props, ref) => {\n  const { children, isDisabled, ...rest } = props\n\n  const { buttonProps } = useStructuredListButton(props)\n\n  const styles = useStyles()\n\n  return (\n    <chakra.div\n      ref={ref}\n      __css={styles.button}\n      role=\"button\"\n      {...rest}\n      {...buttonProps}\n      className={cx('sui-list__item-button', props.className)}\n    >\n      {children}\n    </chakra.div>\n  )\n})\n\nStructuredListButton.displayName = 'StructuredListButton'\n\nexport interface StructuredListIconProps extends HTMLChakraProps<'div'> {\n  /**\n   * The icon size\n   * @default 5\n   */\n  size?: SystemProps['boxSize']\n  /**\n   * The icon spacing, ltr supported\n   */\n  spacing?: SystemProps['margin']\n}\n\nexport const StructuredListIcon: React.FC<StructuredListIconProps> = (\n  props\n) => {\n  const { children, spacing, size = 5, as, ...rest } = props\n  const styles = useStyles()\n\n  const iconStyles: SystemStyleObject = {\n    ...styles.icon,\n    me: spacing,\n  }\n\n  let _icon = children\n  if (!_icon && as) {\n    _icon = <Icon as={as} role=\"presentation\" boxSize={size} />\n  } else if (React.isValidElement(_icon) && _icon.type === Icon) {\n    _icon = React.cloneElement<any>(_icon, {\n      boxSize: size,\n    })\n  }\n\n  return (\n    <chakra.div\n      __css={iconStyles}\n      {...rest}\n      className={cx('sui-list__item-icon', props.className)}\n    >\n      {_icon}\n    </chakra.div>\n  )\n}\n\nStructuredListIcon.displayName = 'StructuredListItemIcon'\n\nexport interface StructuredListCellProps extends HTMLChakraProps<'div'> {}\n\nexport const StructuredListCell: React.FC<StructuredListCellProps> = (\n  props\n) => {\n  const { children, ...rest } = props\n  const styles = useStyles()\n\n  return (\n    <chakra.div\n      __css={styles.cell}\n      {...rest}\n      className={cx('sui-list__cell', props.className)}\n    >\n      {children}\n    </chakra.div>\n  )\n}\n\nStructuredListCell.displayName = 'StructuredListCell'\n","import { Link as ChakraLink, LinkProps, forwardRef } from '@chakra-ui/react'\nimport { useLink } from '../provider'\n\nexport type { LinkProps }\n\n/**\n * Chakra UI `Link` component wrapped in a router specific link component.\n * Falls back to a plain `Link` if no Saas UI context is available or no `linkComponent` is configured\n * The router link component can be configured in `SaasProvider`.\n * @see https://saas-ui.dev/docs/core/getting-started\n */\nexport const Link = forwardRef<LinkProps, 'a'>((props, ref) => {\n  const LinkComponent = useLink()\n\n  const { href, ...rest } = props\n\n  return <ChakraLink as={LinkComponent} ref={ref} href={href} {...rest} />\n})\n\nLink.displayName = 'Link'\n","import React, { useState } from 'react'\nimport {\n  chakra,\n  Spinner,\n  ThemingProps,\n  ThemeTypings,\n  SystemStyleObject,\n  createStylesContext,\n  useMultiStyleConfig,\n  HTMLChakraProps,\n  omitThemingProps,\n  SystemProps,\n  fadeConfig,\n  SpinnerProps,\n} from '@chakra-ui/react'\nimport { cx } from '@chakra-ui/utils'\n\nimport { AnimatePresence, motion } from 'framer-motion'\n\ntype Variants = 'fill' | 'overlay' | 'fullscreen'\n\nconst [StylesProvider, useStyles] = createStylesContext('SuiLoadingOverlay')\n\nexport const useLoadingOverlayStyles = useStyles\n\nexport interface LoadingOverlayProps\n  extends HTMLChakraProps<'div'>,\n    ThemingProps<'SuiLoadingOverlay'> {\n  /**\n   * Show or hide the LoadingOverlay.\n   * @default true\n   */\n  isLoading?: boolean\n\n  /**\n   * The transition that should be used for the overlay\n   * @default \"fade\"\n   */\n  motionPreset?: 'none' | 'fade'\n  /**\n   * Spacing between children\n   */\n  spacing?: SystemProps['margin']\n  /**\n   * @type \"fill\" | \"overlay\" | \"fullscreen\"\n   * @default \"fill\"\n   */\n  variant?: 'SuiLoadingOverlay' extends keyof ThemeTypings['components']\n    ? /* @ts-ignore */\n      ThemeTypings['components']['SuiLoadingOverlay']['variants']\n    : Variants\n}\n\nconst Motion = chakra(motion.div)\n\nexport const LoadingOverlay: React.FC<LoadingOverlayProps> = (props) => {\n  const styles = useMultiStyleConfig('SuiLoadingOverlay', props)\n\n  const {\n    children,\n    isLoading = true,\n    spacing = 2,\n    motionPreset,\n    ...rest\n  } = omitThemingProps(props)\n\n  const overlayStyles: SystemStyleObject = {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    '& > *:not(style) ~ *:not(style)': { marginTop: spacing },\n    ...styles.overlay,\n  }\n\n  const [animateInitial] = useState(!isLoading && motionPreset !== 'none')\n\n  const motionProps: any = motionPreset === 'none' ? {} : fadeConfig\n\n  return (\n    <StylesProvider value={styles}>\n      <AnimatePresence initial={animateInitial}>\n        {isLoading && (\n          <Motion\n            {...motionProps}\n            {...rest}\n            __css={overlayStyles}\n            className={cx('chakra-loading-overlay', props.className)}\n          >\n            {children}\n          </Motion>\n        )}\n      </AnimatePresence>\n    </StylesProvider>\n  )\n}\n\nLoadingOverlay.displayName = 'LoadingOverlay'\n\nexport const LoadingSpinner = Spinner\n\nexport type LoadingSpinnerProps = SpinnerProps\n\nexport interface LoadingTextProps extends HTMLChakraProps<'p'> {}\n\nexport const LoadingText: React.FC<LoadingTextProps> = (props) => {\n  const styles = useStyles()\n  return <chakra.p {...props} __css={styles.text}></chakra.p>\n}\n","import * as React from 'react'\nimport {\n  Menu,\n  MenuProps,\n  MenuButton,\n  MenuList,\n  MenuListProps,\n  IconButton,\n  ThemeTypings,\n} from '@chakra-ui/react'\nimport { MoreIcon } from './icons'\n\nexport interface OverflowMenuProps extends Omit<MenuProps, 'size'> {\n  /**\n   * The button (aria) label.\n   */\n  label?: string\n  /**\n   * The MenuButton variant.\n   */\n  variant?: 'Button' extends keyof ThemeTypings['components']\n    ? /* @ts-ignore */\n      ThemeTypings['components']['Button']['variants']\n    : string\n  /**\n   * The MenuButton size\n   */\n  size?: 'IconButton' extends keyof ThemeTypings['components']\n    ? /* @ts-ignore */\n      ThemeTypings['components']['IconButton']['sizes']\n    : string\n  /**\n   * Props passed to the MenuList.\n   */\n  menuListProps?: MenuListProps\n  /**\n   * Render a custom icon.\n   */\n  icon?: React.ReactElement\n\n  children: React.ReactNode\n}\n\nexport const OverflowMenu: React.FC<OverflowMenuProps> = (props) => {\n  const {\n    variant = 'ghost',\n    size,\n    label = 'More',\n    icon = <MoreIcon />,\n    menuListProps,\n    children,\n    ...rest\n  } = props\n  return (\n    <Menu {...rest}>\n      <MenuButton\n        as={IconButton}\n        icon={icon}\n        aria-label={label}\n        variant={variant}\n        size={size}\n      />\n      <MenuList {...menuListProps}>{children}</MenuList>\n    </Menu>\n  )\n}\n\nOverflowMenu.displayName = 'OverflowMenu'\n","import * as React from 'react'\nimport { Icon, IconProps } from '@chakra-ui/react'\n\nexport const MoreIcon = (props: IconProps) => {\n  return (\n    <Icon viewBox=\"0 0 24 24\" strokeWidth=\"2\" stroke=\"currentColor\" {...props}>\n      <circle cx=\"12\" cy=\"12\" r=\"1\"></circle>\n      <circle cx=\"12\" cy=\"5\" r=\"1\"></circle>\n      <circle cx=\"12\" cy=\"19\" r=\"1\"></circle>\n    </Icon>\n  )\n}\n","import * as React from 'react'\nimport { useCallback, useRef, useState } from 'react'\nimport {\n  chakra,\n  Menu,\n  MenuProps,\n  MenuList,\n  MenuListProps,\n  MenuItem,\n  HTMLChakraProps,\n  useMenuContext,\n  useEventListener,\n  forwardRef,\n  mergeRefs,\n} from '@chakra-ui/react'\n\nimport { callAllHandlers, runIfFn, createContext } from '@chakra-ui/utils'\n\n// @todo migrate this to Ark-ui ContextMenu\nimport { useLongPress } from '@react-aria/interactions'\n\nimport { getEventPoint } from '@zag-js/dom-event'\nimport { FocusableElement } from '@react-types/shared'\n\nimport { useOutsideClick } from '@saas-ui/hooks'\n\ntype Position = [number, number]\ntype Anchor = { x: number; y: number }\n\nexport type AnyPointerEvent = MouseEvent | TouchEvent | PointerEvent\n\nexport interface Point {\n  x: number\n  y: number\n}\n\nexport interface PointerEventInfo {\n  point: Point\n}\n\nexport interface MixedEventListener {\n  (e: AnyPointerEvent, info: PointerEventInfo): void\n}\n\nexport type PointType = 'page' | 'client'\n\nexport interface UseContextMenuReturn {\n  isOpen: boolean\n  anchor: Anchor\n  triggerRef: React.RefObject<HTMLSpanElement>\n  menuRef: React.RefObject<HTMLDivElement>\n  onClose: () => void\n  onOpen: (event: AnyPointerEvent) => void\n}\n\nexport const [ContextMenuProvider, useContextMenuContext] =\n  createContext<UseContextMenuReturn>({\n    name: 'UseContextMenuContext',\n    strict: false,\n  })\n\nexport interface UseContextMenuProps extends ContextMenuProps {\n  onClose?: () => void\n}\n\nexport const useContextMenu = (props: UseContextMenuProps) => {\n  const { closeOnBlur = true } = props\n  const [isOpen, setIsOpen] = useState(false)\n  const [anchor, setAnchor] = useState<Anchor>({ x: 0, y: 0 })\n  const triggerRef = useRef<HTMLSpanElement>(null)\n  const menuRef = useRef<HTMLDivElement>(null)\n\n  // useOutsideClick of menu doesn't catch contextmenu\n  useEventListener(\n    () => document,\n    'contextmenu',\n    (e) => {\n      if (\n        !triggerRef.current?.contains(e.target as any) &&\n        e.target !== triggerRef.current\n      ) {\n        setIsOpen(false)\n      } else {\n        e.preventDefault()\n        e.stopPropagation()\n      }\n    }\n  )\n\n  useOutsideClick({\n    enabled: isOpen && closeOnBlur,\n    ref: menuRef,\n    handler: (event: any /* MouseEvent */) => {\n      if (\n        !(\n          event.button === 2 &&\n          triggerRef.current?.contains(event.target as HTMLElement)\n        ) &&\n        menuRef.current?.parentElement !== event.target\n      ) {\n        onClose()\n      }\n    },\n  })\n\n  const onOpen = useCallback((event: AnyPointerEvent) => {\n    const point = getEventPoint(event)\n    setAnchor(point)\n    setIsOpen(true)\n  }, [])\n\n  const onClose = useCallback(() => {\n    props.onClose?.()\n    setIsOpen(false)\n  }, [props.onClose, setIsOpen])\n\n  return {\n    isOpen,\n    anchor,\n    triggerRef,\n    menuRef,\n    onClose,\n    onOpen,\n  }\n}\n\nexport interface ContextMenuProps extends MenuProps {}\nexport const ContextMenu: React.FC<ContextMenuProps> = (props) => {\n  const { children, ...rest } = props\n  const ctx = useContextMenu(props)\n\n  const context = React.useMemo(() => ctx, [ctx])\n\n  const { isOpen, onClose } = context\n\n  return (\n    <Menu\n      gutter={0}\n      {...rest}\n      isOpen={isOpen}\n      onClose={onClose}\n      closeOnBlur={false}\n    >\n      {(fnProps) => (\n        <ContextMenuProvider value={context}>\n          {runIfFn(children, fnProps)}\n        </ContextMenuProvider>\n      )}\n    </Menu>\n  )\n}\n\nContextMenu.displayName = 'ContextMenu'\n\nconst generateClientRect = (x = 0, y = 0) => {\n  return () => {\n    return {\n      width: 0,\n      height: 0,\n      top: y,\n      left: x,\n      right: x,\n      bottom: y,\n    }\n  }\n}\n\nconst isTouchDevice = () => {\n  return (\n    typeof window !== undefined && window.matchMedia('(hover: none)').matches\n  )\n}\n\nconst useContextMenuTrigger = (\n  props: ContextMenuTriggerProps,\n  ref: React.ForwardedRef<any>\n) => {\n  const { triggerRef, onOpen, onClose, anchor } = useContextMenuContext()\n\n  const menu = useMenuContext()\n\n  const { popper, openAndFocusFirstItem } = menu\n\n  const { longPressProps } = useLongPress({\n    isDisabled: props.longPressDisabled,\n    accessibilityDescription: 'Long press to open context menu',\n    onLongPressStart: (e) => {\n      onClose()\n    },\n    onLongPress: (e) => {\n      if (e.pointerType === 'mouse') return\n\n      if (e.type === 'longpress') {\n        onOpen(e as unknown as AnyPointerEvent)\n        openAndFocusFirstItem()\n      }\n    },\n  })\n\n  const anchorRef = React.useRef({\n    getBoundingClientRect: generateClientRect(anchor.x, anchor.y),\n  })\n\n  React.useEffect(() => {\n    popper.referenceRef(anchorRef.current)\n  }, [])\n\n  React.useEffect(() => {\n    anchorRef.current.getBoundingClientRect = generateClientRect(\n      anchor.x,\n      anchor.y\n    )\n    menu.popper.update()\n  }, [anchor])\n\n  const onPointerDown: React.PointerEventHandler<FocusableElement> = (\n    event\n  ) => {\n    if (event.pointerType !== 'mouse') {\n      longPressProps.onPointerDown?.(event)\n    }\n  }\n\n  const onMouseDown: React.MouseEventHandler<FocusableElement> = (event) => {\n    if (isTouchDevice()) {\n      longPressProps.onMouseDown?.(event)\n    }\n  }\n\n  return {\n    triggerProps: {\n      ...longPressProps,\n      onPointerDown,\n      onMouseDown,\n      onContextMenu: callAllHandlers((event: AnyPointerEvent) => {\n        event.preventDefault()\n        onOpen(event)\n        openAndFocusFirstItem()\n      }, props.onContextMenu as any),\n      ref: mergeRefs(triggerRef, ref),\n    },\n  }\n}\n\nexport interface ContextMenuTriggerProps extends HTMLChakraProps<'span'> {\n  /**\n   * If `true`, the long press gesture is disabled.\n   */\n  longPressDisabled?: boolean\n}\n\nexport const ContextMenuTrigger = forwardRef<ContextMenuTriggerProps, 'span'>(\n  (props, ref) => {\n    const { children, longPressDisabled, ...rest } = props\n\n    const { triggerProps } = useContextMenuTrigger(props, ref)\n\n    return (\n      <chakra.span\n        {...rest}\n        sx={{ WebkitTouchCallout: 'none' }}\n        {...triggerProps}\n      >\n        {children}\n      </chakra.span>\n    )\n  }\n)\n\nContextMenuTrigger.displayName = 'ContextMenuTrigger'\n\nexport interface ContextMenuListProps extends MenuListProps {}\n\nexport const ContextMenuList: React.FC<ContextMenuListProps> = (props) => {\n  const { children, ...rest } = props\n  const { menuRef } = useContextMenuContext()\n\n  return (\n    <MenuList ref={menuRef} {...rest}>\n      {children}\n    </MenuList>\n  )\n}\n\nContextMenuList.displayName = 'ContextMenuList'\n\nexport const ContextMenuItem = MenuItem\n","import * as React from 'react'\n\nexport interface UsePromise {\n  error?: Error | null\n  data?: any\n  isLoading: boolean\n  isResolved: boolean\n  isRejected: boolean\n}\n\ntype CallbackFn = (...args: any[]) => Promise<any>\n\n/**\n * @deprecated\n */\nexport function usePromise<C extends CallbackFn>(fn: C): [UsePromise, C] {\n  const [isLoading, setLoading] = React.useState(false)\n  const [isResolved, setResolved] = React.useState(false)\n  const [isRejected, setRejected] = React.useState(false)\n  const [error, setError] = React.useState(null)\n  const [data, setData] = React.useState(null)\n\n  const call: any = (...params: any) => {\n    setLoading(true)\n\n    return fn(...params)\n      .then((data) => {\n        setData(data)\n        setResolved(true)\n        setLoading(false)\n\n        return data\n      })\n      .catch((err) => {\n        setError(err)\n        setRejected(true)\n        setLoading(false)\n\n        throw err\n      })\n  }\n\n  return [{ error, data, isLoading, isResolved, isRejected }, call]\n}\n","import React, { useState, useEffect } from 'react'\nconst isBrowser = typeof window !== 'undefined'\n\nfunction setItem(key: string, value: string) {\n  if (isBrowser && 'localStorage' in window) {\n    return value === undefined\n      ? localStorage.removeItem(key)\n      : localStorage.setItem(key, value)\n  }\n}\n\nfunction getItem(key: string) {\n  if (isBrowser && 'localStorage' in window) {\n    return localStorage.getItem(key)\n  }\n}\n\nconst serializeJSON = <T>(value: T) => {\n  try {\n    return JSON.stringify(value)\n  } catch (e) {\n    throw new Error('useLocalStorage: failed to serialize the value to JSON')\n  }\n}\n\nconst deserializeJSON = (value?: string) => {\n  try {\n    return value && JSON.parse(value)\n  } catch (e) {\n    return value\n  }\n}\n\nexport interface UseLocalStorageOptions<T> {\n  serialize?<T>(value: T): string\n  deserialize?(value?: string): T\n}\n\ntype StorageEventDetail = {\n  key: string\n  newValue?: string\n}\nconst triggerCustomEvent = (detail: StorageEventDetail) => {\n  const event = new CustomEvent('use-local-storage', {\n    detail,\n  })\n  window.dispatchEvent(event)\n}\n\n/**\n * Works like useState but stores the value as JSON in localStorage.\n * Updates work across multiple tabs using StorageEvent.\n *\n * Setting undefined will remote the localStorage item.\n */\nexport const useLocalStorage = <T = string>(\n  key: string,\n  defaultValue: T,\n  options: UseLocalStorageOptions<T> = {}\n) => {\n  const { serialize = serializeJSON, deserialize = deserializeJSON } = options\n\n  const initRef = React.useRef(false)\n\n  const [value, setValue] = useState<T>(() => {\n    return isBrowser ? deserialize(getItem(key) ?? undefined) : defaultValue\n  })\n\n  useEffect(() => {\n    const handler = (event: StorageEvent | CustomEvent<StorageEventDetail>) => {\n      const isCustom = event instanceof CustomEvent\n      const eventKey = isCustom ? event.detail.key : event.key\n      const newValue = isCustom ? event.detail.newValue : event.newValue\n\n      if (\n        (isCustom || event.storageArea === window.localStorage) &&\n        eventKey === key\n      ) {\n        setValue(deserialize(newValue ?? undefined))\n      }\n    }\n\n    if (isBrowser) {\n      window.addEventListener('storage', handler)\n      window.addEventListener<any>('use-local-storage', handler)\n    }\n    return () => {\n      if (isBrowser) {\n        window.removeEventListener('storage', handler)\n        window.removeEventListener<any>('use-local-storage', handler)\n      }\n    }\n  }, [])\n\n  useEffect(() => {\n    if (!initRef.current) {\n      initRef.current = true\n      return\n    }\n    const serializedValue = serialize(value)\n    if (getItem(key) !== serializedValue) {\n      setItem(key, serializedValue)\n      triggerCustomEvent({ key, newValue: serializedValue })\n    }\n  }, [value])\n\n  return [value === undefined ? defaultValue : value, setValue] as const\n}\n","import { useState } from 'react'\n\nconst FIRST_STEP = 0\n\ntype Step = {\n  id: string\n}\n\ntype UseStepsProps<S> = {\n  steps: S[]\n  initialStep?: number\n}\n\nexport const useSteps = <S extends { id: string } = Step>({\n  steps,\n  initialStep = FIRST_STEP,\n}: UseStepsProps<S>) => {\n  const [completed, setCompleted] = useState<string[]>([])\n  const [index, setIndex] = useState<number>(initialStep)\n  const step = steps[index]\n  const inRange = (index: number | string) => {\n    if (typeof index === 'number') {\n      if (index < FIRST_STEP) return FIRST_STEP\n      if (index >= steps.length) return steps.length - 1\n      return index\n    }\n\n    return steps.findIndex((step) => step.id === index) || FIRST_STEP\n  }\n\n  const go = (nextStep: number | string) => setIndex(inRange(nextStep))\n  const next = () => go(index + 1)\n  const prev = () => go(index - 1)\n\n  const setComplete = (completeStep: number | string = index) => {\n    const completeStepIndex = inRange(completeStep)\n    const id = steps[completeStepIndex].id\n\n    setCompleted([...new Set([...completed, id])])\n  }\n\n  const setUncomplete = (uncompleteStep: number | string = index) => {\n    const uncompleteStepIndex = inRange(uncompleteStep)\n    const stepId = steps[uncompleteStepIndex].id\n\n    setCompleted(completed.filter((id) => id !== stepId))\n  }\n\n  const reset = (resetStep = initialStep) => {\n    setIndex(resetStep)\n    setCompleted([])\n  }\n\n  return {\n    setComplete,\n    completed,\n    index,\n    isLast: index === steps.length - 1,\n    navigation: { next, prev, go },\n    step,\n    setUncomplete,\n    reset,\n  }\n}\n","import { useEffect, useState } from 'react'\n\nexport type Status = 'idle' | 'loading' | 'ready' | 'error'\nexport type ScriptElt = HTMLScriptElement | null\n\nexport const useScript = (src: string): Status => {\n  const [status, setStatus] = useState<Status>(src ? 'loading' : 'idle')\n\n  useEffect(\n    () => {\n      if (!src) {\n        setStatus('idle')\n        return\n      }\n\n      // Fetch existing script element by src\n      // It may have been added by another instance of this hook\n      let script: ScriptElt = document.querySelector(`script[src=\"${src}\"]`)\n\n      if (!script) {\n        // Create script\n        script = document.createElement('script')\n        script.src = src\n        script.async = true\n        script.setAttribute('data-status', 'loading')\n        // Add script to document body\n        document.body.appendChild(script)\n\n        // Store status in attribute on script\n        // This can be read by other instances of this hook\n        const setAttributeFromEvent = (event: Event) => {\n          script?.setAttribute(\n            'data-status',\n            event.type === 'load' ? 'ready' : 'error'\n          )\n        }\n\n        script.addEventListener('load', setAttributeFromEvent)\n        script.addEventListener('error', setAttributeFromEvent)\n      } else {\n        // Grab existing script status from attribute and set to state.\n        setStatus(script.getAttribute('data-status') as Status)\n      }\n\n      // Script event handler to update status in state\n      // Note: Even if the script already exists we still need to add\n      // event handlers to update the state for *this* hook instance.\n      const setStateFromEvent = (event: Event) => {\n        setStatus(event.type === 'load' ? 'ready' : 'error')\n      }\n\n      // Add event listeners\n      script.addEventListener('load', setStateFromEvent)\n      script.addEventListener('error', setStateFromEvent)\n\n      // Remove event listeners on cleanup\n      return () => {\n        if (script) {\n          script.removeEventListener('load', setStateFromEvent)\n          script.removeEventListener('error', setStateFromEvent)\n        }\n      }\n    },\n    [src] // Only re-run effect if script src changes\n  )\n\n  return status\n}\n","import { useRef, useEffect } from 'react'\n\nconst isBrowser = typeof window !== 'undefined'\n\nexport type ScrollValue = { x: any; y: any }\n\nfunction getScrollPosition(\n  element: HTMLElement | undefined | null\n): ScrollValue {\n  if (!isBrowser) return { x: 0, y: 0 }\n  if (!element) {\n    return { x: window.scrollX, y: window.scrollY }\n  }\n\n  return { x: element.scrollLeft, y: element.scrollTop }\n}\n\nexport interface UseScrollPositionOptions {\n  /**\n   * The wait time in milliseconds before triggering the callback.\n   * @default 30\n   */\n  delay?: number\n  /**\n   * Whether the scroll position should be tracked or not.\n   * @default true\n   */\n  isEnabled?: boolean\n  /**\n   * The element to track the scroll position for.\n   */\n  elementRef?: React.RefObject<HTMLElement> | null\n  /**\n   * The callback function to be called when the scroll position changes.\n   */\n  callback?: ({\n    prevPos,\n    currPos,\n  }: {\n    prevPos: ScrollValue\n    currPos: ScrollValue\n  }) => void\n}\n\nexport const useScrollPosition = (\n  props: UseScrollPositionOptions\n): ScrollValue => {\n  const { elementRef, delay = 30, callback, isEnabled } = props\n\n  const position = useRef<ScrollValue>(\n    isEnabled ? getScrollPosition(elementRef?.current) : { x: 0, y: 0 }\n  )\n\n  let throttleTimeout: ReturnType<typeof setTimeout> | null = null\n\n  const handler = () => {\n    const currPos = getScrollPosition(elementRef?.current)\n\n    if (typeof callback === 'function') {\n      callback({ prevPos: position.current, currPos })\n    }\n\n    position.current = currPos\n    throttleTimeout = null\n  }\n\n  useEffect(() => {\n    if (!isEnabled) return\n\n    const handleScroll = () => {\n      if (delay) {\n        if (throttleTimeout === null) {\n          throttleTimeout = setTimeout(handler, delay)\n        }\n      } else {\n        handler()\n      }\n    }\n\n    const target = elementRef?.current || window\n\n    target.addEventListener('scroll', handleScroll)\n\n    return () => target.removeEventListener('scroll', handleScroll)\n  }, [elementRef?.current, delay, isEnabled])\n\n  return position.current\n}\n","import { useCallbackRef } from '@chakra-ui/react'\nimport { useEffect, useRef } from 'react'\n\nexport interface UseOutsideClickProps {\n  /**\n   * Whether the hook is enabled\n   */\n  enabled?: boolean\n  /**\n   * The reference to a DOM element.\n   */\n  ref: React.RefObject<HTMLElement>\n  /**\n   * Function invoked when a click is triggered outside the referenced element.\n   */\n  handler?: (e: Event) => void\n}\n\n/**\n * Example, used in components like Dialogs and Popovers, so they can close\n * when a user clicks outside them.\n */\nexport function useOutsideClick(props: UseOutsideClickProps) {\n  const { ref, handler, enabled = true } = props\n  const savedHandler = useCallbackRef(handler)\n\n  const stateRef = useRef({\n    isPointerDown: false,\n    ignoreEmulatedMouseEvents: false,\n  })\n\n  const state = stateRef.current\n\n  useEffect(() => {\n    if (!enabled) return\n    const onPointerDown: any = (e: PointerEvent) => {\n      if (isValidEvent(e, ref)) {\n        state.isPointerDown = true\n      }\n    }\n\n    const onMouseUp: any = (event: MouseEvent) => {\n      if (state.ignoreEmulatedMouseEvents) {\n        state.ignoreEmulatedMouseEvents = false\n        return\n      }\n\n      if (state.isPointerDown && handler && isValidEvent(event, ref)) {\n        state.isPointerDown = false\n        savedHandler(event)\n      }\n    }\n\n    const onTouchEnd = (event: TouchEvent) => {\n      state.ignoreEmulatedMouseEvents = true\n      if (handler && state.isPointerDown && isValidEvent(event, ref)) {\n        state.isPointerDown = false\n        savedHandler(event)\n      }\n    }\n\n    const doc = getOwnerDocument(ref.current)\n    doc.addEventListener('mousedown', onPointerDown, true)\n    doc.addEventListener('mouseup', onMouseUp, true)\n    doc.addEventListener('touchstart', onPointerDown, true)\n    doc.addEventListener('touchend', onTouchEnd, true)\n\n    return () => {\n      doc.removeEventListener('mousedown', onPointerDown, true)\n      doc.removeEventListener('mouseup', onMouseUp, true)\n      doc.removeEventListener('touchstart', onPointerDown, true)\n      doc.removeEventListener('touchend', onTouchEnd, true)\n    }\n  }, [handler, ref, savedHandler, state, enabled])\n}\n\nfunction isValidEvent(event: Event, ref: React.RefObject<HTMLElement>) {\n  const target = event.target as HTMLElement\n\n  if (target) {\n    const doc = getOwnerDocument(target)\n    if (!doc.contains(target)) return false\n  }\n\n  return !ref.current?.contains(target)\n}\n\nfunction getOwnerDocument(node?: Element | null): Document {\n  return node?.ownerDocument ?? document\n}\n","import * as React from 'react'\n\nimport {\n  Avatar,\n  AvatarBadge,\n  AvatarProps,\n  AvatarBadgeProps,\n  Tooltip,\n  chakra,\n  forwardRef,\n  HTMLChakraProps,\n  ThemingProps,\n  SystemStyleObject,\n  SystemProps,\n  useColorModeValue,\n  useTheme,\n  useMultiStyleConfig,\n  omitThemingProps,\n  createStylesContext,\n} from '@chakra-ui/react'\n\nimport { cx } from '@chakra-ui/utils'\n\nconst [StylesProvider, useStyles] = createStylesContext('SuiPersona')\n\nexport interface PresenceOptions {\n  [presence: string]: {\n    label: string\n    color: string\n  }\n}\n\n/**\n * The presence configuration object.\n *\n * Default presence values: online, offline, busy, dnd, away\n *\n * You can overwrite colors in the theme semantic tokens.\n * theme.semanticTokens.colors['presence.online'] = 'cyan.500'\n *\n * Or add a custom presence value\n * theme.semanticTokens.colors['presence.vacay'] = 'blue.500'\n *\n * @see Docs https://saas-ui.dev/docs/components/data-display/persona\n */\nexport const Presence: PresenceOptions = {\n  online: {\n    label: 'Online',\n    color: 'presence.online',\n  },\n  offline: {\n    label: 'Offline',\n    color: 'presence.offline',\n  },\n  busy: {\n    label: 'Busy',\n    color: 'presence.busy',\n  },\n  dnd: {\n    label: 'Do-not-disturb',\n    color: 'presence.dnd',\n  },\n  away: {\n    label: 'Away',\n    color: 'presence.away',\n  },\n}\n\n/**\n * Fallback when theme tokens aren't configured\n */\nexport const defaultPresenceTokens = {\n  online: 'green.500',\n  offline: 'gray.400',\n  busy: 'orange.500',\n  dnd: 'red.500',\n  away: 'gray.400',\n}\n\ninterface PersonaOptions {\n  /**\n   * The name of the person in the avatar.\n   *\n   * - if `src` has loaded, the name will be used as the `alt` attribute of the `img`\n   * - If `src` is not loaded, the name will be used to create the initials\n   */\n  name?: string\n  /**\n   * The presence status of the person\n   *\n   * If set will add an AvatarBadge with color configured in `Presence`\n   * Default presence options:\n   * - online\n   * - offline\n   * - busy\n   * - dnd\n   * - away\n   */\n  presence?: string\n  /**\n   * The icon shown in the AvatarBadge\n   */\n  presenceIcon?: React.ReactNode\n  /**\n   * Indicates that a person is out of office. Changes the presence badge style.\n   */\n  isOutOfOffice?: boolean\n  /**\n   * Primary label of the persona, defaults to the name\n   */\n  label?: React.ReactNode\n  /**\n   * Secondary label, usually the role of the person\n   * Only visible from md size and up.\n   */\n  secondaryLabel?: React.ReactNode\n  /**\n   * Tertiary label, usually the status of the person.\n   * Only visible from lg size and up.\n   */\n  tertiaryLabel?: React.ReactNode\n  /**\n   * Hide the persona details next to the avatar.\n   */\n  hideDetails?: boolean\n  /**\n   * The size of the persona, from 2xs to 2xl.\n   */\n}\n\nexport interface PersonaProps\n  extends PersonaOptions,\n    Omit<PresenceAvatarProps, 'size' | 'variant'>,\n    ThemingProps<'SuiPersona'> {}\n/**\n * The wrapper component that handles default composition.\n *\n * @see Docs https://saas-ui.dev/docs/components/data-display/persona\n */\nexport const Persona: React.FC<PersonaProps> = (props) => {\n  const {\n    name,\n    presence,\n    presenceIcon,\n    isOutOfOffice,\n    label,\n    secondaryLabel,\n    tertiaryLabel,\n    size,\n    hideDetails,\n    children,\n    /** Avatar props */\n    getInitials,\n    icon,\n    iconLabel,\n    ignoreFallback,\n    loading,\n    onError,\n    src,\n    srcSet,\n    ...rest\n  } = props\n\n  const isComposed = !!(name || label || src || icon)\n\n  return (\n    <PersonaContainer size={size} {...rest}>\n      {isComposed ? (\n        <>\n          <PersonaAvatar\n            name={name}\n            presence={presence}\n            presenceIcon={presenceIcon}\n            isOutOfOffice={isOutOfOffice}\n            size={size}\n            getInitials={getInitials}\n            icon={icon}\n            iconLabel={iconLabel}\n            ignoreFallback={ignoreFallback}\n            loading={loading}\n            onError={onError}\n            src={src}\n            srcSet={srcSet}\n          />\n\n          {!hideDetails && (\n            <PersonaDetails>\n              <PersonaLabel>{label || name}</PersonaLabel>\n              {secondaryLabel && (\n                <PersonaSecondaryLabel>{secondaryLabel}</PersonaSecondaryLabel>\n              )}\n              {tertiaryLabel && (\n                <PersonaTertiaryLabel>{tertiaryLabel}</PersonaTertiaryLabel>\n              )}\n              {children}\n            </PersonaDetails>\n          )}\n        </>\n      ) : (\n        children\n      )}\n    </PersonaContainer>\n  )\n}\n\nPersona.displayName = 'Persona'\n\nexport interface PersonaContainerProps\n  extends HTMLChakraProps<'div'>,\n    ThemingProps<'SuiPersona'> {}\n/**\n * The container component that provides context and styles.\n *\n * @see Docs https://saas-ui.dev/docs/components/data-display/persona\n */\nexport const PersonaContainer = forwardRef<PersonaContainerProps, 'div'>(\n  (props, ref) => {\n    const { children, ...rest } = props\n    const styles = useMultiStyleConfig('SuiPersona', props)\n\n    const containerProps = omitThemingProps(rest)\n\n    const baseStyle: SystemStyleObject = {\n      display: 'flex',\n      flexDirection: 'row',\n      alignItems: 'center',\n    }\n\n    const containerStyles: SystemStyleObject = {\n      ...baseStyle,\n      ...styles.container,\n    }\n\n    return (\n      <StylesProvider value={styles}>\n        <chakra.div\n          ref={ref}\n          __css={containerStyles}\n          {...containerProps}\n          className={cx('sui-persona', props.className)}\n        >\n          {children}\n        </chakra.div>\n      </StylesProvider>\n    )\n  }\n)\n\nPersonaContainer.displayName = 'PersonaContainer'\n\ninterface PresenceAvatarOptions {\n  /**\n   * The name of the person in the avatar.\n   *\n   * - if `src` has loaded, the name will be used as the `alt` attribute of the `img`\n   * - If `src` is not loaded, the name will be used to create the initials\n   */\n  name?: string\n  /**\n   * The presence status of the person\n   *\n   * If set will add an AvatarBadge with color configured in `Presence`\n   * Default presence options:\n   * - online\n   * - offline\n   * - busy\n   * - dnd\n   * - away\n   */\n  presence?: string\n  /**\n   * The textual presence status of the person.\n   * Online, Offline, Busy, Do-not-disturb or Away\n   */\n  presenceLabel?: string\n  /**\n   * The icon shown in the AvatarBadge\n   */\n  presenceIcon?: React.ReactNode\n  /**\n   * The badge size. Defaults to 1em. Use em value to keep the size relative to the avatar.\n   */\n  badgeSize?: SystemProps['boxSize']\n  /**\n   * Indicates that a person is out of office. Changes the presence badge style.\n   */\n  isOutOfOffice?: boolean\n}\n\ninterface PresenceAvatarProps extends PresenceAvatarOptions, AvatarProps {}\n/**\n * An avatar with optional status badge.\n *\n * @see Docs https://saas-ui.dev/docs/components/data-display/persona\n */\nexport const PersonaAvatar = forwardRef<PresenceAvatarProps, 'span'>(\n  (props, ref) => {\n    const {\n      name,\n      presence,\n      presenceLabel,\n      presenceIcon,\n      isOutOfOffice,\n      badgeSize = '1em',\n      size,\n      getInitials,\n      icon,\n      iconLabel,\n      ignoreFallback,\n      loading,\n      onError,\n      src,\n      srcSet,\n      ...rest\n    } = props\n    const badgeProps: AvatarBadgeProps = {}\n    let badge\n\n    const theme = useTheme()\n\n    const colors = theme.colors?.presence || defaultPresenceTokens\n    const semantic = !!theme.semanticTokens?.colors?.['presence.online']\n\n    if (presence) {\n      const label = presenceLabel || Presence[presence]?.label\n      const color = semantic\n        ? Presence[presence]?.color || `presence.${presence}`\n        : colors[presence]\n      if (isOutOfOffice) {\n        badgeProps.sx = {\n          _before: {\n            content: '\"\"',\n            width: '100%',\n            height: '100%',\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            border: '0.2em solid',\n            borderColor: color,\n            borderRadius: '50%',\n            boxSizing: 'border-box',\n          },\n        }\n        badgeProps.borderWidth = '0.15em'\n        badgeProps.bg = useColorModeValue('white', 'gray.800')\n      } else {\n        badgeProps.bg = color\n      }\n\n      badge = (\n        <AvatarBadge boxSize={badgeSize} {...badgeProps}>\n          {presenceIcon}\n        </AvatarBadge>\n      )\n\n      if (label) {\n        badge = <Tooltip label={label}>{badge}</Tooltip>\n      }\n    }\n\n    return (\n      <Avatar\n        ref={ref}\n        name={name}\n        size={size}\n        getInitials={getInitials}\n        icon={icon}\n        iconLabel={iconLabel}\n        ignoreFallback={ignoreFallback}\n        loading={loading}\n        onError={onError}\n        src={src}\n        srcSet={srcSet}\n        {...rest}\n      >\n        {badge}\n      </Avatar>\n    )\n  }\n)\n\nPersonaAvatar.displayName = 'PersonaAvatar'\n\n/**\n * Wrapper component for the labels.\n *\n * @see Docs https://saas-ui.dev/docs/components/data-display/persona\n */\nexport const PersonaDetails = forwardRef<PersonaProps, 'div'>((props, ref) => {\n  const { children, className, ...rest } = props\n  const styles = useStyles()\n\n  const baseStyle: SystemStyleObject = {\n    display: 'flex',\n    flexDirection: 'column',\n  }\n\n  const detailsStyles = {\n    ...baseStyle,\n    ...styles.details,\n  }\n\n  return (\n    <chakra.div\n      ref={ref}\n      {...rest}\n      __css={detailsStyles}\n      className={cx('sui-persona__details', className)}\n    >\n      {children}\n    </chakra.div>\n  )\n})\n\nPersonaDetails.displayName = 'PersonaDetails'\n\n/**\n * The main label, usually a name.\n *\n * @see Docs https://saas-ui.dev/docs/components/data-display/persona\n */\nexport const PersonaLabel = forwardRef<HTMLChakraProps<'span'>, 'span'>(\n  (props, ref) => {\n    const styles = useStyles()\n    return (\n      <chakra.span\n        ref={ref}\n        {...props}\n        __css={styles.label}\n        className={cx('sui-persona__label', props.className)}\n      />\n    )\n  }\n)\n\nPersonaLabel.displayName = 'PersonaLabel'\n\n/**\n * The secondary label, usually the role of a person.\n *\n * @see Docs https://saas-ui.dev/docs/components/data-display/persona\n */\nexport const PersonaSecondaryLabel = forwardRef<\n  HTMLChakraProps<'span'>,\n  'span'\n>((props, ref) => {\n  const styles = useStyles()\n  return (\n    <chakra.span\n      ref={ref}\n      {...props}\n      __css={styles.secondaryLabel}\n      className={cx('sui-persona__secondary-label', props.className)}\n    />\n  )\n})\n\nPersonaSecondaryLabel.displayName = 'PersonaSecondaryLabel'\n\n/**\n * The tertiary label, typically a status message.\n *\n * @see Docs https://saas-ui.dev/docs/components/data-display/persona\n */\nexport const PersonaTertiaryLabel = forwardRef<HTMLChakraProps<'span'>, 'span'>(\n  (props, ref) => {\n    const styles = useStyles()\n\n    return (\n      <chakra.span\n        ref={ref}\n        {...props}\n        __css={styles.tertiaryLabel}\n        className={cx('sui-persona__tertiary-label', props.className)}\n      />\n    )\n  }\n)\n\nPersonaTertiaryLabel.displayName = 'PersonaTertiaryLabel'\n","import * as React from 'react'\n\nimport {\n  List,\n  ListProps,\n  chakra,\n  forwardRef,\n  useMultiStyleConfig,\n  useColorModeValue,\n  HTMLChakraProps,\n  ThemingProps,\n  SystemProps,\n  SystemStyleObject,\n  omitThemingProps,\n  createStylesContext,\n} from '@chakra-ui/react'\n\nimport { cx } from '@chakra-ui/utils'\n\nconst [StylesProvider, useStyles] = createStylesContext('SuiProperty')\n\ninterface PropertyOptions {\n  label?: React.ReactNode\n  value?: React.ReactNode\n  labelWidth?: SystemProps['width']\n  spacing?: SystemProps['margin']\n}\n\nexport interface PropertyProps\n  extends PropertyOptions,\n    HTMLChakraProps<'dl'>,\n    ThemingProps<'SuiProperty'> {}\n/**\n * The wrapper component that handles default composition.\n *\n * @see Docs https://saas-ui.dev/docs/components/data-display/property\n */\nexport const Property = forwardRef<PropertyProps, 'dl'>((props, ref) => {\n  const styles = useMultiStyleConfig('SuiProperty', props)\n\n  const { children, label, value, labelWidth, spacing, ...rest } =\n    omitThemingProps(props)\n\n  const propertyStyles: SystemStyleObject = {\n    minW: 0,\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    ...styles.property,\n  }\n\n  return (\n    <StylesProvider value={styles}>\n      <chakra.dl\n        ref={ref}\n        __css={propertyStyles}\n        {...rest}\n        className={cx('sui-property', props.className)}\n      >\n        {label && (\n          <PropertyLabel\n            width={labelWidth}\n            minWidth={labelWidth}\n            marginEnd={spacing}\n          >\n            {label}\n          </PropertyLabel>\n        )}\n        {value && <PropertyValue>{value}</PropertyValue>}\n        {children}\n      </chakra.dl>\n    </StylesProvider>\n  )\n})\n\nProperty.displayName = 'Property'\n\nexport interface PropertyLabelProps extends HTMLChakraProps<'dt'> {}\n/**\n * The property label.\n *\n * @see Docs https://saas-ui.dev/docs/components/data-display/property\n */\nexport const PropertyLabel = forwardRef<PropertyProps, 'dt'>((props, ref) => {\n  const styles = useStyles()\n  const { children, noOfLines = 1, width, minWidth, ...rest } = props\n\n  const labelStyles = {\n    display: 'flex',\n    flexDirection: 'row',\n    ...styles.label,\n  }\n\n  if (width) {\n    labelStyles.minWidth = minWidth || 'auto'\n    labelStyles.width = width\n  }\n\n  return (\n    <chakra.dt\n      ref={ref}\n      __css={labelStyles}\n      {...rest}\n      className={cx('sui-property__label', props.className)}\n    >\n      <chakra.span flex=\"1\" noOfLines={noOfLines}>\n        {children}\n      </chakra.span>\n    </chakra.dt>\n  )\n})\n\nPropertyLabel.displayName = 'PropertyLabel'\n\nexport interface PropertyValueProps extends HTMLChakraProps<'dd'> {}\n/**\n * The property value.\n *\n * @see Docs https://saas-ui.dev/docs/components/data-display/property\n */\nexport const PropertyValue = forwardRef<PropertyValueProps, 'dd'>(\n  (props, ref) => {\n    const styles = useStyles()\n\n    const { children, ...rest } = props\n\n    const valueStyles = {\n      display: 'flex',\n      flexDirection: 'row',\n      alignItems: 'center',\n      flex: 1,\n      ...styles.value,\n    }\n\n    return (\n      <chakra.dd\n        ref={ref}\n        __css={valueStyles}\n        {...rest}\n        className={cx('sui-property__value', props.className)}\n      >\n        {children}\n      </chakra.dd>\n    )\n  }\n)\n\nPropertyValue.displayName = 'PropertyValue'\n\nexport interface PropertyListProps extends Omit<ListProps, 'items'> {}\n\n/**\n * Render a list of properties.\n * Will set the `as` prop of it's children to `div`,\n * in order to render a semantically correct `dl` list.\n *\n * @see Docs https://saas-ui.dev/docs/components/data-display/property\n */\nexport const PropertyList: React.FC<PropertyListProps> = (props) => {\n  const { children, ...rest } = props\n  return (\n    <chakra.dl {...rest} className={cx('sui-property-list', props.className)}>\n      {React.Children.map(children, (child) =>\n        React.isValidElement<PropertyProps>(child)\n          ? React.cloneElement(child, {\n              as: 'div',\n            })\n          : child\n      )}\n    </chakra.dl>\n  )\n}\n\nPropertyList.displayName = 'PropertyList'\n","import { dataAttr, PropGetter } from '@chakra-ui/utils'\nimport React, { useEffect, useImperativeHandle, useRef, useState } from 'react'\nimport { useResizeObserver } from '@react-aria/utils'\nimport { useScrollPosition } from '@saas-ui/hooks'\nimport { HTMLMotionProps } from 'framer-motion'\nimport type { HTMLChakraProps, ThemingProps } from '@chakra-ui/react'\n\ntype MotionProps = Pick<\n  HTMLMotionProps<'div'>,\n  | 'animate'\n  | 'initial'\n  | 'variants'\n  | 'onAnimationStart'\n  | 'onAnimationComplete'\n  | 'onDrag'\n  | 'onDragStart'\n  | 'onDragEnd'\n>\n\nexport interface NavbarProps\n  extends Omit<UseNavbarProps, 'hideOnScroll' | 'ref'>,\n    Omit<HTMLChakraProps<'div'>, keyof MotionProps | 'height'>,\n    MotionProps,\n    ThemingProps<'SuiNavbar'> {\n  children?: React.ReactNode | React.ReactNode[]\n}\n\nexport interface UseNavbarProps {\n  /**\n   * Ref to the DOM node.\n   */\n  ref: React.ForwardedRef<HTMLElement>\n  /**\n   * The parent element where the navbar is placed within.\n   * This is used to determine the scroll position and whether the navbar should be hidden or not.\n   * @default `window`\n   */\n  parentRef?: React.RefObject<HTMLElement>\n  /**\n   * The height of the navbar.\n   * @default \"3.5rem\" (56px)\n   */\n  height?: number | string\n  /**\n   * Whether the navbar should hide on scroll or not.\n   * @default false\n   */\n  shouldHideOnScroll?: boolean\n  /**\n   * Whether the navbar parent scroll event should be listened to or not.\n   * @default false\n   */\n  disableScrollHandler?: boolean\n  /**\n   * The props to modify the framer motion animation. Use the `variants` API to create your own animation.\n   * This motion is only available if the `shouldHideOnScroll` prop is set to `true`.\n   */\n  motionProps?: MotionProps\n  /**\n   * The scroll event handler for the navbar. The event fires when the navbar parent element is scrolled.\n   * it only works if `disableScrollHandler` is set to `false` or `shouldHideOnScroll` is set to `true`.\n   */\n  onScrollPositionChange?: (scrollPosition: number) => void\n  /**\n   * Style props to be applied to the navbar container.\n   */\n  style?: React.CSSProperties\n}\n\nexport function useNavbar(props: UseNavbarProps) {\n  const {\n    ref,\n    parentRef,\n    height = '3.5rem',\n    shouldHideOnScroll = false,\n    disableScrollHandler = false,\n    onScrollPositionChange,\n    motionProps,\n    ...containerProps\n  } = props\n\n  const containerRef = useRef<HTMLElement>(null)\n\n  useImperativeHandle(ref, () => containerRef.current as HTMLElement)\n\n  const prevWidth = useRef(0)\n  const navHeight = useRef(0)\n\n  const [isHidden, setIsHidden] = useState(false)\n\n  const updateWidth = () => {\n    if (containerRef.current) {\n      const width = containerRef.current.offsetWidth\n\n      if (width !== prevWidth.current) {\n        prevWidth.current = width\n      }\n    }\n  }\n\n  useResizeObserver({\n    ref: containerRef,\n    onResize: () => {\n      const currentWidth = containerRef.current?.offsetWidth\n\n      if (currentWidth !== prevWidth.current) {\n        updateWidth()\n      }\n    },\n  })\n\n  useEffect(() => {\n    updateWidth()\n\n    navHeight.current = containerRef.current?.offsetHeight || 0\n  }, [])\n\n  useScrollPosition({\n    elementRef: parentRef,\n    isEnabled: shouldHideOnScroll || !disableScrollHandler,\n    callback: ({ prevPos, currPos }) => {\n      onScrollPositionChange?.(currPos.y)\n      if (shouldHideOnScroll) {\n        setIsHidden((prev) => {\n          const next = currPos.y > prevPos.y && currPos.y > navHeight.current\n\n          return next !== prev ? next : prev\n        })\n      }\n    },\n  })\n\n  const getContainerProps = (props: NavbarProps = {}) => ({\n    ...containerProps,\n    ...motionProps,\n    'data-hidden': dataAttr(isHidden),\n    ref: containerRef,\n    style: {\n      '--navbar-height': height,\n      ...containerProps.style,\n      ...props?.style,\n    },\n  })\n\n  return {\n    containerRef,\n    height,\n    isHidden,\n    shouldHideOnScroll,\n    motionProps,\n    getContainerProps,\n  }\n}\n\nexport type UseNavbarReturn = ReturnType<typeof useNavbar>\n","import { createContext } from '@chakra-ui/utils'\n\nimport { UseNavbarReturn } from './use-navbar'\nimport { SystemStyleObject } from '@chakra-ui/styled-system'\n\nexport const [NavbarProvider, useNavbarContext] =\n  createContext<UseNavbarReturn>({\n    name: 'NavbarContext',\n    strict: true,\n    errorMessage:\n      'useNavbarContext: `context` is undefined. Seems you forgot to wrap component within <Navbar />',\n  })\n\nexport const [NavBarStylesProvider, useNavBarStyles] = createContext<\n  Record<string, SystemStyleObject>\n>({\n  name: `NavBarStylesContext`,\n  hookName: `useNavItemStyles`,\n  providerName: '<NavBar />',\n})\n","import { chakra, forwardRef, useMultiStyleConfig } from '@chakra-ui/react'\nimport { motion } from 'framer-motion'\nimport { useNavbar, type NavbarProps } from './use-navbar'\nimport { NavBarStylesProvider, NavbarProvider } from './navbar-context'\nimport { cx } from '@saas-ui/react-utils'\n\nconst MotionBox = chakra(motion.nav)\n\nexport const Navbar = forwardRef<NavbarProps, 'div'>((props, ref) => {\n  const { children, ...otherProps } = props\n\n  const context = useNavbar({ ...otherProps, ref })\n\n  const styles = useMultiStyleConfig('SuiNavbar', props)\n\n  const content = (\n    <chakra.header __css={styles.inner} className=\"sui-navbar__inner\">\n      {children}\n    </chakra.header>\n  )\n\n  const containerStyles = {\n    top: props.position === 'sticky' ? '0' : undefined,\n    insetX: props.position === 'sticky' ? '0' : undefined,\n    ...styles.container,\n  }\n\n  return (\n    <NavBarStylesProvider value={styles}>\n      <NavbarProvider value={context}>\n        <MotionBox\n          __css={containerStyles}\n          animate={context.isHidden ? 'hidden' : 'visible'}\n          initial={false}\n          variants={{\n            hidden: { y: '-100%' },\n            visible: { y: 0, transition: { ease: 'easeInOut' } },\n          }}\n          className={cx('sui-navbar', props.className)}\n          {...context.getContainerProps(props)}\n        >\n          {content}\n        </MotionBox>\n      </NavbarProvider>\n    </NavBarStylesProvider>\n  )\n})\n\nNavbar.displayName = 'Navbar'\n","import { chakra, forwardRef, HTMLChakraProps } from '@chakra-ui/react'\nimport { cx } from '@chakra-ui/utils'\nimport { useNavBarStyles } from './navbar-context'\n\nexport interface NavbarBrandProps extends HTMLChakraProps<'div'> {\n  children?: React.ReactNode | React.ReactNode[]\n}\n\nexport const NavbarBrand = forwardRef<NavbarBrandProps, 'div'>((props, ref) => {\n  const { className, children, ...rest } = props\n\n  const styles = useNavBarStyles()\n\n  return (\n    <chakra.div\n      ref={ref}\n      __css={styles.brand}\n      className={cx('sui-navbar__brand')}\n      {...rest}\n    >\n      {children}\n    </chakra.div>\n  )\n})\n\nNavbarBrand.displayName = 'NavbarBrand'\n","import {\n  chakra,\n  forwardRef,\n  HTMLChakraProps,\n  SystemProps,\n} from '@chakra-ui/react'\nimport { cx } from '@chakra-ui/utils'\n\nimport { useNavBarStyles } from './navbar-context'\n\nexport interface NavbarContentProps extends HTMLChakraProps<'ul'> {\n  /**\n   * Typically the `NavbarItem` component\n   */\n  children?: React.ReactNode | React.ReactNode[]\n  /**\n   * Spacing between each navbar item\n   */\n  spacing?: SystemProps['margin']\n}\n\nexport const NavbarContent = forwardRef<NavbarContentProps, 'ul'>(\n  (props, ref) => {\n    const { className, children, spacing = 0, ...rest } = props\n\n    const styles = useNavBarStyles()\n\n    const contentStyles = {\n      ...styles.content,\n      '& > *:not(style) ~ *:not(style)': { marginStart: spacing },\n    }\n\n    return (\n      <chakra.ul\n        ref={ref}\n        __css={contentStyles}\n        className={cx('sui-navbar__content', className)}\n        {...rest}\n      >\n        {children}\n      </chakra.ul>\n    )\n  }\n)\n\nNavbarContent.displayName = 'NavbarContent'\n","import { chakra, forwardRef, HTMLChakraProps } from '@chakra-ui/react'\nimport { cx, dataAttr } from '@chakra-ui/utils'\n\nimport { useNavBarStyles } from './navbar-context'\n\nexport interface NavbarItemProps extends HTMLChakraProps<'li'> {\n  children?: React.ReactNode\n  /**\n   * Whether the item is active or not.\n   * @default false\n   */\n  isActive?: boolean\n}\n\nexport const NavbarItem = forwardRef<NavbarItemProps, 'li'>((props, ref) => {\n  const { className, children, isActive, ...rest } = props\n\n  const styles = useNavBarStyles()\n\n  return (\n    <chakra.li\n      ref={ref}\n      __css={styles.item}\n      className={cx('sui-navbar__item', className)}\n      data-active={dataAttr(isActive)}\n      {...rest}\n    >\n      {children}\n    </chakra.li>\n  )\n})\n\nNavbarItem.displayName = 'NavbarItem'\n","import { chakra, forwardRef, HTMLChakraProps } from '@chakra-ui/react'\nimport { cx, dataAttr } from '@chakra-ui/utils'\n\nimport { useNavBarStyles } from './navbar-context'\nimport { useLink } from '../provider'\n\nexport interface NavbarLinkProps extends HTMLChakraProps<'a'> {\n  children?: React.ReactNode\n  /**\n   * Whether the link is active or not.\n   * @default false\n   */\n  isActive?: boolean\n}\n\nexport const NavbarLink = forwardRef<NavbarLinkProps, 'li'>((props, ref) => {\n  const { className, children, isActive, ...rest } = props\n\n  const Link = useLink()\n\n  const styles = useNavBarStyles()\n\n  return (\n    <chakra.a\n      as={Link}\n      ref={ref}\n      __css={styles.link}\n      data-active={dataAttr(isActive)}\n      className={cx('sui-navbar__link', className)}\n      {...rest}\n    >\n      {children}\n    </chakra.a>\n  )\n})\n\nNavbarLink.displayName = 'NavbarLink'\n","import * as React from 'react'\n\nimport {\n  chakra,\n  omitThemingProps,\n  useMultiStyleConfig,\n  useBreakpointValue,\n  SystemStyleObject,\n  IconButton,\n  useDisclosure,\n  Portal,\n  forwardRef,\n  useTheme,\n  useStyleConfig,\n} from '@chakra-ui/react'\nimport { cx, dataAttr, runIfFn } from '@chakra-ui/utils'\nimport { HamburgerIcon } from '../icons'\nimport { motion, AnimatePresence } from 'framer-motion'\n\nimport { useResponsiveValue } from '@saas-ui/react-utils'\n\nimport {\n  SidebarProvider,\n  useSidebarContext,\n  useSidebarToggleButton,\n} from './use-sidebar'\nimport { SidebarStylesProvider, useSidebarStyles } from './sidebar-context'\nimport {\n  SidebarOverlayProps,\n  SidebarProps,\n  SidebarSectionProps,\n  SidebarToggleButtonProps,\n} from './sidebar-types'\nimport { getBreakpoints } from './sidebar-utils'\nimport { useAppShellContext } from '../app-shell/app-shell-context'\n\nconst MotionBox = chakra(motion.nav)\n\nconst motionPresets = {\n  slideInOut: {\n    enter: {\n      left: 0,\n      transition: { type: 'spring', duration: 0.6, bounce: 0.15 },\n    },\n    exit: {\n      left: '-100%',\n    },\n  },\n  none: {},\n}\n\n/**\n * Side navigation, commonly used as the primary navigation\n *\n * @see Docs https://saas-ui.dev/docs/components/layout/sidebar\n */\nexport const Sidebar = forwardRef<SidebarProps, 'nav'>((props, ref) => {\n  const styles = useMultiStyleConfig('SuiSidebar', props)\n  const theme = useTheme()\n  const defaultProps = theme.components['SuiSidebar']?.defaultProps\n\n  const variant = useResponsiveValue(props.variant ?? defaultProps?.variant, {\n    fallback: 'base',\n  })\n  const size = useResponsiveValue(props.size ?? defaultProps?.size, {\n    fallback: 'base',\n  })\n\n  const isCondensed = variant === 'compact'\n\n  const {\n    spacing = 4,\n    children,\n    toggleBreakpoint = 'lg',\n    className,\n    motionPreset = 'slideInOut',\n    isOpen: isOpenProp,\n    onOpen: onOpenProp,\n    onClose: onCloseProp,\n    ...containerProps\n  } = omitThemingProps(props)\n\n  const appShell = useAppShellContext()\n  const breakpoints = getBreakpoints(toggleBreakpoint)\n\n  const isMobile = useBreakpointValue(breakpoints, {\n    fallback: undefined,\n  })\n  // we check this twice to avoid SSR issues.\n  const isMobileInitial = useBreakpointValue(breakpoints)\n  const isInitial = typeof isMobile === 'undefined'\n  const isControlled = typeof isOpenProp !== 'undefined'\n  const isCollapsible = (isMobile || isControlled) && !isCondensed\n\n  const disclosure = useDisclosure({\n    isOpen: isOpenProp || appShell?.isSidebarOpen,\n    onOpen: onOpenProp || appShell?.openSidebar,\n    onClose: onCloseProp || appShell?.closeSidebar,\n  })\n\n  const { isOpen, onClose, onOpen } = disclosure\n\n  React.useEffect(() => {\n    if ((isInitial && isMobileInitial) || isCondensed || isControlled) {\n      // make sure we do not show an initial animation or when this is a compact sidebar\n      return\n    }\n    isMobileInitial ? onClose() : onOpen()\n  }, [isInitial, isCondensed, isMobileInitial])\n\n  const containerStyles: SystemStyleObject = {\n    '& > *:not(style) ~ *:not(style, .sui-resize-handle, .sui-sidebar__toggle-button + *)':\n      {\n        marginTop: spacing,\n      },\n    display: 'flex',\n    flexDirection: 'column',\n    ...(isMobile && isCollapsible\n      ? {\n          position: 'absolute',\n          zIndex: 'modal',\n          top: 0,\n          left: { base: '-100%', lg: '0' },\n          bottom: 0,\n        }\n      : {\n          position: 'relative',\n        }),\n  }\n\n  const context = {\n    ...disclosure,\n    breakpoints,\n    isMobile,\n    variant,\n    size,\n  }\n\n  const variants = motionPresets[isCondensed ? 'none' : motionPreset || 'none']\n\n  return (\n    <SidebarProvider value={context}>\n      <SidebarStylesProvider value={styles}>\n        <MotionBox\n          ref={ref}\n          initial={false}\n          animate={!isInitial && (!isCollapsible || isOpen ? 'enter' : 'exit')}\n          variants={variants}\n          __css={{\n            ...containerStyles,\n            ...styles.container,\n          }}\n          {...containerProps}\n          id={disclosure.getDisclosureProps().id}\n          className={cx('sui-sidebar', className)}\n          data-compact={dataAttr(isCondensed)}\n          data-collapsible={dataAttr(isMobile && isCollapsible)}\n        >\n          {children}\n        </MotionBox>\n      </SidebarStylesProvider>\n    </SidebarProvider>\n  )\n})\n\nSidebar.displayName = 'Sidebar'\nSidebar.id = 'Sidebar'\n\n/**\n * Button that toggles the sidebar visibility.\n *\n * @see Docs https://saas-ui.dev/docs/components/layout/sidebar\n */\nexport const SidebarToggleButton: React.FC<SidebarToggleButtonProps> = (\n  props\n) => {\n  const { sx, pos, position, variant = 'ghost', icon, isRound, ...rest } = props\n  const { isOpen, isMobile, getButtonProps } = useSidebarToggleButton()\n  const styles = useStyleConfig('SuiSidebarToggleButton', props)\n  const btnStyles = useStyleConfig('Button', {\n    ...props,\n    variant,\n  })\n\n  const p = pos ?? position ?? sx?.pos ?? sx?.position\n\n  const buttonStyles: SystemStyleObject = {\n    display: 'inline-flex',\n    appearance: 'none',\n    alignItems: 'center',\n    justifyContent: 'center',\n    userSelect: 'none',\n    whiteSpace: 'nowrap',\n    verticalAlign: 'middle',\n    outline: 'none',\n    ...btnStyles,\n    ...(isMobile\n      ? !p\n        ? { position: 'fixed', top: 3, left: 3, zIndex: 'popover' }\n        : {}\n      : { display: 'none' }),\n    ...styles,\n  }\n\n  const _icon = icon ? (\n    runIfFn(icon, {\n      isOpen,\n    })\n  ) : (\n    <HamburgerIcon aria-hidden=\"true\" focusable=\"false\" />\n  )\n\n  return (\n    <chakra.button\n      __css={buttonStyles}\n      padding=\"0\"\n      borderRadius={isRound ? 'full' : undefined}\n      aria-label={isOpen ? 'Close sidebar' : 'Open sidebar'}\n      data-state={isOpen ? 'open' : 'closed'}\n      {...rest}\n      {...getButtonProps(props)}\n      sx={sx}\n      className={cx('sui-sidebar__toggle-button', props.className)}\n    >\n      {_icon}\n    </chakra.button>\n  )\n}\n\n/**\n * Overlay shown when sidebar is open on mobile.\n *\n * @see Docs https://saas-ui.dev/docs/components/layout/sidebar\n */\nexport const SidebarOverlay: React.FC<SidebarOverlayProps> = (props) => {\n  const { onClose, isOpen, isMobile } = useSidebarContext()\n\n  const styles = useSidebarStyles()\n\n  return (\n    <Portal>\n      <AnimatePresence>\n        {isMobile && isOpen && (\n          <MotionBox\n            animate={isOpen ? 'enter' : 'exit'}\n            initial=\"exit\"\n            variants={{\n              enter: { opacity: 1 },\n              exit: { opacity: 0 },\n            }}\n            position=\"fixed\"\n            top=\"0\"\n            right=\"0\"\n            bottom=\"0\"\n            left=\"0\"\n            zIndex=\"overlay\"\n            {...props}\n            onClick={onClose}\n            __css={styles.overlay}\n          />\n        )}\n      </AnimatePresence>\n    </Portal>\n  )\n}\n\nSidebarToggleButton.displayName = 'SidebarToggleButton'\n\n/**\n * Sidebar section that can contain sidebar items.\n *\n * @see Docs https://saas-ui.dev/docs/components/layout/sidebar\n */\nexport const SidebarSection: React.FC<SidebarSectionProps> = (props) => {\n  const { direction = 'column', ...rest } = props\n  const styles = useSidebarStyles()\n  const sectionStyles = {\n    display: 'flex',\n    flexDirection: direction,\n    ...styles.section,\n  }\n\n  return (\n    <chakra.div\n      __css={sectionStyles}\n      {...rest}\n      className={cx('sui-sidebar__section', props.className)}\n    />\n  )\n}\n\nSidebarSection.displayName = 'SidebarSection'\n","import {\n  ResponsiveValue,\n  ThemeTypings,\n  UseDisclosureReturn,\n} from '@chakra-ui/react'\nimport { useAppShellContext } from '../app-shell/app-shell-context'\nimport { callAllHandlers, createContext, PropGetter } from '@chakra-ui/utils'\n\ntype Variants = 'compact' | 'default'\n\nexport interface UseSidebarReturn extends UseDisclosureReturn {\n  isMobile?: boolean\n  breakpoints?: ResponsiveValue<boolean>\n  variant?: 'Sidebar' extends keyof ThemeTypings['components'] /* @ts-ignore */\n    ? ThemeTypings['components']['Sidebar']['variants']\n    : Variants\n  size?: 'Sidebar' extends keyof ThemeTypings['components'] /* @ts-ignore */\n    ? ThemeTypings['components']['Sidebar']['sizes']\n    : string\n}\n\nexport const [SidebarProvider, useSidebarContext] =\n  createContext<UseSidebarReturn>({\n    name: 'SidebarContext',\n    strict: false,\n  })\n\nexport const useSidebarToggleButton = () => {\n  const appShellContext = useAppShellContext()\n  const context = useSidebarContext()\n\n  const getButtonProps: PropGetter = (props) => {\n    return {\n      onClick: callAllHandlers(\n        context?.onToggle || appShellContext?.toggleSidebar,\n        props?.onClick\n      ),\n    }\n  }\n\n  return {\n    isOpen: context?.isOpen || appShellContext?.isSidebarOpen,\n    isMobile: context?.isMobile || appShellContext?.isMobile,\n    getButtonProps,\n  }\n}\n","import { createContext } from '@chakra-ui/utils'\nimport { SystemStyleObject } from '@chakra-ui/react'\n\nexport const [SidebarStylesProvider, useSidebarStyles] = createContext<\n  Record<string, SystemStyleObject>\n>({\n  name: `SidebarStylesContext`,\n  hookName: `useSidebarStyles`,\n  providerName: '<Sidebar />',\n})\n","import * as React from 'react'\n\nimport {\n  chakra,\n  StackProps,\n  HTMLChakraProps,\n  useStyleConfig,\n} from '@chakra-ui/react'\n\nimport { cx } from '@chakra-ui/utils'\n\nexport interface NavProps extends HTMLChakraProps<'nav'> {\n  orientation?: 'vertical' | 'horizontal'\n  spacing?: StackProps['spacing']\n}\n\nexport const Nav: React.FC<NavProps> = (props) => {\n  const styles = useStyleConfig('SuiNav', props)\n\n  const { children, spacing = 0, orientation = 'vertical', ...rest } = props\n\n  const containerStyles = {\n    '& > *:not(style) ~ *:not(style)': {\n      mt: orientation === 'vertical' ? spacing : undefined,\n      me: orientation === 'horizontal' ? spacing : undefined,\n    },\n    ...styles,\n  }\n\n  return (\n    <chakra.nav\n      {...rest}\n      __css={containerStyles}\n      className={cx('sui-nav', props.className)}\n      data-orientation={orientation}\n    >\n      {children}\n    </chakra.nav>\n  )\n}\n\nNav.displayName = 'Nav'\n","import * as React from 'react'\n\nimport {\n  chakra,\n  Collapse,\n  HTMLChakraProps,\n  ThemingProps,\n  useMultiStyleConfig,\n} from '@chakra-ui/react'\n\nimport { runIfFn, cx, MaybeRenderProp } from '@chakra-ui/utils'\nimport { ChevronDownIcon, ChevronRightIcon } from '../icons'\n\nimport { CollapseProvider, useCollapseContext, useCollapse } from '../collapse'\n\nimport { NavGroupStylesProvider, useNavGroupStyles } from './nav-context'\n\nexport interface NavGroupTitleProps extends HTMLChakraProps<'div'> {\n  leftIcon?: React.ReactElement\n  collapseIcon?: MaybeRenderProp<{ isOpen: boolean }>\n  isCollapsible?: boolean\n}\n\nconst NavGroupIcon: React.FC<HTMLChakraProps<'span'>> = (props) => {\n  const { children, className, ...rest } = props\n\n  const _children = React.isValidElement<any>(children)\n    ? React.cloneElement(children, {\n        'aria-hidden': true,\n        focusable: false,\n      })\n    : children\n\n  const _className = cx('sui-nav-group__icon', className)\n\n  return (\n    <chakra.span\n      display=\"inline-flex\"\n      alignSelf=\"center\"\n      flexShrink={0}\n      {...rest}\n      className={_className}\n    >\n      {_children}\n    </chakra.span>\n  )\n}\n\nexport const NavGroupTitle: React.FC<NavGroupTitleProps> = (props) => {\n  const {\n    leftIcon,\n    collapseIcon = ({ isOpen }) =>\n      isOpen ? <ChevronDownIcon /> : <ChevronRightIcon />,\n    children,\n    ...rest\n  } = props\n  const styles = useNavGroupStyles()\n\n  const { getToggleProps, isOpen, isCollapsible } = useCollapseContext()\n\n  const iconStyles = { marginEnd: 2, ...styles.icon }\n\n  const toggleProps = getToggleProps(rest)\n\n  return (\n    <chakra.div\n      {...toggleProps}\n      __css={styles.title}\n      className={cx(\n        'saas-nav-group__title',\n        props.className,\n        toggleProps.className\n      )}\n    >\n      {leftIcon && <NavGroupIcon __css={iconStyles}>{leftIcon}</NavGroupIcon>}\n      <chakra.span flex=\"1\">{runIfFn(children, { isOpen })}</chakra.span>\n      {isCollapsible && (\n        <NavGroupIcon>{runIfFn(collapseIcon, { isOpen })}</NavGroupIcon>\n      )}\n    </chakra.div>\n  )\n}\n\nNavGroupTitle.displayName = 'NavGroupTitle'\n\nexport interface NavGroupProps\n  extends Omit<HTMLChakraProps<'div'>, 'title'>,\n    ThemingProps<'SuiNavGroup'> {\n  title?: React.ReactNode\n  isCollapsible?: boolean\n  defaultIsOpen?: boolean\n  onOpen?: () => void\n  onClose?: () => void\n  icon?: React.ReactElement\n}\n\nexport const NavGroupContent: React.FC<HTMLChakraProps<'div'>> = (props) => {\n  const styles = useNavGroupStyles()\n  return (\n    <chakra.div\n      {...props}\n      __css={styles.content}\n      className={cx('sui-nav-group__content', props.className)}\n    />\n  )\n}\n\n/**\n * Navigation group containing nav items, used in Sidebar.\n *\n * @see Docs https://saas-ui.dev/docs/components/layout/sidebar\n */\nexport const NavGroup: React.FC<NavGroupProps> = (props) => {\n  const {\n    title,\n    icon,\n    isCollapsible = false,\n    defaultIsOpen = true,\n    onOpen,\n    onClose,\n    children,\n    ...rest\n  } = props\n  const styles = useMultiStyleConfig('SuiNavGroup', props)\n\n  const collapse = useCollapse({\n    ...props,\n    isCollapsible,\n    defaultIsOpen,\n  })\n  const { getCollapseProps } = collapse\n\n  let header = title\n  if (typeof title === 'string') {\n    header = <NavGroupTitle leftIcon={icon}>{title}</NavGroupTitle>\n  }\n\n  let content = <NavGroupContent>{children}</NavGroupContent>\n\n  if (isCollapsible) {\n    content = <Collapse {...(getCollapseProps() as any)}>{content}</Collapse>\n  }\n\n  return (\n    <NavGroupStylesProvider value={styles}>\n      <CollapseProvider value={collapse}>\n        <chakra.div\n          __css={{\n            userSelect: 'none',\n            ...styles.container,\n          }}\n          {...rest}\n          className={cx('sui-nav-group', props.className)}\n          role=\"group\"\n        >\n          {header}\n          {content}\n        </chakra.div>\n      </CollapseProvider>\n    </NavGroupStylesProvider>\n  )\n}\n\nNavGroup.displayName = 'NavGroup'\n","import { createContext } from '@chakra-ui/utils'\nimport { SystemStyleObject } from '@chakra-ui/react'\n\nexport const [NavGroupStylesProvider, useNavGroupStyles] = createContext<\n  Record<string, SystemStyleObject>\n>({\n  name: `NavGroupStylesContext`,\n  hookName: `useNavItemStyles`,\n  providerName: '<NavItem />',\n})\n\nexport const [NavItemStylesProvider, useNavItemStyles] = createContext<\n  Record<string, SystemStyleObject>\n>({\n  name: `NavItemStylesContext`,\n  hookName: `useNavItemStyles`,\n  providerName: '<NavItem />',\n})\n","import * as React from 'react'\n\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  HTMLChakraProps,\n  ThemingProps,\n  SystemProps,\n  useMultiStyleConfig,\n  Tooltip,\n  TooltipProps,\n} from '@chakra-ui/react'\n\nimport { cx, dataAttr } from '@chakra-ui/utils'\nimport { useLink } from '../provider'\n\nimport { useSidebarContext } from './use-sidebar'\nimport { NavItemStylesProvider, useNavItemStyles } from './nav-context'\n\nexport interface NavItemLabelProps extends HTMLChakraProps<'span'> {}\n\nexport const NavItemLabel = forwardRef<NavItemLabelProps, 'span'>(\n  ({ children, ...props }, ref) => {\n    const styles = useNavItemStyles()\n    return (\n      <chakra.span\n        ref={ref}\n        __css={styles.label}\n        {...props}\n        className={cx('sui-nav-item__label', props.className)}\n      >\n        {children}\n      </chakra.span>\n    )\n  }\n)\n\nNavItemLabel.displayName = 'NavItemLabel'\n\nconst NavItemIcon: React.FC<HTMLChakraProps<'span'>> = (props) => {\n  const styles = useNavItemStyles()\n\n  const { className, children, ...rest } = props\n\n  const child = React.Children.only(children)\n\n  const clone = React.isValidElement<HTMLChakraProps<any>>(child)\n    ? React.cloneElement(child, {\n        focusable: 'false',\n        'aria-hidden': true,\n      })\n    : null\n\n  return (\n    <chakra.span\n      {...rest}\n      className={cx('sui-nav-item__icon', props.className)}\n      __css={{\n        flexShrink: 0,\n        ...styles.icon,\n      }}\n    >\n      {clone}\n    </chakra.span>\n  )\n}\n\nNavItemIcon.displayName = 'NavItemIcon'\n\nexport interface NavItemProps\n  extends HTMLChakraProps<'a'>,\n    ThemingProps<'SuiNavItem'> {\n  /**\n   * The href attribute of the nav item,\n   * will be wrapped in a `Link`, if `linkComponent` is configured in SaasProvider.\n   */\n  href?: string\n  /**\n   * Icon to be displayed in the nav item\n   */\n  icon?: React.ReactElement\n  /**\n   * Inset of the item, used for nested items\n   */\n  inset?: SystemProps['paddingLeft']\n  /**\n   * Props to be passed to the tooltip\n   * @see Docs https://chakra-ui.com/docs/overlay/tooltip\n   */\n  tooltipProps?: Omit<TooltipProps, 'children'>\n  /**\n   * If `true`, the nav item will be active\n   */\n  isActive?: boolean\n}\n\n/**\n * Navigation item used in the sidebar.\n *\n * @see Docs https://saas-ui.dev/docs/components/layout/sidebar\n */\nexport const NavItem = forwardRef<NavItemProps, 'a'>((props, ref) => {\n  const {\n    as,\n    href,\n    icon,\n    inset,\n    className,\n    tooltipProps,\n    isActive,\n    children,\n    ...rest\n  } = omitThemingProps(props)\n  const Link = useLink()\n  const { onClose, variant: sidebarVariant } = useSidebarContext() || {}\n  const isCompact = sidebarVariant === 'compact'\n\n  const styles = useMultiStyleConfig('SuiNavItem', props)\n\n  let label = children\n  let tooltipLabel = tooltipProps?.label\n  if (typeof label === 'string') {\n    if (!tooltipLabel && isCompact) {\n      tooltipLabel = label\n    }\n    label = <NavItemLabel>{label}</NavItemLabel>\n  }\n\n  let asLink = as\n  if (href && !as) {\n    asLink = Link\n  }\n\n  const link = (\n    <chakra.a\n      as={asLink}\n      aria-current={isActive ? 'page' : undefined}\n      {...rest}\n      ref={ref}\n      href={href}\n      className=\"sui-nav-item__link\"\n      data-active={dataAttr(isActive)}\n      __css={styles.link}\n    >\n      <chakra.span\n        __css={{\n          ...styles.inner,\n          pl: inset,\n        }}\n        className=\"sui-nav-item__inner\"\n      >\n        {icon && <NavItemIcon>{icon}</NavItemIcon>}\n        {label}\n      </chakra.span>\n    </chakra.a>\n  )\n\n  return (\n    <NavItemStylesProvider value={styles}>\n      <Tooltip\n        label={tooltipLabel}\n        placement=\"right\"\n        openDelay={400}\n        {...tooltipProps}\n      >\n        <chakra.div\n          __css={styles.item}\n          onClick={onClose}\n          data-compact={dataAttr(isCompact)}\n          className={cx('sui-nav-item', className)}\n        >\n          {link}\n        </chakra.div>\n      </Tooltip>\n    </NavItemStylesProvider>\n  )\n})\n\nNavItem.displayName = 'NavItem'\n","import * as React from 'react'\n\nimport {\n  forwardRef,\n  InputGroup,\n  Input,\n  InputLeftElement,\n  InputRightElement,\n  IconButton,\n  InputProps,\n  ThemingProps,\n  useMultiStyleConfig,\n  useControllableState,\n  useMergeRefs,\n} from '@chakra-ui/react'\nimport { callAllHandlers } from '@chakra-ui/utils'\nimport { SearchIcon, CloseIcon } from '../icons'\n\nexport interface SearchInputProps\n  extends ThemingProps<'SuiSearchInput'>,\n    Omit<InputProps, 'size' | 'variant'> {\n  /**\n   * The placeholder text for the input\n   * @type string\n   * @default Search\n   */\n  placeholder?: string\n  /**\n   * The icon to render before the input text\n   * @type React.ReactElement\n   */\n  icon?: React.ReactElement\n  /**\n   * The icon to render in the reset button\n   * @type React.ReactElement\n   */\n  resetIcon?: React.ReactElement\n  /**\n   * Right element rendered when the value is empty\n   * @type React.ReactElement\n   */\n  rightElement?: React.ReactElement\n  /**\n   * Callback to trigger when the reset button is clicked or escape key is pressed\n   */\n  onReset?: () => void\n}\n\nexport const SearchInput = forwardRef<SearchInputProps, 'input'>(\n  (props, ref) => {\n    const {\n      placeholder = 'Search',\n      value: valueProp,\n      defaultValue: defaultValueProp,\n      size,\n      variant,\n      width,\n      icon,\n      resetIcon,\n      rightElement,\n      onChange: onChangeProp,\n      onReset: onResetProp,\n      onKeyDown: onKeyDownProp,\n      ...inputProps\n    } = props\n    const styles = useMultiStyleConfig('SuiSearchInput', props)\n\n    const inputRef = React.useRef<HTMLInputElement>(null)\n\n    const [value, setValue] = useControllableState({\n      value: valueProp,\n      defaultValue: defaultValueProp,\n    })\n\n    const onChange = React.useCallback(\n      (e: React.ChangeEvent<HTMLInputElement>) => {\n        setValue(e.target.value)\n      },\n      [setValue]\n    )\n\n    const onKeyDown = React.useCallback(\n      (event: React.KeyboardEvent) => {\n        if (event.key === 'Escape') {\n          setValue('')\n          onReset()\n        }\n      },\n      [onResetProp, setValue]\n    )\n\n    const onReset = () => {\n      setValue('')\n      onResetProp?.()\n      inputRef.current?.focus()\n    }\n\n    const btnSize = size === 'lg' ? 'sm' : 'xs'\n\n    const showReset = value && !props.isDisabled\n\n    return (\n      <InputGroup size={size} width={width}>\n        <InputLeftElement>{icon || <SearchIcon />}</InputLeftElement>\n        <Input\n          type=\"text\"\n          placeholder={placeholder}\n          variant={variant}\n          size={size}\n          value={value}\n          ref={useMergeRefs(ref, inputRef)}\n          sx={styles.input}\n          onChange={callAllHandlers(onChange, onChangeProp)}\n          onKeyDown={callAllHandlers(onKeyDown, onKeyDownProp)}\n          {...inputProps}\n        />\n        <InputRightElement>\n          {showReset ? (\n            <IconButton\n              onClick={onReset}\n              size={btnSize}\n              variant=\"ghost\"\n              aria-label=\"Reset search\"\n              icon={resetIcon || <CloseIcon />}\n              sx={styles.reset}\n            />\n          ) : (\n            rightElement\n          )}\n        </InputRightElement>\n      </InputGroup>\n    )\n  }\n)\n\nSearchInput.displayName = 'SearchInput'\n","import * as React from 'react'\n\nimport {\n  chakra,\n  useTheme,\n  useToast,\n  UseToastOptions,\n  ToastId,\n  Alert,\n  AlertIcon,\n  AlertTitle,\n  AlertDescription,\n  AlertIconProps,\n  CloseButton,\n  ButtonGroup,\n  Spinner,\n  useMultiStyleConfig,\n  AlertProps,\n  ToastPosition,\n  type CreateToastFnReturn,\n} from '@chakra-ui/react'\nimport { runIfFn } from '@chakra-ui/utils'\n\nconst AlertSpinner: React.FC<AlertIconProps> = (props) => {\n  const styles = useMultiStyleConfig('Alert', props)\n  return (\n    <chakra.span\n      display=\"inherit\"\n      alignItems=\"center\"\n      {...props}\n      __css={styles.icon}\n    >\n      <Spinner size=\"sm\" />\n    </chakra.span>\n  )\n}\n\nexport interface SnackbarProps\n  extends Omit<AlertProps, 'id' | 'title' | 'position'> {\n  id?: ToastId\n  title?: React.ReactNode\n  icon?: React.ReactNode\n  action?: React.ReactNode\n  description?: React.ReactNode\n  position?: ToastPosition\n  isClosable?: boolean\n  onClose?: () => void\n}\n\nexport const Snackbar: React.FC<SnackbarProps> = (props) => {\n  const {\n    status,\n    variant,\n    id,\n    title,\n    icon,\n    isClosable,\n    onClose,\n    description,\n    action,\n  } = props\n\n  const theme = useTheme()\n\n  // Use the snackbar variant if it exists, otherwise default to solid\n  const defaultVariant = theme.components?.Alert?.variants?.snackbar\n    ? 'snackbar'\n    : 'solid'\n\n  const alertTitleId =\n    typeof id !== 'undefined' ? `toast-${id}-title` : undefined\n\n  return (\n    <Alert\n      status={status}\n      variant={variant || defaultVariant}\n      id={id !== 'undefined' ? `toast-${id}` : undefined}\n      alignItems=\"start\"\n      borderRadius=\"md\"\n      boxShadow=\"lg\"\n      textAlign=\"start\"\n      width=\"auto\"\n      aria-labelledby={alertTitleId}\n    >\n      {icon === null ? null : icon ? icon : <AlertIcon />}\n      <chakra.div flex=\"1\" maxWidth=\"100%\">\n        {title && <AlertTitle id={alertTitleId}>{title}</AlertTitle>}\n        {description && (\n          <AlertDescription display=\"block\">{description}</AlertDescription>\n        )}\n      </chakra.div>\n      {(action || isClosable) && (\n        <ButtonGroup size=\"xs\" variant=\"ghost\" ms=\"2\">\n          {action}\n          {isClosable && <CloseButton size=\"sm\" onClick={onClose} />}\n        </ButtonGroup>\n      )}\n    </Alert>\n  )\n}\n\nexport interface UseSnackbarOptions extends UseToastOptions {\n  icon?: React.ReactNode\n  action?: React.ReactNode\n  variant?:\n    | 'snackbar'\n    | 'subtle'\n    | 'solid'\n    | 'left-accent'\n    | 'top-accent'\n    | string\n}\n\nexport type SnackbarOptions = UseSnackbarOptions | string\n\nexport interface SnackbarPromiseOptions {\n  loading?: SnackbarOptions\n  success: SnackbarOptions | ((data: any) => SnackbarOptions)\n  error: SnackbarOptions | ((error: any) => SnackbarOptions)\n}\n\nexport type UseSnackbarReturn = Omit<CreateToastFnReturn, 'promise'> & {\n  info: (options: SnackbarOptions) => ToastId\n  success: (options: SnackbarOptions) => ToastId\n  error: (options: SnackbarOptions) => ToastId\n  promise: (\n    promise: Promise<unknown>,\n    options: SnackbarPromiseOptions\n  ) => Promise<unknown>\n}\n\n/**\n * The snackbar component is used to give feedback after certain actions.\n *\n * @see Docs https://saas-ui.dev/docs/components/feedback/snackbar\n */\nexport function useSnackbar(\n  defaultOptions?: UseSnackbarOptions\n): UseSnackbarReturn {\n  const toast = useToast(defaultOptions)\n\n  const parseOptions = React.useCallback(\n    (options: SnackbarOptions): UseSnackbarOptions => {\n      if (typeof options === 'string') {\n        return {\n          title: options,\n        }\n      }\n      return options\n    },\n    []\n  )\n\n  return React.useMemo(() => {\n    const snackbar = (options: SnackbarOptions): ToastId => {\n      const opts = parseOptions(options)\n      useToast\n      return toast({\n        render: (props) => (\n          <Snackbar {...defaultOptions} {...opts} {...props} />\n        ),\n        ...opts,\n      })\n    }\n\n    snackbar.info = (options: SnackbarOptions) =>\n      snackbar({\n        status: 'info',\n        ...parseOptions(options),\n      })\n\n    snackbar.success = (options: SnackbarOptions) =>\n      snackbar({\n        status: 'success',\n        ...parseOptions(options),\n      })\n\n    snackbar.error = (options: SnackbarOptions) =>\n      snackbar({\n        status: 'error',\n        ...parseOptions(options),\n      })\n\n    /**\n     * A utility function to show a loading spinner while a promise resolves.\n     * `success` and `error` accept an optional function that receives the result or error of the promise.\n     *\n     * if `error` is a function, it will not throw the error, and you can handle it in the callback function.\n     */\n    snackbar.promise = async (\n      promise: Promise<unknown>,\n      { loading, success, error }: SnackbarPromiseOptions\n    ) => {\n      let toastId: ToastId | undefined\n      if (loading) {\n        const options = parseOptions(loading)\n        toastId = snackbar({\n          status: 'info',\n          duration: null,\n          icon: <AlertSpinner />,\n          ...options,\n        })\n      }\n      return promise\n        .then((result) => {\n          const options: UseSnackbarOptions = {\n            status: 'success',\n            duration: 5000,\n            ...parseOptions(runIfFn(success, result)),\n          }\n          if (toastId) {\n            snackbar.update(toastId, options)\n          } else {\n            snackbar(options)\n          }\n          return result\n        })\n        .catch((e) => {\n          const options: UseSnackbarOptions = {\n            title: e.name,\n            description: e.description,\n            status: 'error',\n            duration: 5000,\n            ...parseOptions(runIfFn(error, e)),\n          }\n\n          if (toastId) {\n            snackbar.update(toastId, options)\n          } else {\n            snackbar(options)\n          }\n\n          if (typeof error !== 'function') {\n            throw e\n          }\n        })\n    }\n\n    snackbar.update = (toastId: ToastId, options: UseToastOptions) => {\n      return toast.update(toastId, {\n        render: (props) => (\n          <Snackbar {...defaultOptions} {...options} {...props} />\n        ),\n        ...options,\n      })\n    }\n    snackbar.isActive = toast.isActive\n    snackbar.close = toast.close\n    snackbar.closeAll = toast.closeAll\n\n    return snackbar\n  }, [toast, defaultOptions])\n}\n","import {\n  CreateStandAloneToastParam,\n  createStandaloneToast,\n  CreateStandaloneToastReturn,\n} from '@chakra-ui/react'\nimport { Snackbar } from './use-snackbar'\n\ntype CreateStandAloneSnackbarReturn = {\n  snackbar: CreateStandaloneToastReturn['toast']\n  SnackbarContainer: CreateStandaloneToastReturn['ToastContainer']\n}\n\nexport const createStandAloneSnackbar = (\n  options: CreateStandAloneToastParam\n): CreateStandAloneSnackbarReturn => {\n  const { ToastContainer: SnackbarContainer, toast: snackbar } =\n    createStandaloneToast({\n      ...options,\n      defaultOptions: {\n        render: (props) => <Snackbar {...props} />,\n        ...options.defaultOptions,\n      },\n    })\n\n  return {\n    SnackbarContainer,\n    snackbar,\n  }\n}\n","import * as React from 'react'\n\nimport {\n  chakra,\n  forwardRef,\n  useMultiStyleConfig,\n  HTMLChakraProps,\n  createStylesContext,\n  Stepper,\n  StepperProps,\n  StepSeparator,\n  Collapse,\n  Step,\n  StepIndicator,\n  StepStatus,\n  StepIcon,\n  StepNumber,\n  Box,\n  StepTitle,\n  StepDescription,\n  ThemingProps,\n} from '@chakra-ui/react'\n\nimport { getChildOfType, getChildrenOfType } from '@saas-ui/react-utils'\nimport { cx } from '@chakra-ui/utils'\n\nimport {\n  StepperProvider,\n  useStepper,\n  useStep,\n  useStepperContext,\n} from './use-stepper'\n\nconst [StylesProvider, useStyles] = createStylesContext('Stepper')\n\nexport interface StepsProps\n  extends Omit<HTMLChakraProps<'div'>, 'onChange'>,\n    ThemingProps<'Stepper'> {\n  /**\n   * The orientation of the stepper.\n   */\n  orientation?: 'horizontal' | 'vertical'\n  /**\n   * The current step index or name.\n   */\n  step?: number | string\n  /**\n   * The current step index.\n   */\n  index?: number\n  /**\n   * Callback invoked when the step changes.\n   */\n  onChange?: (index: number) => void\n  /**\n   * Props to pass to the stepper component.\n   *\n   * @see Docs https://chakra-ui.com/docs/feedback/stepper#props\n   */\n  stepperProps?: StepperProps\n}\n\n/**\n * Wrapper element containing the steps.\n */\nexport const Steps = forwardRef<StepsProps, 'div'>((props, ref) => {\n  const {\n    children,\n    orientation = 'horizontal',\n    index,\n    step,\n    onChange,\n    variant,\n    colorScheme,\n    size,\n    stepperProps,\n    ...rest\n  } = props\n  const styles = useMultiStyleConfig('Stepper', props)\n\n  const context = useStepper({\n    step: step ?? index,\n    onChange,\n  })\n\n  const { activeIndex } = context\n\n  const isVertical = orientation === 'vertical'\n\n  const steps = getChildrenOfType(children, StepsItem)\n\n  const itemStyles = {\n    position: 'relative',\n    ...styles.item,\n  }\n\n  const elements = steps.reduce<React.ReactElement[]>((memo, step, i, arr) => {\n    const item = React.cloneElement(step, {\n      key: i,\n      ...step.props,\n      isActive: activeIndex === i,\n      isCompleted: step.props.isCompleted || activeIndex > i,\n    })\n\n    if (isVertical) {\n      memo.push(\n        <chakra.div\n          className=\"sui-steps__item\"\n          key={`content-${i}`}\n          __css={itemStyles}\n        >\n          {item}\n          <StepsContent isOpen={activeIndex === i} orientation={orientation}>\n            {step.props.children}\n          </StepsContent>\n          {i < arr.length - 1 ? <StepSeparator /> : null}\n        </chakra.div>\n      )\n    } else {\n      memo.push(item)\n    }\n\n    return memo\n  }, [])\n\n  const completed = getChildOfType(children, StepsCompleted)\n\n  const hasContent = steps[activeIndex]?.props?.children\n\n  const content =\n    activeIndex >= steps.length ? (\n      completed\n    ) : !isVertical && hasContent ? (\n      <StepsContent orientation={orientation}>\n        {steps[activeIndex]?.props?.children}\n      </StepsContent>\n    ) : null\n\n  return (\n    <StylesProvider value={styles}>\n      <StepperProvider value={context}>\n        <chakra.div\n          ref={ref}\n          __css={styles.container}\n          {...rest}\n          className={cx('sui-steps', props.className)}\n        >\n          <Stepper\n            index={activeIndex}\n            orientation={orientation}\n            variant={variant}\n            colorScheme={colorScheme}\n            size={size}\n            {...stepperProps}\n          >\n            {elements}\n          </Stepper>\n          {content}\n        </chakra.div>\n      </StepperProvider>\n    </StylesProvider>\n  )\n})\n\nSteps.displayName = 'Steps'\n\nexport interface StepsItemProps extends Omit<HTMLChakraProps<'div'>, 'title'> {\n  /**\n   * Custom render function\n   */\n  render?: (props?: any) => React.ReactElement\n  /**\n   * The step name\n   */\n  name?: string\n  /**\n   * The step title\n   */\n  title: React.ReactNode\n  /**\n   * The step description\n   */\n  description?: React.ReactNode\n  /**\n   * Show an icon instead of the step number\n   */\n  icon?: React.ReactNode\n  /**\n   * Show the step as active\n   */\n  isActive?: boolean\n  /**\n   * Show the step as completed\n   */\n  isCompleted?: boolean\n}\n\nexport const StepsItem: React.FC<StepsItemProps> = (props) => {\n  const { render, icon, title, description, ...rest } = props\n\n  const step = useStep(rest)\n\n  if (render) {\n    return render({\n      ...step,\n      ...props,\n    })\n  }\n\n  return (\n    <Step>\n      <StepIndicator>\n        <StepStatus\n          complete={<StepIcon />}\n          incomplete={<StepNumber children={icon} />}\n          active={<StepNumber />}\n        />\n      </StepIndicator>\n\n      <Box flexShrink=\"0\">\n        <StepTitle>{title}</StepTitle>\n        {description && <StepDescription>{description}</StepDescription>}\n      </Box>\n\n      <StepSeparator />\n    </Step>\n  )\n}\n\nStepsItem.displayName = 'StepsItem'\n\nexport interface StepperContentProps extends HTMLChakraProps<'div'> {\n  /**\n   * Show or hide the content, only when orientation is vertical.\n   */\n  isOpen?: boolean\n  /**\n   * The orientation of the stepper.\n   */\n  orientation?: 'horizontal' | 'vertical'\n}\n\n/**\n * Renders the step content, is collapsible.\n */\nexport const StepsContent: React.FC<StepperContentProps> = (props) => {\n  const { children, isOpen = true, orientation = 'horizontal', ...rest } = props\n  const styles = useStyles()\n\n  return (\n    <chakra.div\n      {...rest}\n      __css={styles.content}\n      className={cx('sui-steps__content', props.className)}\n      data-orientation={orientation}\n    >\n      {orientation === 'vertical' ? (\n        <Collapse\n          in={isOpen}\n          style={{ overflow: isOpen ? 'visible' : 'hidden' }}\n        >\n          <chakra.div p=\"2px\">{isOpen ? children : null}</chakra.div>\n        </Collapse>\n      ) : (\n        children\n      )}\n    </chakra.div>\n  )\n}\n\nStepsContent.displayName = 'StepsContent'\n\n/**\n * Shown when all steps have completed.\n */\nexport const StepsCompleted: React.FC<HTMLChakraProps<'div'>> = (props) => {\n  const completedStyles = {}\n  return (\n    <chakra.div\n      __css={completedStyles}\n      {...props}\n      className={cx('sui-steps__completed', props.className)}\n    />\n  )\n}\n\nStepsCompleted.displayName = 'StepsCompleted'\n","import * as React from 'react'\n\nimport { createContext } from '@chakra-ui/utils'\n\nexport const [StepperProvider, useStepperContext] =\n  createContext<UseStepperReturn>({\n    name: 'StepperContext',\n    errorMessage:\n      'useStepperContext: `context` is undefined. Seems you forgot to wrap stepper components in `<Stepper />`',\n  })\n\nexport interface UseStepperProps {\n  step?: number | string\n  isCompleted?: boolean\n  onChange?(index: number): void\n}\n\nexport function useStepper(props: UseStepperProps) {\n  const { step, onChange } = props\n\n  const [activeIndex, setIndex] = React.useState(0)\n\n  const stepsRef = React.useRef<string[]>([])\n\n  const [, onUpdate] = React.useState(Date.now())\n\n  const registerStep = React.useCallback(\n    (name: string) => {\n      const newSteps = [...stepsRef.current]\n\n      if (newSteps.indexOf(name) === -1) {\n        newSteps.push(name)\n      }\n\n      stepsRef.current = newSteps\n      onUpdate(Date.now())\n    },\n    [stepsRef, onUpdate]\n  )\n\n  const unregisterStep = (name: string) => {\n    stepsRef.current = stepsRef.current.slice(stepsRef.current.indexOf(name), 1)\n  }\n\n  const setStep = (name: string) => {\n    const i = stepsRef.current.indexOf(name)\n    if (i !== -1) {\n      setIndex(i)\n    }\n  }\n\n  const nextStep = () => {\n    setIndex(activeIndex + 1)\n  }\n\n  const prevStep = () => {\n    setIndex(activeIndex - 1)\n  }\n\n  React.useEffect(() => {\n    if (typeof step === 'string') {\n      setStep(step)\n    } else if (typeof step === 'number') {\n      setIndex(step)\n    } else if (activeIndex === -1) {\n      setIndex(0) // initiate the stepper by activating the first step\n    }\n  }, [step])\n\n  React.useEffect(() => {\n    onChange?.(activeIndex)\n  }, [activeIndex, onChange])\n\n  const context = {\n    stepsRef,\n    activeStep: stepsRef.current[activeIndex],\n    activeIndex,\n    isFirstStep: activeIndex === 0,\n    isLastStep: activeIndex === stepsRef.current.length - 1,\n    isCompleted: activeIndex >= stepsRef.current.length,\n    setIndex,\n    setStep,\n    nextStep,\n    prevStep,\n    registerStep,\n    unregisterStep,\n  }\n\n  return context\n}\n\nexport type UseStepperReturn = ReturnType<typeof useStepper>\n\nexport interface UseStepProps {\n  name?: string\n  isActive?: boolean\n  isCompleted?: boolean\n}\n\nexport function useStep(props: UseStepProps) {\n  const { name, isActive, isCompleted } = props\n\n  const { registerStep, unregisterStep, activeStep } = useStepperContext()\n\n  React.useEffect(() => {\n    if (!name) {\n      return\n    }\n    registerStep(name)\n\n    return () => {\n      unregisterStep(name)\n    }\n  }, [])\n\n  return {\n    isActive: name ? activeStep === name : isActive,\n    isCompleted,\n  }\n}\n\n/**\n * Returns props for a Prev Button\n */\nexport function useStepperPrevButton({ label = 'Back' } = {}) {\n  const { isFirstStep, prevStep } = useStepperContext()\n\n  return {\n    isDisabled: isFirstStep,\n    onClick: prevStep,\n    children: label,\n  }\n}\n\n/**\n * Returns props for a Next Button\n */\nexport function useStepperNextButton({\n  label = 'Next',\n  submitLabel = 'Submit',\n} = {}) {\n  const { isLastStep, isCompleted, nextStep } = useStepperContext()\n\n  return {\n    isDisabled: isCompleted,\n    onClick: nextStep,\n    children: isLastStep ? submitLabel : label,\n  }\n}\n","import * as React from 'react'\n\nimport { chakra, HTMLChakraProps } from '@chakra-ui/react'\n\nimport { cx } from '@chakra-ui/utils'\n\nexport interface Web3AddressProps extends HTMLChakraProps<'span'> {\n  address: string\n  startLength?: number\n  endLength?: number\n}\n/**\n * Display Web3 addresses in a more readable format.\n *\n * @see Docs https://saas-ui.dev/docs/components/web3/address\n */\nexport const Web3Address: React.FC<Web3AddressProps> = (props) => {\n  const { address, startLength = 6, endLength = 4, ...rest } = props\n  const start = address.slice(0, startLength)\n  const end = address.slice(address.length - endLength, address.length)\n\n  return (\n    <chakra.span {...rest} className={cx('sui-web3-address', props.className)}>\n      {start}...{end}\n    </chakra.span>\n  )\n}\n\nWeb3Address.displayName = 'Web3Address'\n","import React from 'react'\nimport {\n  chakra,\n  forwardRef,\n  HTMLChakraProps,\n  createStylesContext,\n  useMultiStyleConfig,\n  ThemingProps,\n} from '@chakra-ui/react'\nimport { cx, dataAttr } from '@chakra-ui/utils'\n\nconst [StylesProvider, useStyles] = createStylesContext('SuiTimeline')\n\nexport const useTimelineStyles = useStyles\n\nexport interface TimelineProps\n  extends HTMLChakraProps<'ul'>,\n    ThemingProps<'SuiTimeline'> {}\n\n/**\n * Display a list of events in chronological order.\n *\n * @see Docs https://saas-ui.dev/docs/components/data-display/timeline\n */\nexport const Timeline: React.FC<TimelineProps> = (props) => {\n  const { children, orientation = 'vertical', ...rest } = props\n\n  const styles = useMultiStyleConfig('SuiTimeline', props)\n\n  const timelineStyles = {\n    position: 'relative',\n    listStyle: 'none',\n    ...styles.container,\n  }\n\n  return (\n    <StylesProvider value={styles}>\n      <chakra.ul\n        {...rest}\n        __css={timelineStyles}\n        className={cx('sui-timeline', props.className)}\n        data-orientation=\"vertical\"\n      >\n        {children}\n      </chakra.ul>\n    </StylesProvider>\n  )\n}\n\nTimeline.displayName = 'Timeline'\n\nexport interface TimelineItemProps extends HTMLChakraProps<'li'> {}\n\nexport const TimelineItem = forwardRef<TimelineItemProps, 'li'>(\n  (props, ref) => {\n    const { children, ...rest } = props\n\n    const styles = useStyles()\n\n    return (\n      <chakra.li\n        {...rest}\n        ref={ref}\n        __css={styles.item}\n        className={cx('sui-timeline__item', props.className)}\n      >\n        {children}\n      </chakra.li>\n    )\n  }\n)\n\nTimelineItem.displayName = 'TimelineItem'\n\nexport interface TimelineContentProps extends HTMLChakraProps<'div'> {}\n\nexport const TimelineContent: React.FC<TimelineContentProps> = (props) => {\n  const { children, ...rest } = props\n\n  const styles = useStyles()\n\n  const contentStyles = {\n    flex: 1,\n    ...styles.content,\n  }\n\n  return (\n    <chakra.div\n      {...rest}\n      __css={contentStyles}\n      className={cx('sui-timeline__content', props.className)}\n    >\n      {children}\n    </chakra.div>\n  )\n}\n\nTimelineContent.displayName = 'TimelineContent'\n\nexport interface TimelineSeparatorProps extends HTMLChakraProps<'div'> {}\n\nexport const TimelineSeparator: React.FC<TimelineSeparatorProps> = (props) => {\n  const { children, ...rest } = props\n\n  const styles = useStyles()\n\n  const separatorStyles = {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    flexShrink: 0,\n    ...styles.separator,\n  }\n\n  return (\n    <chakra.div\n      {...rest}\n      __css={separatorStyles}\n      className={cx('sui-timeline__separator', props.className)}\n    >\n      {children}\n    </chakra.div>\n  )\n}\n\nTimelineSeparator.displayName = 'TimelineSeparator'\n\nexport interface TimelineDotProps extends HTMLChakraProps<'div'> {}\n\nexport const TimelineDot: React.FC<TimelineDotProps> = (props) => {\n  const { children, ...rest } = props\n\n  const styles = useStyles()\n\n  const dotStyles = {\n    ...styles.dot,\n  }\n\n  return (\n    <chakra.div\n      {...rest}\n      __css={dotStyles}\n      className={cx('sui-timeline__dot', props.className)}\n    >\n      {children}\n    </chakra.div>\n  )\n}\n\nTimelineDot.displayName = 'TimelineDot'\n\nexport interface TimelineIconProps extends HTMLChakraProps<'div'> {}\n\nexport const TimelineIcon: React.FC<TimelineIconProps> = (props) => {\n  const { children, ...rest } = props\n\n  const styles = useStyles()\n\n  const iconStyles = {\n    display: 'flex',\n    alignItems: 'center',\n    zIndex: 1,\n    ...styles.icon,\n  }\n\n  return (\n    <chakra.div\n      {...rest}\n      __css={iconStyles}\n      className={cx('sui-timeline__icon', props.className)}\n      data-dot={dataAttr(!children)}\n    >\n      {children || <TimelineDot />}\n    </chakra.div>\n  )\n}\n\nTimelineIcon.displayName = 'TimelineIcon'\n\nexport interface TimelineTrackProps extends HTMLChakraProps<'div'> {}\n\nexport const TimelineTrack: React.FC<TimelineTrackProps> = (props) => {\n  const { children, ...rest } = props\n\n  const styles = useStyles()\n\n  return (\n    <chakra.div\n      {...rest}\n      __css={styles.track}\n      className={cx('sui-timeline__track', props.className)}\n    >\n      {children}\n    </chakra.div>\n  )\n}\n\nTimelineTrack.displayName = 'TimelineTrack'\n","import {\n  chakra,\n  useStyleConfig,\n  IconProps,\n  ThemingProps,\n  forwardRef,\n  omitThemingProps,\n} from '@chakra-ui/react'\nimport { cx } from '@chakra-ui/utils'\nimport { cloneElement, isValidElement } from 'react'\n\nexport interface IconBadgeProps\n  extends IconProps,\n    ThemingProps<'SuiIconBadge'> {\n  /**\n   * The icon to be used in the button.\n   * @type React.ReactElement\n   */\n  icon?: React.ReactElement\n  /**\n   * If `true`, the badge will be perfectly round. Else, it'll be slightly round\n   *\n   * @default false\n   */\n  isRound?: boolean\n  /**\n   * A11y: A label that describes the icon\n   */\n  'aria-label'?: string\n}\n\nexport const IconBadge = forwardRef<IconBadgeProps, 'div'>((props, ref) => {\n  const { icon, children, isRound, 'aria-label': ariaLabel, ...rest } = props\n  const styles = useStyleConfig('SuiIconBadge', props)\n\n  const itemProps = omitThemingProps(rest)\n\n  /**\n   * Passing the icon as prop or children should work\n   */\n  const element = icon || children\n  const _children = isValidElement(element)\n    ? cloneElement(element as any, {\n        'aria-hidden': true,\n        focusable: false,\n      })\n    : null\n\n  const __css = {\n    display: 'inline-flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    ...styles,\n  }\n\n  return (\n    <chakra.div\n      ref={ref}\n      __css={__css}\n      borderRadius={isRound ? 'full' : undefined}\n      aria-label={ariaLabel}\n      {...itemProps}\n      className={cx('sui-icon-badge', props.className)}\n    >\n      {_children}\n    </chakra.div>\n  )\n})\n"],"names":["chakra","jsx","chakra","cx","jsx","React","jsx","chakra","jsx","chakra","jsx","React","createStylesContext","useMultiStyleConfig","omitThemingProps","forwardRef","cx","createContext","createContext","jsx","jsxs","StylesProvider","useStyles","createStylesContext","forwardRef","useMultiStyleConfig","omitThemingProps","cx","React","chakra","forwardRef","omitThemingProps","ButtonGroup","useMultiStyleConfig","createStylesContext","Icon","cx","createContext","Icon","jsx","CheckIcon","React","chakra","jsx","jsx","StylesProvider","useStyles","createStylesContext","CheckIcon","createContext","forwardRef","omitThemingProps","useMultiStyleConfig","cx","chakra","ButtonGroup","Icon","React","useDisclosure","cx","createContext","props","rest","React","chakra","forwardRef","omitThemingProps","useMultiStyleConfig","createStylesContext","Icon","callAllHandlers","cx","createContext","jsx","jsxs","StylesProvider","useStyles","_a","forwardRef","jsx","Link","forwardRef","useState","chakra","createStylesContext","useMultiStyleConfig","omitThemingProps","cx","AnimatePresence","motion","jsx","StylesProvider","useStyles","Motion","chakra","motion","useMultiStyleConfig","omitThemingProps","useState","jsx","StylesProvider","AnimatePresence","cx","useStyles","Icon","jsx","jsxs","jsx","jsxs","React","useCallback","useRef","useState","chakra","Menu","MenuList","forwardRef","callAllHandlers","createContext","React","useState","useEffect","useRef","isBrowser","useRef","useEffect","jsx","createContext","useState","useRef","useCallback","Menu","callAllHandlers","forwardRef","chakra","MenuList","chakra","forwardRef","useMultiStyleConfig","omitThemingProps","createStylesContext","cx","Fragment","jsx","jsxs","StylesProvider","useStyles","React","chakra","forwardRef","useMultiStyleConfig","omitThemingProps","createStylesContext","cx","jsx","jsxs","StylesProvider","useStyles","dataAttr","useEffect","useRef","useState","useRef","useState","useEffect","props","dataAttr","createContext","chakra","forwardRef","useMultiStyleConfig","motion","cx","jsx","chakra","motion","forwardRef","useMultiStyleConfig","chakra","forwardRef","cx","jsx","forwardRef","chakra","cx","chakra","forwardRef","cx","jsx","forwardRef","chakra","cx","chakra","forwardRef","cx","dataAttr","jsx","forwardRef","chakra","cx","dataAttr","chakra","forwardRef","cx","dataAttr","jsx","forwardRef","Link","chakra","dataAttr","cx","React","chakra","omitThemingProps","useMultiStyleConfig","useBreakpointValue","useDisclosure","forwardRef","useTheme","useStyleConfig","cx","dataAttr","runIfFn","motion","AnimatePresence","callAllHandlers","createContext","createContext","jsx","MotionBox","chakra","motion","forwardRef","useMultiStyleConfig","useTheme","omitThemingProps","useBreakpointValue","useDisclosure","cx","dataAttr","useStyleConfig","runIfFn","AnimatePresence","chakra","useStyleConfig","cx","jsx","React","chakra","useMultiStyleConfig","runIfFn","cx","createContext","jsx","jsxs","cx","chakra","isOpen","runIfFn","useMultiStyleConfig","React","chakra","forwardRef","omitThemingProps","useMultiStyleConfig","Tooltip","cx","dataAttr","jsx","jsxs","forwardRef","chakra","cx","omitThemingProps","Link","useMultiStyleConfig","dataAttr","Tooltip","React","forwardRef","IconButton","useMultiStyleConfig","useMergeRefs","callAllHandlers","jsx","jsxs","forwardRef","useMultiStyleConfig","useMergeRefs","callAllHandlers","IconButton","React","chakra","useTheme","CloseButton","ButtonGroup","Spinner","useMultiStyleConfig","runIfFn","jsx","jsxs","jsx","React","chakra","forwardRef","useMultiStyleConfig","createStylesContext","Collapse","cx","React","createContext","jsx","jsxs","StylesProvider","useStyles","createStylesContext","forwardRef","useMultiStyleConfig","step","chakra","cx","Collapse","chakra","cx","jsxs","chakra","forwardRef","createStylesContext","useMultiStyleConfig","cx","dataAttr","jsx","StylesProvider","useStyles","chakra","useStyleConfig","forwardRef","omitThemingProps","cx","cloneElement","isValidElement","jsx"],"mappings":"","debugId":null}},
    {"offset": {"line": 1422, "column": 0}, "map": {"version":3,"sources":["file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/hooks/dist/index.mjs/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const useLocalStorage = registerClientReference(\n    function() { throw new Error(\"Attempted to call useLocalStorage() from the server but useLocalStorage is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/hooks/dist/index.mjs <module evaluation>\",\n    \"useLocalStorage\",\n);\nexport const useOutsideClick = registerClientReference(\n    function() { throw new Error(\"Attempted to call useOutsideClick() from the server but useOutsideClick is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/hooks/dist/index.mjs <module evaluation>\",\n    \"useOutsideClick\",\n);\nexport const usePromise = registerClientReference(\n    function() { throw new Error(\"Attempted to call usePromise() from the server but usePromise is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/hooks/dist/index.mjs <module evaluation>\",\n    \"usePromise\",\n);\nexport const useScript = registerClientReference(\n    function() { throw new Error(\"Attempted to call useScript() from the server but useScript is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/hooks/dist/index.mjs <module evaluation>\",\n    \"useScript\",\n);\nexport const useScrollPosition = registerClientReference(\n    function() { throw new Error(\"Attempted to call useScrollPosition() from the server but useScrollPosition is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/hooks/dist/index.mjs <module evaluation>\",\n    \"useScrollPosition\",\n);\nexport const useSteps = registerClientReference(\n    function() { throw new Error(\"Attempted to call useSteps() from the server but useSteps is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/hooks/dist/index.mjs <module evaluation>\",\n    \"useSteps\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;;;;;;;;;;;AACvE;;AACO,MAAM,kBAAkB,IAAA,wQAAuB,EAClD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,4EACA;AAEG,MAAM,kBAAkB,IAAA,wQAAuB,EAClD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,4EACA;AAEG,MAAM,aAAa,IAAA,wQAAuB,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,4EACA;AAEG,MAAM,YAAY,IAAA,wQAAuB,EAC5C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,4EACA;AAEG,MAAM,oBAAoB,IAAA,wQAAuB,EACpD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,4EACA;AAEG,MAAM,WAAW,IAAA,wQAAuB,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,4EACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1461, "column": 0}, "map": {"version":3,"sources":["file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/hooks/dist/index.mjs/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const useLocalStorage = registerClientReference(\n    function() { throw new Error(\"Attempted to call useLocalStorage() from the server but useLocalStorage is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/hooks/dist/index.mjs\",\n    \"useLocalStorage\",\n);\nexport const useOutsideClick = registerClientReference(\n    function() { throw new Error(\"Attempted to call useOutsideClick() from the server but useOutsideClick is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/hooks/dist/index.mjs\",\n    \"useOutsideClick\",\n);\nexport const usePromise = registerClientReference(\n    function() { throw new Error(\"Attempted to call usePromise() from the server but usePromise is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/hooks/dist/index.mjs\",\n    \"usePromise\",\n);\nexport const useScript = registerClientReference(\n    function() { throw new Error(\"Attempted to call useScript() from the server but useScript is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/hooks/dist/index.mjs\",\n    \"useScript\",\n);\nexport const useScrollPosition = registerClientReference(\n    function() { throw new Error(\"Attempted to call useScrollPosition() from the server but useScrollPosition is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/hooks/dist/index.mjs\",\n    \"useScrollPosition\",\n);\nexport const useSteps = registerClientReference(\n    function() { throw new Error(\"Attempted to call useSteps() from the server but useSteps is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/hooks/dist/index.mjs\",\n    \"useSteps\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;;;;;;;;;;;AACvE;;AACO,MAAM,kBAAkB,IAAA,wQAAuB,EAClD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,wDACA;AAEG,MAAM,kBAAkB,IAAA,wQAAuB,EAClD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,wDACA;AAEG,MAAM,aAAa,IAAA,wQAAuB,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,wDACA;AAEG,MAAM,YAAY,IAAA,wQAAuB,EAC5C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,wDACA;AAEG,MAAM,oBAAoB,IAAA,wQAAuB,EACpD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,wDACA;AAEG,MAAM,WAAW,IAAA,wQAAuB,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,wDACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1500, "column": 0}, "map": {"version":3,"sources":["file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/hooks/src/use-promise.tsx","file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/hooks/src/use-local-storage.ts","file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/hooks/src/use-steps.ts","file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/hooks/src/use-script.ts","file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/hooks/src/use-scroll-position.ts","file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/hooks/src/use-outside-click.ts"],"sourcesContent":["import * as React from 'react'\n\nexport interface UsePromise {\n  error?: Error | null\n  data?: any\n  isLoading: boolean\n  isResolved: boolean\n  isRejected: boolean\n}\n\ntype CallbackFn = (...args: any[]) => Promise<any>\n\n/**\n * @deprecated\n */\nexport function usePromise<C extends CallbackFn>(fn: C): [UsePromise, C] {\n  const [isLoading, setLoading] = React.useState(false)\n  const [isResolved, setResolved] = React.useState(false)\n  const [isRejected, setRejected] = React.useState(false)\n  const [error, setError] = React.useState(null)\n  const [data, setData] = React.useState(null)\n\n  const call: any = (...params: any) => {\n    setLoading(true)\n\n    return fn(...params)\n      .then((data) => {\n        setData(data)\n        setResolved(true)\n        setLoading(false)\n\n        return data\n      })\n      .catch((err) => {\n        setError(err)\n        setRejected(true)\n        setLoading(false)\n\n        throw err\n      })\n  }\n\n  return [{ error, data, isLoading, isResolved, isRejected }, call]\n}\n","import React, { useState, useEffect } from 'react'\nconst isBrowser = typeof window !== 'undefined'\n\nfunction setItem(key: string, value: string) {\n  if (isBrowser && 'localStorage' in window) {\n    return value === undefined\n      ? localStorage.removeItem(key)\n      : localStorage.setItem(key, value)\n  }\n}\n\nfunction getItem(key: string) {\n  if (isBrowser && 'localStorage' in window) {\n    return localStorage.getItem(key)\n  }\n}\n\nconst serializeJSON = <T>(value: T) => {\n  try {\n    return JSON.stringify(value)\n  } catch (e) {\n    throw new Error('useLocalStorage: failed to serialize the value to JSON')\n  }\n}\n\nconst deserializeJSON = (value?: string) => {\n  try {\n    return value && JSON.parse(value)\n  } catch (e) {\n    return value\n  }\n}\n\nexport interface UseLocalStorageOptions<T> {\n  serialize?<T>(value: T): string\n  deserialize?(value?: string): T\n}\n\ntype StorageEventDetail = {\n  key: string\n  newValue?: string\n}\nconst triggerCustomEvent = (detail: StorageEventDetail) => {\n  const event = new CustomEvent('use-local-storage', {\n    detail,\n  })\n  window.dispatchEvent(event)\n}\n\n/**\n * Works like useState but stores the value as JSON in localStorage.\n * Updates work across multiple tabs using StorageEvent.\n *\n * Setting undefined will remote the localStorage item.\n */\nexport const useLocalStorage = <T = string>(\n  key: string,\n  defaultValue: T,\n  options: UseLocalStorageOptions<T> = {}\n) => {\n  const { serialize = serializeJSON, deserialize = deserializeJSON } = options\n\n  const initRef = React.useRef(false)\n\n  const [value, setValue] = useState<T>(() => {\n    return isBrowser ? deserialize(getItem(key) ?? undefined) : defaultValue\n  })\n\n  useEffect(() => {\n    const handler = (event: StorageEvent | CustomEvent<StorageEventDetail>) => {\n      const isCustom = event instanceof CustomEvent\n      const eventKey = isCustom ? event.detail.key : event.key\n      const newValue = isCustom ? event.detail.newValue : event.newValue\n\n      if (\n        (isCustom || event.storageArea === window.localStorage) &&\n        eventKey === key\n      ) {\n        setValue(deserialize(newValue ?? undefined))\n      }\n    }\n\n    if (isBrowser) {\n      window.addEventListener('storage', handler)\n      window.addEventListener<any>('use-local-storage', handler)\n    }\n    return () => {\n      if (isBrowser) {\n        window.removeEventListener('storage', handler)\n        window.removeEventListener<any>('use-local-storage', handler)\n      }\n    }\n  }, [])\n\n  useEffect(() => {\n    if (!initRef.current) {\n      initRef.current = true\n      return\n    }\n    const serializedValue = serialize(value)\n    if (getItem(key) !== serializedValue) {\n      setItem(key, serializedValue)\n      triggerCustomEvent({ key, newValue: serializedValue })\n    }\n  }, [value])\n\n  return [value === undefined ? defaultValue : value, setValue] as const\n}\n","import { useState } from 'react'\n\nconst FIRST_STEP = 0\n\ntype Step = {\n  id: string\n}\n\ntype UseStepsProps<S> = {\n  steps: S[]\n  initialStep?: number\n}\n\nexport const useSteps = <S extends { id: string } = Step>({\n  steps,\n  initialStep = FIRST_STEP,\n}: UseStepsProps<S>) => {\n  const [completed, setCompleted] = useState<string[]>([])\n  const [index, setIndex] = useState<number>(initialStep)\n  const step = steps[index]\n  const inRange = (index: number | string) => {\n    if (typeof index === 'number') {\n      if (index < FIRST_STEP) return FIRST_STEP\n      if (index >= steps.length) return steps.length - 1\n      return index\n    }\n\n    return steps.findIndex((step) => step.id === index) || FIRST_STEP\n  }\n\n  const go = (nextStep: number | string) => setIndex(inRange(nextStep))\n  const next = () => go(index + 1)\n  const prev = () => go(index - 1)\n\n  const setComplete = (completeStep: number | string = index) => {\n    const completeStepIndex = inRange(completeStep)\n    const id = steps[completeStepIndex].id\n\n    setCompleted([...new Set([...completed, id])])\n  }\n\n  const setUncomplete = (uncompleteStep: number | string = index) => {\n    const uncompleteStepIndex = inRange(uncompleteStep)\n    const stepId = steps[uncompleteStepIndex].id\n\n    setCompleted(completed.filter((id) => id !== stepId))\n  }\n\n  const reset = (resetStep = initialStep) => {\n    setIndex(resetStep)\n    setCompleted([])\n  }\n\n  return {\n    setComplete,\n    completed,\n    index,\n    isLast: index === steps.length - 1,\n    navigation: { next, prev, go },\n    step,\n    setUncomplete,\n    reset,\n  }\n}\n","import { useEffect, useState } from 'react'\n\nexport type Status = 'idle' | 'loading' | 'ready' | 'error'\nexport type ScriptElt = HTMLScriptElement | null\n\nexport const useScript = (src: string): Status => {\n  const [status, setStatus] = useState<Status>(src ? 'loading' : 'idle')\n\n  useEffect(\n    () => {\n      if (!src) {\n        setStatus('idle')\n        return\n      }\n\n      // Fetch existing script element by src\n      // It may have been added by another instance of this hook\n      let script: ScriptElt = document.querySelector(`script[src=\"${src}\"]`)\n\n      if (!script) {\n        // Create script\n        script = document.createElement('script')\n        script.src = src\n        script.async = true\n        script.setAttribute('data-status', 'loading')\n        // Add script to document body\n        document.body.appendChild(script)\n\n        // Store status in attribute on script\n        // This can be read by other instances of this hook\n        const setAttributeFromEvent = (event: Event) => {\n          script?.setAttribute(\n            'data-status',\n            event.type === 'load' ? 'ready' : 'error'\n          )\n        }\n\n        script.addEventListener('load', setAttributeFromEvent)\n        script.addEventListener('error', setAttributeFromEvent)\n      } else {\n        // Grab existing script status from attribute and set to state.\n        setStatus(script.getAttribute('data-status') as Status)\n      }\n\n      // Script event handler to update status in state\n      // Note: Even if the script already exists we still need to add\n      // event handlers to update the state for *this* hook instance.\n      const setStateFromEvent = (event: Event) => {\n        setStatus(event.type === 'load' ? 'ready' : 'error')\n      }\n\n      // Add event listeners\n      script.addEventListener('load', setStateFromEvent)\n      script.addEventListener('error', setStateFromEvent)\n\n      // Remove event listeners on cleanup\n      return () => {\n        if (script) {\n          script.removeEventListener('load', setStateFromEvent)\n          script.removeEventListener('error', setStateFromEvent)\n        }\n      }\n    },\n    [src] // Only re-run effect if script src changes\n  )\n\n  return status\n}\n","import { useRef, useEffect } from 'react'\n\nconst isBrowser = typeof window !== 'undefined'\n\nexport type ScrollValue = { x: any; y: any }\n\nfunction getScrollPosition(\n  element: HTMLElement | undefined | null\n): ScrollValue {\n  if (!isBrowser) return { x: 0, y: 0 }\n  if (!element) {\n    return { x: window.scrollX, y: window.scrollY }\n  }\n\n  return { x: element.scrollLeft, y: element.scrollTop }\n}\n\nexport interface UseScrollPositionOptions {\n  /**\n   * The wait time in milliseconds before triggering the callback.\n   * @default 30\n   */\n  delay?: number\n  /**\n   * Whether the scroll position should be tracked or not.\n   * @default true\n   */\n  isEnabled?: boolean\n  /**\n   * The element to track the scroll position for.\n   */\n  elementRef?: React.RefObject<HTMLElement> | null\n  /**\n   * The callback function to be called when the scroll position changes.\n   */\n  callback?: ({\n    prevPos,\n    currPos,\n  }: {\n    prevPos: ScrollValue\n    currPos: ScrollValue\n  }) => void\n}\n\nexport const useScrollPosition = (\n  props: UseScrollPositionOptions\n): ScrollValue => {\n  const { elementRef, delay = 30, callback, isEnabled } = props\n\n  const position = useRef<ScrollValue>(\n    isEnabled ? getScrollPosition(elementRef?.current) : { x: 0, y: 0 }\n  )\n\n  let throttleTimeout: ReturnType<typeof setTimeout> | null = null\n\n  const handler = () => {\n    const currPos = getScrollPosition(elementRef?.current)\n\n    if (typeof callback === 'function') {\n      callback({ prevPos: position.current, currPos })\n    }\n\n    position.current = currPos\n    throttleTimeout = null\n  }\n\n  useEffect(() => {\n    if (!isEnabled) return\n\n    const handleScroll = () => {\n      if (delay) {\n        if (throttleTimeout === null) {\n          throttleTimeout = setTimeout(handler, delay)\n        }\n      } else {\n        handler()\n      }\n    }\n\n    const target = elementRef?.current || window\n\n    target.addEventListener('scroll', handleScroll)\n\n    return () => target.removeEventListener('scroll', handleScroll)\n  }, [elementRef?.current, delay, isEnabled])\n\n  return position.current\n}\n","import { useCallbackRef } from '@chakra-ui/react'\nimport { useEffect, useRef } from 'react'\n\nexport interface UseOutsideClickProps {\n  /**\n   * Whether the hook is enabled\n   */\n  enabled?: boolean\n  /**\n   * The reference to a DOM element.\n   */\n  ref: React.RefObject<HTMLElement>\n  /**\n   * Function invoked when a click is triggered outside the referenced element.\n   */\n  handler?: (e: Event) => void\n}\n\n/**\n * Example, used in components like Dialogs and Popovers, so they can close\n * when a user clicks outside them.\n */\nexport function useOutsideClick(props: UseOutsideClickProps) {\n  const { ref, handler, enabled = true } = props\n  const savedHandler = useCallbackRef(handler)\n\n  const stateRef = useRef({\n    isPointerDown: false,\n    ignoreEmulatedMouseEvents: false,\n  })\n\n  const state = stateRef.current\n\n  useEffect(() => {\n    if (!enabled) return\n    const onPointerDown: any = (e: PointerEvent) => {\n      if (isValidEvent(e, ref)) {\n        state.isPointerDown = true\n      }\n    }\n\n    const onMouseUp: any = (event: MouseEvent) => {\n      if (state.ignoreEmulatedMouseEvents) {\n        state.ignoreEmulatedMouseEvents = false\n        return\n      }\n\n      if (state.isPointerDown && handler && isValidEvent(event, ref)) {\n        state.isPointerDown = false\n        savedHandler(event)\n      }\n    }\n\n    const onTouchEnd = (event: TouchEvent) => {\n      state.ignoreEmulatedMouseEvents = true\n      if (handler && state.isPointerDown && isValidEvent(event, ref)) {\n        state.isPointerDown = false\n        savedHandler(event)\n      }\n    }\n\n    const doc = getOwnerDocument(ref.current)\n    doc.addEventListener('mousedown', onPointerDown, true)\n    doc.addEventListener('mouseup', onMouseUp, true)\n    doc.addEventListener('touchstart', onPointerDown, true)\n    doc.addEventListener('touchend', onTouchEnd, true)\n\n    return () => {\n      doc.removeEventListener('mousedown', onPointerDown, true)\n      doc.removeEventListener('mouseup', onMouseUp, true)\n      doc.removeEventListener('touchstart', onPointerDown, true)\n      doc.removeEventListener('touchend', onTouchEnd, true)\n    }\n  }, [handler, ref, savedHandler, state, enabled])\n}\n\nfunction isValidEvent(event: Event, ref: React.RefObject<HTMLElement>) {\n  const target = event.target as HTMLElement\n\n  if (target) {\n    const doc = getOwnerDocument(target)\n    if (!doc.contains(target)) return false\n  }\n\n  return !ref.current?.contains(target)\n}\n\nfunction getOwnerDocument(node?: Element | null): Document {\n  return node?.ownerDocument ?? document\n}\n"],"names":["data","React","useState","useState","index","step","useEffect","useState","useEffect","isBrowser","useEffect","useRef"],"mappings":"","debugId":null}},
    {"offset": {"line": 1508, "column": 0}, "map": {"version":3,"sources":["file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/theme/dist/index.mjs/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const baseTheme = registerClientReference(\n    function() { throw new Error(\"Attempted to call baseTheme() from the server but baseTheme is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/theme/dist/index.mjs <module evaluation>\",\n    \"baseTheme\",\n);\nexport const theme = registerClientReference(\n    function() { throw new Error(\"Attempted to call theme() from the server but theme is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/theme/dist/index.mjs <module evaluation>\",\n    \"theme\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;;;AACvE;;AACO,MAAM,YAAY,IAAA,wQAAuB,EAC5C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,4EACA;AAEG,MAAM,QAAQ,IAAA,wQAAuB,EACxC;IAAa,MAAM,IAAI,MAAM;AAA0N,GACvP,4EACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1527, "column": 0}, "map": {"version":3,"sources":["file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/theme/dist/index.mjs/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const baseTheme = registerClientReference(\n    function() { throw new Error(\"Attempted to call baseTheme() from the server but baseTheme is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/theme/dist/index.mjs\",\n    \"baseTheme\",\n);\nexport const theme = registerClientReference(\n    function() { throw new Error(\"Attempted to call theme() from the server but theme is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/theme/dist/index.mjs\",\n    \"theme\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;;;AACvE;;AACO,MAAM,YAAY,IAAA,wQAAuB,EAC5C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,wDACA;AAEG,MAAM,QAAQ,IAAA,wQAAuB,EACxC;IAAa,MAAM,IAAI,MAAM;AAA0N,GACvP,wDACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1546, "column": 0}, "map": {"version":3,"sources":["file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/theme/src/saas-ui/theme.ts","file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/theme/src/base/theme.ts","file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/theme/src/base/components/app-shell.ts","file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/theme/src/base/components/banner.ts","file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/theme/src/base/components/command.ts","file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/theme/src/base/components/empty-state.ts","file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/theme/src/base/components/form.ts","file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/theme/src/base/components/form-layout.ts","file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/theme/src/base/components/form-legend.ts","file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/theme/src/base/components/hotkeys.ts","file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/theme/src/base/components/loading-overlay.ts","file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/theme/src/base/components/nav-group.ts","file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/theme/src/base/components/nav-item.ts","file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/theme/src/base/components/persona.ts","file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/theme/src/base/components/property.ts","file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/theme/src/base/components/search-input.ts","file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/theme/src/base/components/sidebar.ts","file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/theme/src/base/components/select.ts","file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/theme/src/base/components/structured-list.ts","file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/theme/src/base/components/timeline.ts","file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/theme/src/base/components/icon-badge.ts","file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/theme/src/base/components/navbar.ts","file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/theme/src/base/components/index.ts","file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/theme/src/saas-ui/styles.ts","file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/theme/src/saas-ui/foundations/colors.ts","file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/theme/src/saas-ui/foundations/typography.ts","file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/theme/src/saas-ui/foundations/sizes.ts","file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/theme/src/saas-ui/foundations/shadows.ts","file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/theme/src/saas-ui/foundations/semantic-tokens.ts","file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/theme/src/saas-ui/foundations/index.ts"],"sourcesContent":["import { extendTheme } from '@chakra-ui/react'\n\nimport { baseTheme } from '../base/theme'\n\nimport { styles } from './styles'\nimport { foundations } from './foundations'\nimport { components } from './components'\n\nexport const theme = extendTheme(\n  {\n    ...foundations,\n    styles,\n    components,\n  },\n  baseTheme\n)\n","import { theme, extendTheme, ChakraTheme } from '@chakra-ui/react'\n\nimport { components } from './components'\n\nexport const baseTheme = extendTheme({\n  colors: {\n    primary: theme.colors.blue,\n  },\n  semanticTokens: {\n    colors: {\n      'presence.online': 'green.500',\n      'presence.offline': 'gray.400',\n      'presence.busy': 'orange.500',\n      'presence.dnd': 'red.500',\n      'presence.away': 'gray.400',\n    },\n  },\n  components,\n}) as ChakraTheme\n","import { createMultiStyleConfigHelpers } from '@chakra-ui/styled-system'\nimport { appShellAnatomy } from '../../anatomy'\n\nconst { definePartsStyle, defineMultiStyleConfig } =\n  createMultiStyleConfigHelpers(appShellAnatomy.keys)\n\nconst baseStyle = definePartsStyle({\n  container: {},\n  inner: {},\n  main: {},\n})\n\nexport const appShellTheme = defineMultiStyleConfig({\n  defaultProps: {\n    variant: 'fullscreen',\n  },\n  variants: {\n    static: {},\n    fullscreen: {\n      container: {\n        position: 'absolute',\n        inset: 0,\n      },\n    },\n  },\n  baseStyle,\n})\n","import { transparentize } from '@chakra-ui/theme-tools'\nimport { createMultiStyleConfigHelpers } from '@chakra-ui/styled-system'\nimport { bannerAnatomy } from '../../anatomy'\n\nconst { definePartsStyle, defineMultiStyleConfig } =\n  createMultiStyleConfigHelpers(bannerAnatomy.keys)\n\nconst baseStyle = definePartsStyle({\n  container: {\n    px: 4,\n    py: 3,\n  },\n  content: {\n    display: 'flex',\n    flex: 1,\n    flexDirection: ['column', null, 'row'],\n  },\n  title: {\n    fontWeight: 'bold',\n    lineHeight: 6,\n    marginEnd: 2,\n  },\n  description: {\n    lineHeight: 6,\n    marginEnd: 2,\n  },\n  actions: {\n    marginEnd: 2,\n  },\n  icon: {\n    flexShrink: 0,\n    marginEnd: 3,\n    w: 5,\n    h: 6,\n  },\n})\n\nconst variantSubtle = definePartsStyle((props) => {\n  const { theme, colorScheme: c } = props\n  return {\n    container: {\n      bg: `${c}.100`,\n      _dark: { bg: transparentize(`${c}.200`, 0.16)(theme) },\n    },\n    icon: { color: `${c}.500`, _dark: { color: `${c}.200` } },\n  }\n})\n\nconst variantSolid = definePartsStyle((props) => {\n  const { colorScheme: c } = props\n  return {\n    container: {\n      bg: `${c}.500`,\n      color: 'white',\n    },\n  }\n})\n\nexport const bannerTheme = defineMultiStyleConfig({\n  baseStyle,\n  variants: {\n    subtle: variantSubtle,\n    solid: variantSolid,\n  },\n  defaultProps: {\n    variant: 'subtle',\n    colorScheme: 'blue',\n  },\n})\n","export const commandTheme = {\n  baseStyle: {\n    fontSize: 'xs',\n    '[role=tooltip] > &': {\n      ms: 1,\n      _before: {\n        content: '\"•\"',\n        me: 1,\n        fontSize: 'xs',\n      },\n    },\n  },\n}\n","import { createMultiStyleConfigHelpers } from '@chakra-ui/styled-system'\n\nimport { emptyStateAnatomy } from '../../anatomy'\n\nconst { definePartsStyle, defineMultiStyleConfig } =\n  createMultiStyleConfigHelpers(emptyStateAnatomy.keys)\n\nconst baseStyle = definePartsStyle((props) => {\n  const { colorScheme: c } = props\n  return {\n    icon: {\n      boxSize: [10, null, 12],\n      color: `${c}.500`,\n      _dark: {\n        color: `${c}.200`,\n      },\n    },\n    title: {\n      mt: 8,\n      fontWeight: 'bold',\n      fontSize: 'xl',\n    },\n    actions: {\n      mt: 8,\n    },\n  }\n})\n\nconst variantCentered = definePartsStyle((props) => {\n  return {\n    body: {\n      display: 'flex',\n      flexDirection: 'column',\n      textAlign: 'center',\n      alignItems: 'center',\n    },\n  }\n})\n\nexport const emptyStateTheme = defineMultiStyleConfig({\n  baseStyle,\n  variants: {\n    centered: variantCentered,\n  },\n})\n","import { createMultiStyleConfigHelpers } from '@chakra-ui/styled-system'\nimport { formAnatomy } from '@chakra-ui/anatomy'\n\nconst { definePartsStyle, defineMultiStyleConfig } =\n  createMultiStyleConfigHelpers(formAnatomy.keys)\n\nconst horizontalVariant = definePartsStyle({\n  container: {\n    display: 'grid',\n    gridTemplateColumns: '1fr 2fr',\n    alignItems: 'flex-start',\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n  },\n})\n\nexport const formTheme = defineMultiStyleConfig({\n  variants: {\n    horizontal: horizontalVariant,\n  },\n})\n","import { defineStyleConfig } from '@chakra-ui/styled-system'\n\nexport const formLayoutTheme = defineStyleConfig({\n  defaultProps: {\n    /* @ts-expect-error */\n    spacing: 4, // Chakra UI officially doesn't support custom default props yet, but this works.\n  },\n})\n","import { defineStyleConfig } from '@chakra-ui/styled-system'\n\nexport const formLegendTheme = defineStyleConfig({\n  baseStyle: {\n    fontWeight: 'semibold',\n    mb: 4,\n  },\n})\n","import { createMultiStyleConfigHelpers } from '@chakra-ui/styled-system'\nimport { hotkeysAnantomy } from '../../anatomy'\nconst { definePartsStyle, defineMultiStyleConfig } =\n  createMultiStyleConfigHelpers(hotkeysAnantomy.keys)\n\nexport const hotkeysTheme = defineMultiStyleConfig({\n  baseStyle: {\n    container: {\n      fontSize: 'md',\n    },\n    group: {\n      my: 2,\n      py: 2,\n    },\n    groupTitle: { py: 2, fontWeight: 'semibold', fontSize: 'sm' },\n    item: {\n      display: 'flex',\n      alignItems: 'center',\n      textAlign: 'start',\n      flex: '0 0 auto',\n      py: 2,\n    },\n    then: {\n      mr: 1,\n      fontSize: 'sm',\n      color: 'muted',\n    },\n  },\n})\n","import { createMultiStyleConfigHelpers } from '@chakra-ui/styled-system'\nimport { loadingOverlayAnatomy } from '../../anatomy'\n\nconst { defineMultiStyleConfig, definePartsStyle } =\n  createMultiStyleConfigHelpers(loadingOverlayAnatomy.keys)\n\nconst baseStyle = definePartsStyle({\n  overlay: {\n    p: 4,\n  },\n})\n\nconst variantFill = definePartsStyle(() => {\n  return {\n    overlay: {\n      flex: 1,\n      height: '100%',\n    },\n  }\n})\n\nconst variantFullscreen = definePartsStyle(() => {\n  return {\n    overlay: {\n      position: 'fixed',\n      inset: 0,\n      zIndex: 'modal',\n      bg: 'white',\n      _dark: {\n        bg: 'gray.800',\n      },\n    },\n  }\n})\n\nconst variantOverlay = definePartsStyle(() => {\n  return {\n    overlay: {\n      position: 'absolute',\n      inset: 0,\n      bg: 'whiteAlpha.300',\n      _dark: {\n        bg: 'blackAlpha.300',\n      },\n    },\n  }\n})\n\nexport const loadingOverlayTheme = defineMultiStyleConfig({\n  defaultProps: {\n    variant: 'fill',\n  },\n  baseStyle,\n  variants: {\n    fill: variantFill,\n    fullscreen: variantFullscreen,\n    overlay: variantOverlay,\n  },\n})\n","import { createMultiStyleConfigHelpers } from '@chakra-ui/styled-system'\nimport { navGroupAnatomy } from '../../anatomy'\nconst { definePartsStyle, defineMultiStyleConfig } =\n  createMultiStyleConfigHelpers(navGroupAnatomy.keys)\n\nconst baseStyle = definePartsStyle((props) => {\n  return {\n    container: {\n      '&:not(:last-of-type)': {\n        mb: 4,\n      },\n    },\n    title: {\n      display: 'flex',\n      alignItems: 'center',\n      px: 3,\n      my: 1,\n      height: 6,\n      fontSize: 'sm',\n      fontWeight: 'medium',\n      color: 'muted',\n      transitionProperty: 'common',\n      transitionDuration: 'normal',\n      '&.sui-collapse-toggle .chakra-icon': {\n        opacity: 0,\n      },\n      '&.sui-collapse-toggle': {\n        cursor: 'pointer',\n        borderRadius: 'md',\n        _hover: {\n          bg: 'blackAlpha.100',\n          '& .chakra-icon': {\n            opacity: 1,\n          },\n          _dark: {\n            bg: 'whiteAlpha.200',\n          },\n        },\n      },\n      '[data-compact] &': {\n        opacity: 0,\n      },\n    },\n    content: {},\n  }\n})\n\nexport const navGroupTheme = defineMultiStyleConfig({\n  baseStyle,\n})\n","import { transparentize } from '@chakra-ui/theme-tools'\nimport { theme as baseTheme } from '@chakra-ui/react'\n\nimport { createMultiStyleConfigHelpers } from '@chakra-ui/styled-system'\nimport { navItemAnatomy } from '../../anatomy'\nconst { definePartsStyle, defineMultiStyleConfig } =\n  createMultiStyleConfigHelpers(navItemAnatomy.keys)\n\nconst baseStyle = definePartsStyle((props) => {\n  return {\n    item: {\n      my: '2px',\n      color: 'gray.900',\n      minW: 1,\n      _dark: {\n        color: 'whiteAlpha.900',\n      },\n    },\n    link: {\n      display: 'flex',\n      rounded: 'md',\n      justifyContent: 'flex-start',\n      alignItems: 'center',\n      textDecoration: 'none',\n      transitionProperty: 'common',\n      transitionDuration: 'normal',\n      minW: 1,\n      _hover: {\n        textDecoration: 'none',\n      },\n      _focusVisible: {\n        outline: 'none',\n        boxShadow: 'outline',\n      },\n    },\n    inner: {\n      display: 'flex',\n      flex: 1,\n      w: '100%',\n      alignItems: 'center',\n      minW: 1,\n    },\n    label: {\n      whiteSpace: 'nowrap',\n      textOverflow: 'ellipsis',\n      overflow: 'hidden',\n    },\n    icon: {\n      display: 'flex',\n      transitionProperty: 'common',\n      transitionDuration: 'normal',\n      alignItems: 'center',\n      justifyContent: 'center',\n      width: '4',\n      ml: '-0.25rem',\n      color: 'currentColor',\n    },\n  }\n})\n\n// &[aria-current=page] styles are used for ReactRouter and Remix NavLink components\n\nconst variantNeutral = definePartsStyle((props) => {\n  const _active = {\n    bg: 'blackAlpha.200',\n    _dark: {\n      bg: `whiteAlpha.200`,\n    },\n  }\n  return {\n    link: {\n      _hover: {\n        bg: 'blackAlpha.100',\n        _dark: {\n          bg: `whiteAlpha.100`,\n        },\n      },\n      _active,\n      ['&[aria-current=page]']: _active,\n    },\n    icon: {\n      opacity: 0.8,\n      '[data-active] &': {\n        opacity: 1,\n      },\n    },\n  }\n})\n\nconst variantSubtle = definePartsStyle((props) => {\n  const { colorScheme: c, theme } = props\n\n  const _active = {\n    bg: transparentize(`${c}.500`, 0.3)(theme),\n    fontWeight: 'semibold',\n    color: `${c}.600`,\n    _dark: {\n      bg: transparentize(`${c}.500`, 0.3)(theme),\n      color: `${c}.100`,\n    },\n  }\n\n  return {\n    link: {\n      _hover: {\n        bg: `blackAlpha.100`,\n        _dark: {\n          bg: `whiteAlpha.200`,\n        },\n      },\n      _active,\n      ['&[aria-current=page]']: _active,\n    },\n  }\n})\n\nconst variantSolid = definePartsStyle((props) => {\n  const { colorScheme: c } = props\n  const _active = {\n    bg: `${c}.500`,\n  }\n  return {\n    link: {\n      _hover: {\n        bg: 'blackAlpha.100',\n        _dark: {\n          bg: `whiteAlpha.200`,\n        },\n      },\n      _active,\n      ['&[aria-current=page]']: _active,\n      color: 'white',\n    },\n    icon: {\n      color: 'white',\n    },\n    label: {},\n  }\n})\n\nconst variantLeftAccent = definePartsStyle((props) => {\n  const { colorScheme: c } = props\n  const _active = {\n    _before: {\n      content: '\"\"',\n      display: 'block',\n      position: 'absolute',\n      top: 0,\n      bottom: 0,\n      left: -3,\n      width: '3px',\n      bg: `${c}.500`,\n    },\n  }\n  return {\n    item: {\n      position: 'relative',\n    },\n    link: {\n      _hover: {\n        color: 'inherit',\n        bg: 'blackAlpha.100',\n        _dark: {\n          bg: `whiteAlpha.200`,\n        },\n      },\n      _active,\n      ['&[aria-current=page]']: _active,\n    },\n    icon: {\n      '[data-active] &': {\n        color: 'currentColor',\n      },\n    },\n    label: {},\n  }\n})\n\nexport const navItemTheme = defineMultiStyleConfig({\n  defaultProps: {\n    size: 'sm',\n    colorScheme: 'primary',\n    variant: 'neutral',\n  },\n  baseStyle,\n  sizes: {\n    xs: {\n      link: baseTheme.components.Button.sizes?.xs,\n      icon: {\n        me: 1,\n        fontSize: 'xs',\n      },\n    },\n    sm: {\n      link: baseTheme.components.Button.sizes?.sm,\n      icon: {\n        me: 2,\n        fontSize: 'sm',\n      },\n    },\n    md: {\n      link: baseTheme.components.Button.sizes?.md,\n      icon: {\n        me: 2,\n        fontSize: 'md',\n      },\n    },\n    lg: {\n      link: baseTheme.components.Button.sizes?.lg,\n      icon: {\n        me: 3,\n        fontSize: 'lg',\n      },\n    },\n  },\n  variants: {\n    neutral: variantNeutral,\n    subtle: variantSubtle,\n    solid: variantSolid,\n    'left-accent': variantLeftAccent,\n  },\n})\n","import {\n  createMultiStyleConfigHelpers,\n  defineStyle,\n} from '@chakra-ui/styled-system'\nimport { personaAnatomy } from '../../anatomy'\nconst { definePartsStyle, defineMultiStyleConfig } =\n  createMultiStyleConfigHelpers(personaAnatomy.keys)\n\nconst baseStyleLabel = defineStyle((props) => {\n  return {\n    color: 'gray.500',\n    overflow: 'hidden',\n    whiteSpace: 'nowrap',\n    textOverflow: 'ellipsis',\n    minW: 0,\n    _dark: {\n      color: 'whiteAlpha.600',\n    },\n  }\n})\n\nconst baseStyle = definePartsStyle((props) => {\n  return {\n    details: {\n      minW: 0,\n    },\n    secondaryLabel: baseStyleLabel(props),\n    tertiaryLabel: baseStyleLabel(props),\n  }\n})\n\nconst sizes = {\n  '2xs': definePartsStyle({\n    details: { ms: 2 },\n    label: {\n      fontSize: 'xs',\n    },\n    secondaryLabel: { display: 'none' },\n    tertiaryLabel: { display: 'none' },\n  }),\n  xs: definePartsStyle({\n    details: { ms: 2 },\n    label: {\n      fontSize: 'md',\n    },\n    secondaryLabel: { display: 'none' },\n    tertiaryLabel: { display: 'none' },\n  }),\n  sm: definePartsStyle({\n    details: { ms: 2 },\n    label: { fontSize: 'md' },\n    secondaryLabel: { fontSize: 'sm' },\n    tertiaryLabel: { display: 'none' },\n  }),\n  md: definePartsStyle({\n    details: { ms: 2 },\n    label: {\n      fontSize: 'md',\n    },\n    secondaryLabel: {\n      fontSize: 'sm',\n    },\n    tertiaryLabel: { display: 'none' },\n  }),\n  lg: definePartsStyle({\n    details: { ms: 3 },\n    label: {\n      fontSize: 'md',\n    },\n    secondaryLabel: {\n      fontSize: 'sm',\n    },\n    tertiaryLabel: {\n      fontSize: 'sm',\n    },\n  }),\n  xl: definePartsStyle({\n    details: { ms: 3 },\n    label: {\n      fontSize: 'xl',\n    },\n    secondaryLabel: {\n      fontSize: 'md',\n    },\n    tertiaryLabel: { fontSize: 'md' },\n  }),\n  '2xl': definePartsStyle({\n    details: { ms: 4 },\n    label: {\n      fontSize: '2xl',\n    },\n    secondaryLabel: {\n      fontSize: 'lg',\n    },\n    tertiaryLabel: { fontSize: 'lg' },\n  }),\n}\n\nexport const personaTheme = defineMultiStyleConfig({\n  defaultProps: {\n    size: 'md',\n  },\n  baseStyle,\n  sizes,\n})\n","import { createMultiStyleConfigHelpers } from '@chakra-ui/styled-system'\nimport { propertyAnatomy } from '../../anatomy'\nconst { definePartsStyle, defineMultiStyleConfig } =\n  createMultiStyleConfigHelpers(propertyAnatomy.keys)\n\nexport const propertyTheme = defineMultiStyleConfig({\n  baseStyle: {\n    label: {\n      display: 'flex',\n      flexDirection: 'row',\n      minWidth: '100px',\n      width: '30%',\n      marginEnd: 2,\n      py: 2,\n      color: 'gray.500',\n      _dark: {\n        color: 'gray.400',\n      },\n    },\n  },\n})\n","import { createMultiStyleConfigHelpers } from '@chakra-ui/styled-system'\nimport { searchInputAnatomy } from '../../anatomy'\nconst { defineMultiStyleConfig } = createMultiStyleConfigHelpers(\n  searchInputAnatomy.keys\n)\n\nexport const searchInputTheme = defineMultiStyleConfig({\n  baseStyle: {\n    input: {\n      pr: 8,\n    },\n  },\n  sizes: {\n    sm: {\n      reset: {\n        fontSize: '0.7em',\n      },\n    },\n    lg: {\n      input: {\n        pr: 10,\n      },\n    },\n  },\n})\n","import { createMultiStyleConfigHelpers } from '@chakra-ui/styled-system'\nimport { sidebarAnatomy } from '../../anatomy'\nconst { definePartsStyle, defineMultiStyleConfig } =\n  createMultiStyleConfigHelpers(sidebarAnatomy.keys)\n\nconst baseStyle = definePartsStyle((props) => {\n  const { colorScheme: c } = props\n\n  return {\n    container: {\n      bg: c ? `${c}.500` : 'white',\n      display: 'flex',\n      flexDirection: 'column',\n      borderRightWidth: '1px',\n      _dark: {\n        bg: c ? `${c}.500` : 'gray.800',\n      },\n    },\n    overlay: {\n      bg: 'blackAlpha.200',\n    },\n  }\n})\n\nconst variantDefault = definePartsStyle((props) => {\n  return {\n    container: {\n      width: '280px',\n      maxWidth: ['100vw', '320px'],\n      minWidth: '220px',\n      py: 3,\n      '&[data-collapsible]': {\n        pt: 14,\n      },\n    },\n    section: {\n      px: 3,\n    },\n    toggleWrapper: {\n      h: 8,\n      mb: 4,\n      display: 'none',\n      '[data-collapsible] &': {\n        display: 'block',\n      },\n    },\n  }\n})\n\nconst variantCondensed = definePartsStyle((props) => {\n  return {\n    container: {\n      width: '14',\n      py: 3,\n    },\n    section: {\n      px: 3,\n    },\n    toggleWrapper: {\n      display: 'none',\n    },\n  }\n})\n\nexport const sidebarTheme = defineMultiStyleConfig({\n  defaultProps: {\n    variant: 'default',\n  },\n  baseStyle,\n  variants: {\n    default: variantDefault,\n    compact: variantCondensed,\n  },\n})\n","import { createMultiStyleConfigHelpers } from '@chakra-ui/styled-system'\n\nimport { Input } from '@chakra-ui/theme/components'\nimport { selectAnatomy } from '../../anatomy'\n\nconst { defineMultiStyleConfig } = createMultiStyleConfigHelpers(\n  selectAnatomy.keys\n)\n\nexport const selectTheme = defineMultiStyleConfig({\n  defaultProps: Input.defaultProps,\n  baseStyle: Input.baseStyle,\n  sizes: Input.sizes,\n  variants: Input.variants,\n})\n","import { createMultiStyleConfigHelpers } from '@chakra-ui/styled-system'\nimport { structuredListAnatomy } from '../../anatomy'\nconst { definePartsStyle, defineMultiStyleConfig } =\n  createMultiStyleConfigHelpers(structuredListAnatomy.keys)\n\nconst baseStyle = definePartsStyle((props) => {\n  return {\n    item: {\n      display: 'flex',\n      flexDirection: 'row',\n      alignItems: 'center',\n      justifyContent: 'space-between',\n      fontSize: 'md',\n    },\n    button: {\n      display: 'flex',\n      flexDirection: 'row',\n      alignItems: 'center',\n      justifyContent: 'space-between',\n      flex: 1,\n      cursor: 'pointer',\n      userSelect: 'none',\n      transitionProperty: 'common',\n      transitionDuration: 'normal',\n      borderRadius: 'inherit',\n      outline: 'none',\n      _hover: {\n        bg: 'blackAlpha.50',\n        _dark: {\n          bg: 'whiteAlpha.50',\n        },\n      },\n      _focusVisible: {\n        boxShadow: 'outline',\n      },\n      _focus: {\n        bg: 'blackAlpha.50',\n        _dark: {\n          bg: 'whiteAlpha.50',\n        },\n      },\n      _active: {\n        bg: 'blackAlpha.100',\n        _dark: {\n          bg: 'whiteAlpha.100',\n        },\n      },\n      _disabled: {\n        cursor: 'inherit',\n        opacity: 0.5,\n        _hover: {\n          bg: 'transparent',\n          _dark: {\n            bg: 'transparent',\n          },\n        },\n        _active: {\n          bg: 'transparent',\n          _dark: {\n            bg: 'transparent',\n          },\n        },\n      },\n    },\n    header: {\n      display: 'flex',\n      flexDirection: 'row',\n      position: 'sticky',\n      fontSize: 'md',\n      fontWeight: 'semibold',\n      color: 'muted',\n    },\n    icon: {\n      display: 'flex',\n      flexShrink: 0,\n    },\n  }\n})\n\nexport const structuredListTheme = defineMultiStyleConfig({\n  defaultProps: {\n    size: 'md',\n  },\n  baseStyle,\n  sizes: {\n    sm: {\n      item: {\n        py: 1,\n        px: 1,\n      },\n      header: {\n        py: 1,\n        px: 1,\n      },\n      button: {\n        py: 1,\n        px: 1,\n      },\n      cell: {\n        px: 1,\n      },\n      icon: {\n        px: 1,\n      },\n    },\n    md: {\n      item: {\n        py: 2,\n        px: 2,\n      },\n      header: {\n        py: 2,\n        px: 2,\n      },\n      button: { py: 2, px: 2 },\n      cell: {\n        px: 2,\n      },\n      icon: {\n        px: 2,\n      },\n    },\n  },\n})\n","import {\n  createMultiStyleConfigHelpers,\n  cssVar,\n  defineCssVars,\n} from '@chakra-ui/styled-system'\n\nimport { timelineAnatomy } from '../../anatomy'\n\nconst { definePartsStyle, defineMultiStyleConfig } =\n  createMultiStyleConfigHelpers(timelineAnatomy.keys)\n\nconst $rowStart = cssVar('timeline-row-start', 'minmax(0,1fr)')\nconst $rowEnd = cssVar('timeline-row-end', 'minmax(0,1fr)')\n\nconst $colStart = cssVar('timeline-col-start', 'minmax(0,1fr)')\nconst $colEnd = cssVar('timeline-col-end', 'minmax(0,1fr)')\n\nconst baseStyle = definePartsStyle((props) => {\n  return {\n    container: {\n      display: 'flex',\n      [$rowStart.variable]: 'minmax(0,1fr)',\n      [$rowEnd.variable]: 'minmax(0,1fr)',\n      [$colStart.variable]: 'auto',\n      [$colEnd.variable]: '2fr',\n      flexDirection: 'column',\n      justifyItems: 'center',\n    },\n    item: {\n      display: 'grid',\n      alignItems: 'center',\n      justifyItems: 'start',\n      gridTemplateRows: `${$rowStart.reference}`,\n      gridTemplateColumns: `${$colStart.reference} ${$colEnd.reference}`,\n      position: 'relative',\n    },\n    separator: {\n      mx: 1,\n      minW: '24px',\n      flexShrink: 0,\n      gridColumnStart: 1,\n      gap: 2,\n      height: '100%',\n      _before: {\n        content: '\"\"',\n        display: 'block',\n        flex: 1,\n        minH: '0.5em',\n      },\n      _after: {\n        content: '\"\"',\n        display: 'block',\n        flex: 1,\n        minH: '0.5em',\n      },\n\n      '&:has(.sui-timeline__track:first-of-type):before': {\n        display: 'none',\n      },\n      '&:has(.sui-timeline__track:last-of-type):after': {\n        display: 'none',\n      },\n    },\n    icon: {\n      color: 'gray.300',\n      _dark: {\n        color: 'gray.600',\n      },\n    },\n    dot: {\n      width: '9px',\n      height: '9px',\n      bg: 'currentColor',\n      borderRadius: 'full',\n    },\n    track: {\n      bg: 'gray.300',\n      width: '1px',\n      flex: 1,\n      minH: '0.5em',\n      _dark: {\n        bg: 'gray.600',\n      },\n    },\n    content: {\n      px: '2',\n      _first: {\n        gridColumnStart: 1,\n      },\n      _last: {\n        gridColumnStart: 2,\n        justifySelf: 'start',\n      },\n    },\n  }\n})\n\nconst variantSolid = definePartsStyle((props) => {\n  return {\n    icon: {},\n  }\n})\n\nconst variantOutline = definePartsStyle((props) => {\n  return {\n    dot: {\n      bg: 'transparent',\n      borderColor: 'currentColor',\n      borderWidth: '2px',\n    },\n  }\n})\n\nexport const timelineTheme = defineMultiStyleConfig({\n  defaultProps: { variant: 'solid', size: 'sm' },\n  baseStyle,\n  variants: {\n    solid: variantSolid,\n    outline: variantOutline,\n  },\n  sizes: {\n    sm: {\n      icon: {\n        minH: '8px',\n        minW: '8px',\n      },\n    },\n  },\n})\n","import { defineStyleConfig } from '@chakra-ui/styled-system'\n\nexport const iconBadgeTheme = defineStyleConfig({\n  baseStyle: {\n    display: 'inline-flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  variants: {\n    outline: ({ colorScheme }) => {\n      return {\n        borderWidth: '1px',\n        borderColor: colorScheme ? `${colorScheme}.500` : 'chakra-border-color',\n        color: colorScheme ? `${colorScheme}.500` : 'currentColor',\n      }\n    },\n    solid: ({ colorScheme = 'gray' }) => {\n      return {\n        bg: `${colorScheme}.500`,\n        color: 'white',\n      }\n    },\n  },\n  sizes: {\n    sm: {\n      borderRadius: 'sm',\n      fontSize: '0.9em',\n      w: 6,\n      h: 6,\n    },\n    md: {\n      borderRadius: 'md',\n      fontSize: '1.1em',\n      w: 8,\n      h: 8,\n    },\n    lg: {\n      borderRadius: 'md',\n      fontSize: '1.3em',\n      w: 10,\n      h: 10,\n    },\n    xl: {\n      borderRadius: 'md',\n      fontSize: '1.5em',\n      w: 12,\n      h: 12,\n    },\n  },\n  defaultProps: {\n    variant: 'outline',\n    size: 'md',\n  },\n})\n","import { anatomy } from '@chakra-ui/anatomy'\nimport { createMultiStyleConfigHelpers, cssVar } from '@chakra-ui/styled-system'\n\nconst parts = anatomy('navbar').parts(\n  'container',\n  'inner',\n  'brand',\n  'content',\n  'item',\n  'link'\n)\n\nconst { defineMultiStyleConfig, definePartsStyle } =\n  createMultiStyleConfigHelpers(parts.keys)\n\nconst $bg = cssVar('navbar-bg')\nconst $color = cssVar('navbar-text-color', 'currentColor')\nconst $linkBg = cssVar('navbar-link-bg', 'transparent')\n\nconst accessibleColors = ['yellow', 'cyan']\n\nexport const navbarTheme = defineMultiStyleConfig({\n  baseStyle: definePartsStyle(({ colorScheme }) => {\n    let color = 'currentColor'\n    if (colorScheme) {\n      color = accessibleColors.includes(colorScheme)\n        ? 'colors.black'\n        : 'colors.white'\n    }\n\n    return {\n      container: {\n        display: 'flex',\n        [$bg.variable]: colorScheme\n          ? `colors.${colorScheme}.500`\n          : 'colors.chakra-body-bg',\n        [$color.variable]: color,\n        bg: $bg.reference,\n        color: $color.reference,\n        zIndex: 'overlay',\n        width: 'full',\n        height: 'auto',\n        alignItems: 'center',\n        justifyContent: 'center',\n        data: {\n          '& [data-menu-open=true]': {\n            border: 'none',\n          },\n        },\n      },\n      inner: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        width: 'full',\n        height: 'var(--navbar-height)',\n        px: {\n          base: 4,\n          lg: 6,\n        },\n        gap: 4,\n        flexWrap: 'nowrap',\n      },\n      toggle: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: 6,\n        height: 'full',\n        outline: 'none',\n        borderRadius: 'sm',\n      },\n      brand: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-start',\n        height: 'full',\n        bg: 'transparent',\n        textDecoration: 'none',\n        color: 'inherit',\n        whiteSpace: 'nowrap',\n        boxSizing: 'border-box',\n      },\n      content: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-start',\n        flex: 1,\n        listStyle: 'none',\n      },\n      item: {\n        display: 'inline-flex',\n        p: 0,\n      },\n      link: {\n        bg: $linkBg.reference,\n        color: 'current',\n        display: 'inline-flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        textDecoration: 'none',\n        whiteSpace: 'nowrap',\n        boxSizing: 'border-box',\n        borderRadius: 'md',\n        transitionProperty: 'common',\n        transitionDuration: 'normal',\n        lineHeight: 1,\n        px: 3,\n        h: 8,\n        _focusVisible: {\n          outline: 'none',\n          boxShadow: 'outline',\n        },\n        _hover: {\n          [$linkBg.variable]: `colors.blackAlpha.100`,\n          textDecoration: 'none',\n          _dark: {\n            [$linkBg.variable]: `colors.whiteAlpha.200`,\n          },\n        },\n        _active: {\n          fontWeight: 'semibold',\n        },\n      },\n    }\n  }),\n})\n","import { appShellTheme } from './app-shell'\nimport { bannerTheme } from './banner'\nimport { commandTheme } from './command'\nimport { emptyStateTheme } from './empty-state'\nimport { formTheme } from './form'\nimport { formLayoutTheme } from './form-layout'\nimport { formLegendTheme } from './form-legend'\nimport { hotkeysTheme } from './hotkeys'\nimport { loadingOverlayTheme } from './loading-overlay'\nimport { navGroupTheme } from './nav-group'\nimport { navItemTheme } from './nav-item'\nimport { nprogressTheme } from './nprogress'\nimport { personaTheme } from './persona'\nimport { propertyTheme } from './property'\nimport { searchInputTheme } from './search-input'\nimport { sidebarTheme } from './sidebar'\nimport { selectTheme } from './select'\nimport { structuredListTheme } from './structured-list'\nimport { timelineTheme } from './timeline'\nimport { iconBadgeTheme } from './icon-badge'\nimport { navbarTheme } from './navbar'\n\nexport { appShellTheme as SuiAppShell } from './app-shell'\nexport { bannerTheme as SuiBanner } from './banner'\nexport { commandTheme as SuiCommand } from './command'\nexport { emptyStateTheme as SuiEmptyState } from './empty-state'\nexport { formLayoutTheme as SuiFormLayout } from './form-layout'\nexport { formTheme as Form } from './form'\nexport { formLegendTheme as SuiFormLegend } from './form-legend'\nexport { hotkeysTheme as SuiHotkeys } from './hotkeys'\nexport { loadingOverlayTheme as SuiLoadingOverlay } from './loading-overlay'\nexport { navGroupTheme as SuiNavGroup } from './nav-group'\nexport { navItemTheme as SuiNavItem } from './nav-item'\nexport { personaTheme as SuiPersona } from './persona'\nexport { propertyTheme as SuiProperty } from './property'\nexport { nprogressTheme as SuiNProgress } from './nprogress'\nexport { searchInputTheme as SuiSearchInput } from './search-input'\nexport { selectTheme as SuiSelect } from './select'\nexport { sidebarTheme as SuiSidebar } from './sidebar'\nexport { structuredListTheme as SuiStructuredList } from './structured-list'\nexport { timelineTheme as SuiTimeline } from './timeline'\nexport { iconBadgeTheme as SuiIconBadge } from './icon-badge'\nexport { navbarTheme as SuiNavbarTheme } from './navbar'\n\nexport const components = {\n  Form: formTheme,\n  SuiAppShell: appShellTheme,\n  SuiBanner: bannerTheme,\n  SuiCommand: commandTheme,\n  SuiEmptyState: emptyStateTheme,\n  SuiFormLayout: formLayoutTheme,\n  SuiFormLegend: formLegendTheme,\n  SuiHotkeys: hotkeysTheme,\n  SuiStructuredList: structuredListTheme,\n  SuiLoadingOverlay: loadingOverlayTheme,\n  SuiNavGroup: navGroupTheme,\n  SuiNavItem: navItemTheme,\n  SuiPersona: personaTheme,\n  SuiProperty: propertyTheme,\n  SuiNProgress: nprogressTheme,\n  SuiSearchInput: searchInputTheme,\n  SuiSelect: selectTheme,\n  SuiSidebar: sidebarTheme,\n  SuiTimeline: timelineTheme,\n  SuiIconBadge: iconBadgeTheme,\n  SuiNavbar: navbarTheme,\n}\n","import { Styles } from '@chakra-ui/theme-tools'\n\nexport const styles: Styles = {\n  global: (props) => ({\n    body: {\n      WebkitFontSmoothing: 'antialiased',\n      TextRendering: 'optimizelegibility',\n    },\n  }),\n}\n","const colors = {\n  black: '#0e1012',\n  gray: {\n    '50': '#f9fafa',\n    '100': '#f1f1f2',\n    '200': '#e7e7e8',\n    '300': '#d3d4d5',\n    '400': '#abadaf',\n    '500': '#7d7f83',\n    '600': '#52555a',\n    '700': '#33373d',\n    '800': '#1d2025',\n    '900': '#171a1d',\n  },\n  purple: {\n    '50': '#f9f6fd',\n    '100': '#e5daf8',\n    '200': '#d3bef4',\n    '300': '#b795ec',\n    '400': '#a379e7',\n    '500': '#8952e0',\n    '600': '#7434db',\n    '700': '#6023c0',\n    '800': '#4f1d9e',\n    '900': '#3b1676',\n  },\n  pink: {\n    '50': '#fdf5f9',\n    '100': '#f8d9e7',\n    '200': '#f3b9d3',\n    '300': '#eb8db8',\n    '400': '#e56ba2',\n    '500': '#dc3882',\n    '600': '#c4246c',\n    '700': '#a01d58',\n    '800': '#7d1745',\n    '900': '#5d1133',\n  },\n  red: {\n    '50': '#fdf6f5',\n    '100': '#f8d9d8',\n    '200': '#f1b8b4',\n    '300': '#e98d87',\n    '400': '#e4726c',\n    '500': '#dc4a41',\n    '600': '#d2140a',\n    '700': '#ac0900',\n    '800': '#930800',\n    '900': '#6d0600',\n  },\n  orange: {\n    '50': '#fdfaf6',\n    '100': '#f9ebdb',\n    '200': '#f1d4b1',\n    '300': '#e6b273',\n    '400': '#dc9239',\n    '500': '#c37b24',\n    '600': '#a5681e',\n    '700': '#835318',\n    '800': '#674113',\n    '900': '#553610',\n  },\n  yellow: {\n    '50': '#fffefb',\n    '100': '#fff8e9',\n    '200': '#feecbd',\n    '300': '#fddc87',\n    '400': '#fbc434',\n    '500': '#d2a01e',\n    '600': '#a88018',\n    '700': '#836413',\n    '800': '#624b0e',\n    '900': '#513e0c',\n  },\n  green: {\n    '50': '#f7fdfb',\n    '100': '#d2f2e7',\n    '200': '#9fe3cd',\n    '300': '#64d2ad',\n    '400': '#1dbd88',\n    '500': '#0ea371',\n    '600': '#0c875e',\n    '700': '#096949',\n    '800': '#07563c',\n    '900': '#064731',\n  },\n  teal: {\n    '50': '#f1fcfc',\n    '100': '#c0f1f4',\n    '200': '#84e4e9',\n    '300': '#2dd1da',\n    '400': '#22b2ba',\n    '500': '#1d979e',\n    '600': '#187b80',\n    '700': '#125f64',\n    '800': '#0f5053',\n    '900': '#0d4244',\n  },\n  cyan: {\n    '50': '#f4fbfd',\n    '100': '#d0eef7',\n    '200': '#bae7f3',\n    '300': '#a2deee',\n    '400': '#53c2e1',\n    '500': '#2ab4d9',\n    '600': '#24a2c4',\n    '700': '#1e86a2',\n    '800': '#196e85',\n    '900': '#135567',\n  },\n  blue: {\n    '50': '#f1f6fd',\n    '100': '#cde0f6',\n    '200': '#a8c8f0',\n    '300': '#7fafe8',\n    '400': '#5896e1',\n    '500': '#347fdb',\n    '600': '#236abf',\n    '700': '#1b5192',\n    '800': '#164278',\n    '900': '#123662',\n  },\n  indigo: {\n    '50': '#f8f7fc',\n    '100': '#e1ddf5',\n    '200': '#c8c0ec',\n    '300': '#a89de2',\n    '400': '#9789dc',\n    '500': '#7f6ed4',\n    '600': '#6a58c9',\n    '700': '#5546a1',\n    '800': '#483c88',\n    '900': '#342b62',\n  },\n}\n\nexport default {\n  primary: colors.purple,\n  secondary: colors.cyan,\n  ...colors,\n}\n","export const fonts = {\n  heading: 'InterVariable, Inter, sans-serif',\n  body: 'InterVariable, Inter, sans-serif',\n}\n\nexport const fontSizes = {\n  '3xs': '0.45rem',\n  '2xs': '0.625rem',\n  xs: '0.75rem',\n  sm: '0.8125rem',\n  md: '0.875rem',\n  lg: '1rem',\n  xl: '1.125rem',\n  '2xl': '1.25rem',\n  '3xl': '1.5rem',\n  '4xl': '1.875rem',\n  '5xl': '2.25rem',\n  '6xl': '3rem',\n  '7xl': '3.75rem',\n  '8xl': '4.5rem',\n  '9xl': '6rem',\n}\n\nexport const textStyles = {\n  h1: {\n    fontSize: ['5xl', '6xl', '7xl'],\n    fontWeight: 'extrabold',\n    lineHeight: '1.2',\n    letterSpacing: '-2%',\n  },\n  h2: {\n    fontSize: ['3xl', '4xl', '5xl'],\n    fontWeight: 'extrabold',\n    lineHeight: '1.1',\n    letterSpacing: '-1%',\n  },\n  h3: {\n    fontSize: ['lg', 'xl'],\n    fontWeight: 'extrabold',\n    lineHeight: '1.1',\n    letterSpacing: '-1%',\n  },\n  subtitle: {\n    fontSize: ['lg', null, '2xl'],\n    fontWeight: 'normal',\n  },\n}\n","const sizes = {\n  container: {\n    sm: '30em',\n    md: '48em',\n    lg: '62em',\n    xl: '80em',\n    '2xl': '96em',\n  },\n}\n\nexport default sizes\n","import { transparentize } from '@chakra-ui/theme-tools'\n\nimport colors from './colors'\n\nconst shadows = {\n  outline: `0 0 0 2px ${transparentize(colors.primary[500], 0.6)({ colors })}`,\n}\n\nexport default shadows\n","export default {\n  colors: {\n    'chakra-border-color': { _light: 'gray.200', _dark: 'whiteAlpha.200' },\n    muted: {\n      default: 'gray.500',\n      _dark: 'gray.400',\n    },\n    neutral: {\n      default: 'black',\n      _dark: 'white',\n    },\n    'neutral-fg': {\n      default: 'white',\n      _dark: 'black',\n    },\n  },\n}\n","import colors from './colors'\nimport { fonts, fontSizes, textStyles } from './typography'\nimport sizes from './sizes'\nimport shadows from './shadows'\nimport semanticTokens from './semantic-tokens'\n\nexport const foundations = {\n  colors,\n  fonts,\n  fontSizes,\n  textStyles,\n  sizes,\n  shadows,\n  semanticTokens,\n}\n"],"names":["extendTheme","createMultiStyleConfigHelpers","definePartsStyle","defineMultiStyleConfig","createMultiStyleConfigHelpers","baseStyle","theme","createMultiStyleConfigHelpers","definePartsStyle","defineMultiStyleConfig","createMultiStyleConfigHelpers","baseStyle","createMultiStyleConfigHelpers","definePartsStyle","defineMultiStyleConfig","defineStyleConfig","createMultiStyleConfigHelpers","definePartsStyle","defineMultiStyleConfig","createMultiStyleConfigHelpers","createMultiStyleConfigHelpers","defineMultiStyleConfig","definePartsStyle","createMultiStyleConfigHelpers","baseStyle","createMultiStyleConfigHelpers","definePartsStyle","defineMultiStyleConfig","createMultiStyleConfigHelpers","baseStyle","transparentize","createMultiStyleConfigHelpers","definePartsStyle","defineMultiStyleConfig","createMultiStyleConfigHelpers","baseStyle","variantSubtle","theme","transparentize","variantSolid","createMultiStyleConfigHelpers","definePartsStyle","defineMultiStyleConfig","createMultiStyleConfigHelpers","baseStyle","createMultiStyleConfigHelpers","definePartsStyle","defineMultiStyleConfig","createMultiStyleConfigHelpers","createMultiStyleConfigHelpers","defineMultiStyleConfig","createMultiStyleConfigHelpers","createMultiStyleConfigHelpers","definePartsStyle","defineMultiStyleConfig","createMultiStyleConfigHelpers","baseStyle","createMultiStyleConfigHelpers","defineMultiStyleConfig","createMultiStyleConfigHelpers","createMultiStyleConfigHelpers","definePartsStyle","defineMultiStyleConfig","createMultiStyleConfigHelpers","baseStyle","createMultiStyleConfigHelpers","definePartsStyle","defineMultiStyleConfig","createMultiStyleConfigHelpers","baseStyle","variantSolid","defineStyleConfig","createMultiStyleConfigHelpers","cssVar","defineMultiStyleConfig","definePartsStyle","components","baseTheme","components","sizes","transparentize","transparentize","theme","extendTheme","baseTheme"],"mappings":"","debugId":null}},
    {"offset": {"line": 1554, "column": 0}, "map": {"version":3,"sources":["file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/nprogress/dist/index.mjs/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const NProgress = registerClientReference(\n    function() { throw new Error(\"Attempted to call NProgress() from the server but NProgress is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/nprogress/dist/index.mjs <module evaluation>\",\n    \"NProgress\",\n);\nexport const NProgressNextRouter = registerClientReference(\n    function() { throw new Error(\"Attempted to call NProgressNextRouter() from the server but NProgressNextRouter is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/nprogress/dist/index.mjs <module evaluation>\",\n    \"NProgressNextRouter\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;;;AACvE;;AACO,MAAM,YAAY,IAAA,wQAAuB,EAC5C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,gFACA;AAEG,MAAM,sBAAsB,IAAA,wQAAuB,EACtD;IAAa,MAAM,IAAI,MAAM;AAAsP,GACnR,gFACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1573, "column": 0}, "map": {"version":3,"sources":["file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/nprogress/dist/index.mjs/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const NProgress = registerClientReference(\n    function() { throw new Error(\"Attempted to call NProgress() from the server but NProgress is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/nprogress/dist/index.mjs\",\n    \"NProgress\",\n);\nexport const NProgressNextRouter = registerClientReference(\n    function() { throw new Error(\"Attempted to call NProgressNextRouter() from the server but NProgressNextRouter is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/nprogress/dist/index.mjs\",\n    \"NProgressNextRouter\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;;;AACvE;;AACO,MAAM,YAAY,IAAA,wQAAuB,EAC5C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,4DACA;AAEG,MAAM,sBAAsB,IAAA,wQAAuB,EACtD;IAAa,MAAM,IAAI,MAAM;AAAsP,GACnR,4DACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1592, "column": 0}, "map": {"version":3,"sources":["file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/nprogress/src/nprogress.tsx","file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/nprogress/src/next-router.tsx"],"sourcesContent":["import * as React from 'react'\n\nimport {\n  chakra,\n  forwardRef,\n  HTMLChakraProps,\n  ThemingProps,\n  omitThemingProps,\n  useColorModeValue,\n  useMultiStyleConfig,\n  SystemStyleObject,\n} from '@chakra-ui/react'\n\nimport { cx } from '@chakra-ui/utils'\n\nimport { useNProgress } from '@tanem/react-nprogress'\n\ninterface NProgressOptions {\n  /**\n   * Set to true to start the progress animation.\n   */\n  isAnimating: boolean\n}\n\nexport interface NProgressProps\n  extends NProgressOptions,\n    HTMLChakraProps<'div'>,\n    ThemingProps<'SuiNProgress'> {}\n/**\n * Show feedback when switching pages and content is loading in the background.\n *\n * @see Docs https://saas-ui.dev/docs/components/feedback/nprogress\n */\nexport const NProgress = forwardRef<NProgressProps, 'div'>((props, ref) => {\n  const styles = useMultiStyleConfig('SuiNProgress', props)\n\n  const { colorScheme: c } = props\n\n  const { children, isAnimating, ...containerProps } = omitThemingProps(props)\n\n  const { animationDuration, isFinished, progress } = useNProgress({\n    isAnimating,\n  })\n\n  const barStyles: SystemStyleObject = {\n    width: '100%',\n    height: '2px',\n    bg: useColorModeValue(`${c}.500`, `${c}.300`),\n    ...styles.bar,\n  }\n\n  return (\n    <chakra.div\n      ref={ref}\n      __css={styles.container}\n      position=\"fixed\"\n      top=\"0\"\n      left=\"0\"\n      width=\"100%\"\n      opacity={isFinished ? 0 : 1}\n      zIndex=\"overlay\"\n      transition={`opacity ${animationDuration}ms linear`}\n      {...containerProps}\n      className={cx('sui-nprogress', props.className)}\n    >\n      <chakra.div\n        __css={barStyles}\n        ml={`${(-1 + progress) * 100}%;`}\n        transition={`margin-left ${animationDuration}ms linear`}\n      ></chakra.div>\n    </chakra.div>\n  )\n})\n\nNProgress.displayName = 'NProgress'\n","import * as React from 'react'\nimport { useEffect, useState } from 'react'\n\nimport { NProgress } from './nprogress'\n\nexport const NProgressNextRouter = ({ router }: any) => {\n  const [state, setState] = useState({\n    isRouteChanging: false,\n    loadingKey: 0,\n  })\n\n  useEffect(() => {\n    const handleRouteChangeStart = () => {\n      setState((prevState) => ({\n        ...prevState,\n        isRouteChanging: true,\n        loadingKey: prevState.loadingKey ^ 1,\n      }))\n    }\n\n    const handleRouteChangeEnd = () => {\n      setState((prevState) => ({\n        ...prevState,\n        isRouteChanging: false,\n      }))\n    }\n\n    router.events.on('routeChangeStart', handleRouteChangeStart)\n    router.events.on('routeChangeComplete', handleRouteChangeEnd)\n    router.events.on('routeChangeError', handleRouteChangeEnd)\n\n    return () => {\n      router.events.off('routeChangeStart', handleRouteChangeStart)\n      router.events.off('routeChangeComplete', handleRouteChangeEnd)\n      router.events.off('routeChangeError', handleRouteChangeEnd)\n    }\n  }, [router.events])\n\n  const isAnimating = state.isRouteChanging\n\n  return (\n    <>\n      <NProgress isAnimating={isAnimating} key={state.loadingKey} />\n    </>\n  )\n}\n"],"names":["jsx"],"mappings":"","debugId":null}},
    {"offset": {"line": 1600, "column": 0}, "map": {"version":3,"sources":["file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/modals/dist/index.mjs/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const BaseDrawer = registerClientReference(\n    function() { throw new Error(\"Attempted to call BaseDrawer() from the server but BaseDrawer is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/modals/dist/index.mjs <module evaluation>\",\n    \"BaseDrawer\",\n);\nexport const BaseModal = registerClientReference(\n    function() { throw new Error(\"Attempted to call BaseModal() from the server but BaseModal is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/modals/dist/index.mjs <module evaluation>\",\n    \"BaseModal\",\n);\nexport const ConfirmDialog = registerClientReference(\n    function() { throw new Error(\"Attempted to call ConfirmDialog() from the server but ConfirmDialog is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/modals/dist/index.mjs <module evaluation>\",\n    \"ConfirmDialog\",\n);\nexport const Drawer = registerClientReference(\n    function() { throw new Error(\"Attempted to call Drawer() from the server but Drawer is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/modals/dist/index.mjs <module evaluation>\",\n    \"Drawer\",\n);\nexport const FormDialog = registerClientReference(\n    function() { throw new Error(\"Attempted to call FormDialog() from the server but FormDialog is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/modals/dist/index.mjs <module evaluation>\",\n    \"FormDialog\",\n);\nexport const MenuDialog = registerClientReference(\n    function() { throw new Error(\"Attempted to call MenuDialog() from the server but MenuDialog is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/modals/dist/index.mjs <module evaluation>\",\n    \"MenuDialog\",\n);\nexport const MenuDialogList = registerClientReference(\n    function() { throw new Error(\"Attempted to call MenuDialogList() from the server but MenuDialogList is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/modals/dist/index.mjs <module evaluation>\",\n    \"MenuDialogList\",\n);\nexport const Modal = registerClientReference(\n    function() { throw new Error(\"Attempted to call Modal() from the server but Modal is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/modals/dist/index.mjs <module evaluation>\",\n    \"Modal\",\n);\nexport const ModalsContext = registerClientReference(\n    function() { throw new Error(\"Attempted to call ModalsContext() from the server but ModalsContext is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/modals/dist/index.mjs <module evaluation>\",\n    \"ModalsContext\",\n);\nexport const ModalsProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call ModalsProvider() from the server but ModalsProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/modals/dist/index.mjs <module evaluation>\",\n    \"ModalsProvider\",\n);\nexport const createFormDialog = registerClientReference(\n    function() { throw new Error(\"Attempted to call createFormDialog() from the server but createFormDialog is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/modals/dist/index.mjs <module evaluation>\",\n    \"createFormDialog\",\n);\nexport const createModals = registerClientReference(\n    function() { throw new Error(\"Attempted to call createModals() from the server but createModals is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/modals/dist/index.mjs <module evaluation>\",\n    \"createModals\",\n);\nexport const useModals = registerClientReference(\n    function() { throw new Error(\"Attempted to call useModals() from the server but useModals is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/modals/dist/index.mjs <module evaluation>\",\n    \"useModals\",\n);\nexport const useModalsContext = registerClientReference(\n    function() { throw new Error(\"Attempted to call useModalsContext() from the server but useModalsContext is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/modals/dist/index.mjs <module evaluation>\",\n    \"useModalsContext\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACvE;;AACO,MAAM,aAAa,IAAA,wQAAuB,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,6EACA;AAEG,MAAM,YAAY,IAAA,wQAAuB,EAC5C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,6EACA;AAEG,MAAM,gBAAgB,IAAA,wQAAuB,EAChD;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,6EACA;AAEG,MAAM,SAAS,IAAA,wQAAuB,EACzC;IAAa,MAAM,IAAI,MAAM;AAA4N,GACzP,6EACA;AAEG,MAAM,aAAa,IAAA,wQAAuB,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,6EACA;AAEG,MAAM,aAAa,IAAA,wQAAuB,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,6EACA;AAEG,MAAM,iBAAiB,IAAA,wQAAuB,EACjD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,6EACA;AAEG,MAAM,QAAQ,IAAA,wQAAuB,EACxC;IAAa,MAAM,IAAI,MAAM;AAA0N,GACvP,6EACA;AAEG,MAAM,gBAAgB,IAAA,wQAAuB,EAChD;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,6EACA;AAEG,MAAM,iBAAiB,IAAA,wQAAuB,EACjD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,6EACA;AAEG,MAAM,mBAAmB,IAAA,wQAAuB,EACnD;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,6EACA;AAEG,MAAM,eAAe,IAAA,wQAAuB,EAC/C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,6EACA;AAEG,MAAM,YAAY,IAAA,wQAAuB,EAC5C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,6EACA;AAEG,MAAM,mBAAmB,IAAA,wQAAuB,EACnD;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,6EACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1679, "column": 0}, "map": {"version":3,"sources":["file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/modals/dist/index.mjs/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const BaseDrawer = registerClientReference(\n    function() { throw new Error(\"Attempted to call BaseDrawer() from the server but BaseDrawer is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/modals/dist/index.mjs\",\n    \"BaseDrawer\",\n);\nexport const BaseModal = registerClientReference(\n    function() { throw new Error(\"Attempted to call BaseModal() from the server but BaseModal is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/modals/dist/index.mjs\",\n    \"BaseModal\",\n);\nexport const ConfirmDialog = registerClientReference(\n    function() { throw new Error(\"Attempted to call ConfirmDialog() from the server but ConfirmDialog is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/modals/dist/index.mjs\",\n    \"ConfirmDialog\",\n);\nexport const Drawer = registerClientReference(\n    function() { throw new Error(\"Attempted to call Drawer() from the server but Drawer is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/modals/dist/index.mjs\",\n    \"Drawer\",\n);\nexport const FormDialog = registerClientReference(\n    function() { throw new Error(\"Attempted to call FormDialog() from the server but FormDialog is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/modals/dist/index.mjs\",\n    \"FormDialog\",\n);\nexport const MenuDialog = registerClientReference(\n    function() { throw new Error(\"Attempted to call MenuDialog() from the server but MenuDialog is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/modals/dist/index.mjs\",\n    \"MenuDialog\",\n);\nexport const MenuDialogList = registerClientReference(\n    function() { throw new Error(\"Attempted to call MenuDialogList() from the server but MenuDialogList is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/modals/dist/index.mjs\",\n    \"MenuDialogList\",\n);\nexport const Modal = registerClientReference(\n    function() { throw new Error(\"Attempted to call Modal() from the server but Modal is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/modals/dist/index.mjs\",\n    \"Modal\",\n);\nexport const ModalsContext = registerClientReference(\n    function() { throw new Error(\"Attempted to call ModalsContext() from the server but ModalsContext is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/modals/dist/index.mjs\",\n    \"ModalsContext\",\n);\nexport const ModalsProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call ModalsProvider() from the server but ModalsProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/modals/dist/index.mjs\",\n    \"ModalsProvider\",\n);\nexport const createFormDialog = registerClientReference(\n    function() { throw new Error(\"Attempted to call createFormDialog() from the server but createFormDialog is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/modals/dist/index.mjs\",\n    \"createFormDialog\",\n);\nexport const createModals = registerClientReference(\n    function() { throw new Error(\"Attempted to call createModals() from the server but createModals is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/modals/dist/index.mjs\",\n    \"createModals\",\n);\nexport const useModals = registerClientReference(\n    function() { throw new Error(\"Attempted to call useModals() from the server but useModals is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/modals/dist/index.mjs\",\n    \"useModals\",\n);\nexport const useModalsContext = registerClientReference(\n    function() { throw new Error(\"Attempted to call useModalsContext() from the server but useModalsContext is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/modals/dist/index.mjs\",\n    \"useModalsContext\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACvE;;AACO,MAAM,aAAa,IAAA,wQAAuB,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,yDACA;AAEG,MAAM,YAAY,IAAA,wQAAuB,EAC5C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,yDACA;AAEG,MAAM,gBAAgB,IAAA,wQAAuB,EAChD;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,yDACA;AAEG,MAAM,SAAS,IAAA,wQAAuB,EACzC;IAAa,MAAM,IAAI,MAAM;AAA4N,GACzP,yDACA;AAEG,MAAM,aAAa,IAAA,wQAAuB,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,yDACA;AAEG,MAAM,aAAa,IAAA,wQAAuB,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,yDACA;AAEG,MAAM,iBAAiB,IAAA,wQAAuB,EACjD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,yDACA;AAEG,MAAM,QAAQ,IAAA,wQAAuB,EACxC;IAAa,MAAM,IAAI,MAAM;AAA0N,GACvP,yDACA;AAEG,MAAM,gBAAgB,IAAA,wQAAuB,EAChD;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,yDACA;AAEG,MAAM,iBAAiB,IAAA,wQAAuB,EACjD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,yDACA;AAEG,MAAM,mBAAmB,IAAA,wQAAuB,EACnD;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,yDACA;AAEG,MAAM,eAAe,IAAA,wQAAuB,EAC/C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,yDACA;AAEG,MAAM,YAAY,IAAA,wQAAuB,EAC5C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,yDACA;AAEG,MAAM,mBAAmB,IAAA,wQAAuB,EACnD;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,yDACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1758, "column": 0}, "map": {"version":3,"sources":["file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/modals/src/dialog.tsx","file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/modals/src/drawer.tsx","file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/modals/src/menu.tsx","file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/modals/src/provider.tsx","file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/modals/src/default-modals.ts","file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/modals/src/create-modals.tsx"],"sourcesContent":["import * as React from 'react'\n\nimport {\n  AlertDialog,\n  AlertDialogBody,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogContent,\n  AlertDialogOverlay,\n  AlertDialogProps,\n  ButtonGroup,\n  ButtonGroupProps,\n  Button,\n  ButtonProps,\n} from '@chakra-ui/react'\n\nexport interface ConfirmDialogProps\n  extends Omit<AlertDialogProps, 'leastDestructiveRef'> {\n  /**\n   * The dialog title\n   */\n  title?: React.ReactNode\n  /**\n   * The cancel button label\n   */\n  cancelLabel?: React.ReactNode\n  /**\n   * The confirm button label\n   */\n  confirmLabel?: React.ReactNode\n  /**\n   * The cancel button props\n   */\n  cancelProps?: ButtonProps\n  /**\n   * The confirm button props\n   */\n  confirmProps?: ButtonProps\n  /**\n   * The button group props\n   */\n  buttonGroupProps?: ButtonGroupProps\n  /**\n   * Close the dialog on cancel\n   * @default true\n   */\n  closeOnCancel?: boolean\n  /**\n   * Close the dialog on confirm\n   * @default true\n   */\n  closeOnConfirm?: boolean\n  /**\n   * Defines which button gets initial focus\n   * https://www.w3.org/TR/wai-aria-practices/#alertdialog\n   */\n  leastDestructiveFocus?: 'cancel' | 'confirm'\n  /**\n   * Function that's called when cancel is clicked\n   */\n  onCancel?: () => void\n  /**\n   * Function that's called when confirm is clicked.\n   */\n  onConfirm?: () => Promise<void> | void\n}\n\nexport const ConfirmDialog: React.FC<ConfirmDialogProps> = (props) => {\n  const {\n    title,\n    cancelLabel = 'Cancel',\n    confirmLabel = 'Confirm',\n    cancelProps,\n    confirmProps,\n    buttonGroupProps,\n    isOpen,\n    closeOnCancel = true,\n    closeOnConfirm = true,\n    leastDestructiveFocus = 'cancel',\n    onClose,\n    onCancel,\n    onConfirm,\n    children,\n    ...rest\n  } = props\n\n  const cancelRef = React.useRef(null)\n  const confirmRef = React.useRef(null)\n  const [isLoading, setIsLoading] = React.useState(false)\n\n  const handleConfirm = async () => {\n    try {\n      const result = onConfirm?.()\n      if (typeof result?.then === 'function') {\n        setIsLoading(true)\n        await result\n      }\n\n      closeOnConfirm && onClose()\n      /* eslint-disable no-useless-catch */\n    } catch (e: any) {\n      throw e\n    } finally {\n      setIsLoading(false)\n    }\n    /* eslint-enable */\n  }\n\n  return (\n    <AlertDialog\n      isOpen={isOpen}\n      onClose={onClose}\n      {...rest}\n      leastDestructiveRef={\n        leastDestructiveFocus === 'cancel' ? cancelRef : confirmRef\n      }\n    >\n      <AlertDialogOverlay>\n        <AlertDialogContent>\n          <AlertDialogHeader>{title}</AlertDialogHeader>\n\n          <AlertDialogBody>{children}</AlertDialogBody>\n\n          <AlertDialogFooter>\n            <ButtonGroup {...buttonGroupProps}>\n              <Button\n                ref={cancelRef}\n                {...cancelProps}\n                onClick={() => {\n                  onCancel?.()\n\n                  closeOnCancel && onClose()\n                }}\n              >\n                {cancelProps?.children || cancelLabel}\n              </Button>\n              <Button\n                ref={confirmRef}\n                isLoading={isLoading}\n                {...confirmProps}\n                onClick={handleConfirm}\n              >\n                {confirmProps?.children || confirmLabel}\n              </Button>\n            </ButtonGroup>\n          </AlertDialogFooter>\n        </AlertDialogContent>\n      </AlertDialogOverlay>\n    </AlertDialog>\n  )\n}\n","import * as React from 'react'\n\nimport {\n  Drawer as ChakraDrawer,\n  DrawerOverlay,\n  DrawerContent,\n  DrawerHeader,\n  DrawerFooter,\n  DrawerBody,\n  DrawerCloseButton,\n  DrawerProps as ChakraDrawerProps,\n  ModalHeaderProps,\n  ModalContentProps,\n  ModalFooterProps,\n} from '@chakra-ui/react'\nimport { runIfFn, MaybeRenderProp } from '@chakra-ui/utils'\n\nexport interface BaseDrawerProps extends Omit<ChakraDrawerProps, 'children'> {\n  /**\n   * The drawer title\n   */\n  title: React.ReactNode\n  /**\n   * The modal children\n   */\n  children: MaybeRenderProp<{\n    isOpen: boolean\n    onClose: () => void\n  }>\n  /**\n   * The modal footer\n   */\n  footer?: React.ReactNode\n  /**\n   * Hide the close button\n   */\n  hideCloseButton?: boolean\n  /**\n   * Hide the overflow\n   */\n  hideOverlay?: boolean\n  /**\n   * Props for the modal header\n   */\n  headerProps?: ModalHeaderProps\n  /**\n   * Props for the modal content\n   */\n  contentProps?: ModalContentProps\n  /**\n   * Props for the modal footer\n   */\n  footerProps?: ModalFooterProps\n}\n\nexport const BaseDrawer: React.FC<BaseDrawerProps> = (props) => {\n  const {\n    title,\n    children,\n    footer,\n    isOpen,\n    onClose,\n    hideCloseButton,\n    hideOverlay,\n    headerProps,\n    contentProps,\n    footerProps,\n    ...rest\n  } = props\n  return (\n    <ChakraDrawer isOpen={isOpen} onClose={onClose} {...rest}>\n      {!hideOverlay && <DrawerOverlay />}\n      <DrawerContent {...contentProps}>\n        {title && <DrawerHeader {...headerProps}>{title}</DrawerHeader>}\n        {!hideCloseButton && <DrawerCloseButton />}\n        {runIfFn(children, {\n          isOpen,\n          onClose,\n        })}\n        {footer && <DrawerFooter {...footerProps}>{footer}</DrawerFooter>}\n      </DrawerContent>\n    </ChakraDrawer>\n  )\n}\n\nexport interface DrawerProps extends BaseDrawerProps {\n  /**\n   * Drawer footer content, wrapped with `DrawerFooter`\n   */\n  footer?: React.ReactNode\n}\n\nexport const Drawer: React.FC<DrawerProps> = (props) => {\n  const { children, isOpen, onClose, ...rest } = props\n  return (\n    <BaseDrawer isOpen={isOpen} onClose={onClose} {...rest}>\n      <DrawerBody>\n        {runIfFn(children, {\n          isOpen,\n          onClose,\n        })}\n      </DrawerBody>\n    </BaseDrawer>\n  )\n}\n","import * as React from 'react'\n\nimport {\n  ModalFooter,\n  chakra,\n  forwardRef,\n  useMenuContext,\n  useMenuList,\n  createStylesContext,\n  useMultiStyleConfig,\n  Menu,\n  MenuListProps,\n  useBreakpointValue,\n} from '@chakra-ui/react'\n\nimport { BaseModal, BaseModalProps } from './modal'\n\nconst [StylesProvider] = createStylesContext('SuiMenuDialog')\n\nexport interface MenuDialogProps extends BaseModalProps {\n  /**\n   * The modal footer, wrapped with `ModalFooter`\n   */\n  footer?: React.ReactNode\n}\n\nexport const MenuDialog: React.FC<MenuDialogProps> = (props) => {\n  const { onClose, onCloseComplete, ...rest } = props\n\n  return (\n    <Menu\n      variant=\"dialog\"\n      onClose={() => {\n        onClose?.()\n        // Not supported in Menu, so we call it here instead\n        // @todo Refactor this in v2?\n        onCloseComplete?.()\n      }}\n      {...rest}\n    />\n  )\n}\n\nexport interface MenuDialogListProps\n  extends Omit<\n      BaseModalProps,\n      'isOpen' | 'onClose' | 'children' | 'scrollBehavior'\n    >,\n    Omit<MenuListProps, 'title'> {}\n\nexport const MenuDialogList = forwardRef<MenuDialogListProps, 'div'>(\n  (props, forwardedRef) => {\n    const {\n      rootProps,\n      title,\n      footer,\n      initialFocusRef,\n      hideCloseButton,\n      motionPreset = 'slideInBottom',\n      isCentered: isCenteredProp,\n      ...rest\n    } = props\n\n    const { isOpen, onClose, menuRef } = useMenuContext()\n\n    const { ref, ...ownProps } = useMenuList(rest, forwardedRef)\n\n    const styles = useMultiStyleConfig('Menu', props)\n\n    const isCentered = useBreakpointValue({ base: true, md: false })\n\n    return (\n      <BaseModal\n        isOpen={isOpen}\n        onClose={onClose}\n        initialFocusRef={initialFocusRef || menuRef}\n        title={title}\n        hideCloseButton={hideCloseButton}\n        motionPreset={motionPreset}\n        isCentered={isCenteredProp ?? isCentered}\n        contentProps={{ mx: 4 }}\n      >\n        {/* We forward the styles again, otherwise the modal styles will be picked up */}\n        <StylesProvider value={styles}>\n          <chakra.div\n            {...ownProps}\n            ref={ref as React.Ref<HTMLDivElement>}\n            __css={{\n              outline: 0,\n              maxHeight: '80vh', // can override this in theme\n              overflowY: 'auto', // can override this in theme\n              ...styles.list,\n              boxShadow: 'none',\n              border: 0,\n              _dark: {\n                /* @ts-expect-error */\n                ...(styles.list._dark || {}),\n                boxShadow: 'none',\n              },\n            }}\n          />\n        </StylesProvider>\n        {footer && <ModalFooter>{footer}</ModalFooter>}\n      </BaseModal>\n    )\n  }\n)\n","import * as React from 'react'\n\nimport { BaseModalProps } from './modal'\nimport { DrawerProps } from './drawer'\nimport { ConfirmDialogProps } from './dialog'\nimport { MenuDialogProps } from './menu'\nimport { FormDialogProps } from './form'\nimport { defaultModals } from './default-modals'\nimport { FieldValues, FormType } from '@saas-ui/forms'\nimport { FormDialogHandler, FormHandler } from './types'\n\nexport interface ModalsContextValue<\n  TModals extends Record<string, React.FC<any>> = Record<string, React.FC<any>>,\n  TTypes extends Extract<keyof TModals, string> = Extract<keyof TModals, string>\n> {\n  open: <T extends OpenOptions<TTypes>>(\n    componentOrOptions: T extends {\n      component: infer TComponent extends React.FC<any>\n    }\n      ? WithModalOptions<React.ComponentPropsWithRef<TComponent>>\n      : T extends {\n          type: infer TType extends keyof TModals\n        }\n      ? WithModalOptions<React.ComponentPropsWithRef<TModals[TType]>>\n      : T,\n    options?: T extends React.FC<any>\n      ? WithModalOptions<React.ComponentPropsWithRef<T>>\n      : never\n  ) => ModalId\n  drawer: (options: DrawerOptions) => ModalId\n  alert: (options: ConfirmDialogOptions) => ModalId\n  confirm: (options: ConfirmDialogOptions) => ModalId\n  menu: (options: MenuDialogOptions) => ModalId\n  form: FormDialogHandler<TModals['form']>\n  close: (id: ModalId) => void\n  closeAll: () => void\n}\n\nexport const ModalsContext = React.createContext<ModalsContextValue<\n  typeof defaultModals\n> | null>(null)\n\nexport interface ModalsProviderProps<\n  TModals extends Record<string, React.FC<any>> = Record<string, React.FC<any>>\n> {\n  children: React.ReactNode\n  modals?: TModals\n}\n\nexport type ModalId = string | number\n\ntype WithModalOptions<T> = Omit<T, 'isOpen' | 'onClose'> & ModalOptions\n\ninterface ModalOptions\n  extends Omit<BaseModalProps, 'isOpen' | 'onClose' | 'children'> {\n  onClose?: (args: { force?: boolean }) => Promise<boolean | undefined> | void\n  [key: string]: any\n}\n\nexport interface DrawerOptions\n  extends ModalOptions,\n    Omit<DrawerProps, 'onClose' | 'isOpen' | 'children' | 'title' | 'size'> {}\n\nexport interface ConfirmDialogOptions\n  extends ModalOptions,\n    Omit<ConfirmDialogProps, 'onClose' | 'isOpen' | 'children'> {}\n\nexport interface MenuDialogOptions\n  extends ModalOptions,\n    Omit<MenuDialogProps, 'onClose' | 'isOpen' | 'children'> {}\n\nexport interface FormDialogOptions\n  extends ModalOptions,\n    Omit<FormDialogProps, 'onClose' | 'isOpen' | 'children'> {}\n\nexport interface OpenOptions<TModalTypes extends string> extends ModalOptions {\n  type?: TModalTypes\n  scope?: ModalScopes\n}\n\nexport type ModalScopes = 'modal' | 'alert'\n\nexport interface ModalConfig<\n  TModalOptions extends ModalOptions = ModalOptions,\n  TModalTypes extends string = string\n> {\n  /**\n   * The modal id, autogenerated when not set.\n   * Can be used to close modals.\n   */\n  id?: ModalId | null\n  /**\n   * The modal props\n   */\n  props?: TModalOptions | null\n  /**\n   * The modal scope\n   * Modals can only have one level per scope.\n   * The default scopes are 'modal' and 'alert', alerts can be openend above modals.\n   */\n  scope?: ModalScopes | string\n  /**\n   * The modal type to open.\n   * Build in types are 'modal', 'drawer', 'alert', 'confirm'\n   *\n   * Custom types can be configured using the `modals` prop of `ModalProvider`\n   */\n  type?: TModalTypes\n  /**\n   * Render a custom modal component.\n   * This will ignore the `type` param.\n   */\n  component?: React.FC<BaseModalProps>\n  /**\n   * Whether the modal is open or not.\n   * This is used internally to keep track of the modal state.\n   */\n  isOpen?: boolean\n}\n\nconst initialModalState: ModalConfig = {\n  id: null,\n  props: null,\n  type: 'modal',\n}\n\nexport function ModalsProvider({ children, modals }: ModalsProviderProps) {\n  // Note that updating the Set doesn't trigger a re-render,\n  // use in conjuction with setActiveModals\n  const _instances = React.useMemo(() => new Set<ModalConfig>(), [])\n\n  const [activeModals, setActiveModals] = React.useState<\n    Record<string, ModalConfig>\n  >({\n    modal: initialModalState,\n  })\n\n  const getModalComponent = React.useMemo(() => {\n    const _modals: Record<string, React.FC<any>> = {\n      ...defaultModals,\n      ...modals,\n    }\n\n    return (type = 'modal') => {\n      const component = _modals[type] || _modals.modal\n\n      return component\n    }\n  }, [modals])\n\n  const setActiveModal = (modal: ModalConfig, scope?: string) => {\n    if (!scope) {\n      return setActiveModals({\n        modal,\n      })\n    }\n    setActiveModals((prevState) => ({\n      ...prevState,\n      [scope]: modal,\n    }))\n  }\n\n  const open = <T extends OpenOptions<any>>(\n    componentOrOptions: any,\n    options?: T extends React.FC<any>\n      ? WithModalOptions<React.ComponentPropsWithRef<T>>\n      : never\n  ): ModalId => {\n    let _options: ModalOptions\n    if (typeof componentOrOptions === 'function') {\n      _options = {\n        component: componentOrOptions,\n        ...options,\n      } as unknown as T\n    } else {\n      _options = componentOrOptions\n    }\n\n    const {\n      id = _instances.size + 1,\n      type = 'modal',\n      scope = 'modal',\n      component,\n      ...props\n    } = _options\n\n    const modal: ModalConfig<T> = {\n      id,\n      props: props as T,\n      type,\n      scope,\n      component,\n      isOpen: true,\n    }\n\n    _instances.add(modal)\n    setActiveModal(modal, scope)\n\n    return id\n  }\n\n  const drawer = (options: DrawerOptions) => {\n    return open<DrawerOptions>({\n      ...options,\n      type: 'drawer',\n    })\n  }\n\n  const alert = (options: ConfirmDialogOptions) => {\n    return open({\n      ...options,\n      scope: 'alert',\n      type: 'alert',\n      cancelProps: {\n        display: 'none',\n      },\n      confirmProps: {\n        label: 'OK',\n      },\n      leastDestructiveFocus: 'confirm',\n    })\n  }\n\n  const confirm = (options: ConfirmDialogOptions) => {\n    return open<ConfirmDialogOptions>({\n      ...options,\n      scope: 'alert',\n      type: 'confirm',\n    })\n  }\n\n  const menu = (options: MenuDialogOptions) => {\n    return open<MenuDialogOptions>({\n      ...options,\n      type: 'menu',\n    })\n  }\n\n  const form = (options: any) => {\n    return open({\n      ...options,\n      type: 'form',\n    })\n  }\n\n  const close = async (id?: ModalId | null, force?: boolean) => {\n    const modals = [...Array.from(_instances)]\n    const modal = modals.filter((modal) => modal.id === id)[0]\n\n    if (!modal) {\n      return\n    }\n\n    const shouldClose = await modal.props?.onClose?.({ force })\n    if (shouldClose === false) {\n      return\n    }\n\n    const scoped = modals.filter(({ scope }) => scope === modal.scope)\n\n    if (scoped.length === 1) {\n      setActiveModal(\n        {\n          ...modal,\n          isOpen: false,\n        },\n        modal.scope\n      )\n    } else if (scoped.length > 1) {\n      setActiveModal(scoped[scoped.length - 2], modal.scope)\n    } else {\n      setActiveModal(\n        {\n          id: null,\n          props: null,\n          type: modal.type, // Keep type same as last modal type to make sure the animation isn't interrupted\n        },\n        modal.scope\n      )\n    }\n\n    // @todo this is not ideal, but not all modals support onCloseComplete\n    setTimeout(() => closeComplete(id), 200)\n  }\n\n  const closeComplete = (id?: ModalId | null) => {\n    const modals = [...Array.from(_instances)]\n    const modal = modals.filter((modal) => modal.id === id)[0]\n\n    _instances.delete(modal)\n\n    const scoped = modal && modals.filter(({ scope }) => scope === modal.scope)\n\n    if (scoped?.length === 1) {\n      setActiveModal(initialModalState, modal.scope)\n    }\n  }\n\n  const closeAll = () => {\n    _instances.forEach((modal) => modal.props?.onClose?.({ force: true }))\n    _instances.clear()\n\n    setActiveModal(initialModalState)\n  }\n\n  const context = {\n    open,\n    drawer,\n    alert,\n    confirm,\n    menu,\n    form,\n    close,\n    closeAll,\n  }\n\n  const content = React.useMemo(\n    () =>\n      Object.entries(activeModals).map(([scope, config]) => {\n        const Component = config.component || getModalComponent(config.type)\n\n        const { title, body, children, ...props } = config.props || {}\n\n        return (\n          <Component\n            key={scope}\n            title={title}\n            children={body || children}\n            {...props}\n            isOpen={!!config.isOpen}\n            onClose={() => close(config.id)}\n            onCloseComplete={() => closeComplete(config.id)}\n          />\n        )\n      }),\n    [activeModals]\n  )\n\n  return (\n    <ModalsContext.Provider value={context}>\n      {content}\n      {children}\n    </ModalsContext.Provider>\n  )\n}\n\nexport const useModalsContext = () => React.useContext(ModalsContext)\n\nexport const useModals = () => {\n  const modals = useModalsContext()\n\n  if (!modals) {\n    throw new Error('useModals must be used within a ModalsProvider')\n  }\n\n  return modals\n}\n","import { ConfirmDialog } from './dialog'\nimport { MenuDialog } from './menu'\nimport { FormDialog } from './form'\nimport { Drawer } from './drawer'\nimport { Modal } from './modal'\n\nexport const defaultModals = {\n  alert: ConfirmDialog,\n  confirm: ConfirmDialog,\n  drawer: Drawer,\n  modal: Modal,\n  menu: MenuDialog,\n  form: FormDialog,\n}\n","import { defaultModals } from './default-modals'\nimport {\n  ModalsContextValue,\n  ModalsProvider,\n  ModalsProviderProps,\n  useModals,\n} from './provider'\n\nexport interface CreateModalsOptions<\n  TModalDefs extends Record<string, React.FC<any>>\n> {\n  modals: TModalDefs\n}\n\nexport const createModals = <TModalDefs extends Record<string, React.FC<any>>>(\n  options: CreateModalsOptions<TModalDefs>\n) => {\n  const modals = {\n    ...defaultModals,\n    ...options.modals,\n  }\n  const Provider = (props: Omit<ModalsProviderProps, 'modals'>) => {\n    return <ModalsProvider children={props.children} modals={modals} />\n  }\n\n  return {\n    ModalsProvider: Provider,\n    useModals: useModals as () => ModalsContextValue<typeof modals>,\n  }\n}\n"],"names":["jsx","jsxs","jsx","jsxs","React","jsx","jsxs","modals","modal","children","jsx"],"mappings":"","debugId":null}},
    {"offset": {"line": 1766, "column": 0}, "map": {"version":3,"sources":["file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/data-table/dist/index.mjs/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const DataTable = registerClientReference(\n    function() { throw new Error(\"Attempted to call DataTable() from the server but DataTable is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/data-table/dist/index.mjs <module evaluation>\",\n    \"DataTable\",\n);\nexport const DataTableCell = registerClientReference(\n    function() { throw new Error(\"Attempted to call DataTableCell() from the server but DataTableCell is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/data-table/dist/index.mjs <module evaluation>\",\n    \"DataTableCell\",\n);\nexport const DataTableHeader = registerClientReference(\n    function() { throw new Error(\"Attempted to call DataTableHeader() from the server but DataTableHeader is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/data-table/dist/index.mjs <module evaluation>\",\n    \"DataTableHeader\",\n);\nexport const DataTableSort = registerClientReference(\n    function() { throw new Error(\"Attempted to call DataTableSort() from the server but DataTableSort is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/data-table/dist/index.mjs <module evaluation>\",\n    \"DataTableSort\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;;;;;;;AACvE;;AACO,MAAM,YAAY,IAAA,wQAAuB,EAC5C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,iFACA;AAEG,MAAM,gBAAgB,IAAA,wQAAuB,EAChD;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,iFACA;AAEG,MAAM,kBAAkB,IAAA,wQAAuB,EAClD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,iFACA;AAEG,MAAM,gBAAgB,IAAA,wQAAuB,EAChD;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,iFACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1795, "column": 0}, "map": {"version":3,"sources":["file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/data-table/dist/index.mjs/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const DataTable = registerClientReference(\n    function() { throw new Error(\"Attempted to call DataTable() from the server but DataTable is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/data-table/dist/index.mjs\",\n    \"DataTable\",\n);\nexport const DataTableCell = registerClientReference(\n    function() { throw new Error(\"Attempted to call DataTableCell() from the server but DataTableCell is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/data-table/dist/index.mjs\",\n    \"DataTableCell\",\n);\nexport const DataTableHeader = registerClientReference(\n    function() { throw new Error(\"Attempted to call DataTableHeader() from the server but DataTableHeader is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/data-table/dist/index.mjs\",\n    \"DataTableHeader\",\n);\nexport const DataTableSort = registerClientReference(\n    function() { throw new Error(\"Attempted to call DataTableSort() from the server but DataTableSort is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/data-table/dist/index.mjs\",\n    \"DataTableSort\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;;;;;;;AACvE;;AACO,MAAM,YAAY,IAAA,wQAAuB,EAC5C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,6DACA;AAEG,MAAM,gBAAgB,IAAA,wQAAuB,EAChD;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,6DACA;AAEG,MAAM,kBAAkB,IAAA,wQAAuB,EAClD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,6DACA;AAEG,MAAM,gBAAgB,IAAA,wQAAuB,EAChD;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,6DACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1824, "column": 0}, "map": {"version":3,"sources":["file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/data-table/src/data-table.tsx"],"sourcesContent":["import * as React from 'react'\nimport {\n  useReactTable,\n  getCoreRowModel,\n  getSortedRowModel,\n  Table as TableInstance,\n  flexRender,\n  ColumnDef,\n  ColumnSort,\n  TableOptions,\n  Header,\n  Cell,\n} from '@tanstack/react-table'\nimport {\n  chakra,\n  forwardRef,\n  Table,\n  Thead,\n  Tbody,\n  Tr,\n  Th,\n  Td,\n  Checkbox,\n  ThemingProps,\n  SystemStyleObject,\n} from '@chakra-ui/react'\n\nimport { cx } from '@chakra-ui/utils'\n\nimport { ChevronDownIcon, ChevronUpIcon, Link } from '@saas-ui/core'\n\nexport type { TableInstance, ColumnDef }\n\nexport interface DataTableProps<Data extends object>\n  extends Omit<TableOptions<Data>, 'getCoreRowModel'>,\n    ThemingProps<'Table'> {\n  /**\n   * The TableInstance reference\n   */\n  instanceRef?: React.Ref<TableInstance<Data>>\n  /**\n   * Enable sorting on all columns\n   */\n  isSortable?: boolean\n  /**\n   * Enable row selection\n   */\n  isSelectable?: boolean\n  /**\n   * Triggers whenever the row selection changes.\n   * @params rows The selected row id's\n   */\n  onSelectedRowsChange?: (rows: Array<string>) => void\n  /**\n   * Triggers when sort changed.\n   * Use incombination with `manualSortBy` to enable remote sorting.\n   */\n  onSortChange?: (columns: ColumnSort[]) => void\n  /**\n   * The table class name attribute\n   */\n  className?: string\n  /**\n   * Table styles\n   */\n  sx?: SystemStyleObject\n}\n\nexport const DataTable = React.forwardRef(\n  <Data extends object>(\n    props: DataTableProps<Data>,\n    ref: React.ForwardedRef<HTMLTableElement>\n  ) => {\n    const {\n      instanceRef,\n      columns,\n      isSortable,\n      isSelectable,\n      onSelectedRowsChange,\n      onSortChange,\n      colorScheme,\n      size,\n      variant,\n      className,\n      sx,\n      ...rest\n    } = props\n\n    const instance = useReactTable<Data>({\n      columns: React.useMemo(() => {\n        return getSelectionColumn<Data>(isSelectable).concat(\n          columns?.map((column: any) => {\n            if (!column.accessorKey) {\n              column.accessorKey = column.accessor || column.id\n            }\n            if (!column.header && column.Header) {\n              column.header = column.Header\n            }\n            if (!column.cell && column.Cell) {\n              column.cell = column.Cell\n            } else if (!column.cell) {\n              column.cell = DataTableCell\n            }\n            return column\n          })\n        )\n      }, []),\n      enableRowSelection: isSelectable,\n      getSortedRowModel: isSortable ? getSortedRowModel() : undefined,\n      ...rest,\n      getCoreRowModel: getCoreRowModel(),\n    })\n\n    // This exposes the useTable api through the instanceRef\n    React.useImperativeHandle(instanceRef, () => instance, [instanceRef])\n\n    const state = instance.getState()\n\n    React.useEffect(() => {\n      onSelectedRowsChange?.(Object.keys(state.rowSelection))\n    }, [onSelectedRowsChange, state.rowSelection, instance])\n\n    React.useEffect(() => {\n      onSortChange?.(state.sorting)\n    }, [onSortChange, state.sorting])\n\n    return (\n      <Table\n        ref={ref}\n        sx={{ 'tr:last-child td': { border: 0 }, ...sx }}\n        className={cx('sui-data-table', className)}\n        colorScheme={colorScheme}\n        size={size}\n        variant={variant}\n      >\n        <Thead>\n          {instance.getHeaderGroups().map((headerGroup) => (\n            <Tr key={headerGroup.id}>\n              {headerGroup.headers.map((header) => (\n                <DataTableHeader\n                  key={header.id}\n                  header={header}\n                  isSortable={isSortable}\n                />\n              ))}\n            </Tr>\n          ))}\n        </Thead>\n        <Tbody>\n          {instance.getRowModel().rows.map((row) => {\n            return (\n              <Tr key={row.id}>\n                {row.getVisibleCells().map((cell) => {\n                  const meta = (cell.column.columnDef.meta || {}) as any\n                  return (\n                    <Td\n                      key={cell.id}\n                      overflow=\"hidden\"\n                      whiteSpace=\"nowrap\"\n                      textOverflow=\"ellipsis\"\n                      isNumeric={meta.isNumeric}\n                    >\n                      {flexRender(\n                        cell.column.columnDef.cell,\n                        cell.getContext()\n                      )}\n                    </Td>\n                  )\n                })}\n              </Tr>\n            )\n          })}\n        </Tbody>\n      </Table>\n    )\n  }\n) as (<Data extends object>(\n  props: DataTableProps<Data> & {\n    ref?: React.ForwardedRef<HTMLTableElement>\n  }\n) => React.ReactElement) & { displayName?: string }\n\nDataTable.displayName = 'DataTable'\n\nexport interface DataTableSortProps<Data extends object, TValue> {\n  header: Header<Data, TValue>\n}\nexport const DataTableSort = <Data extends object, TValue>(\n  props: DataTableSortProps<Data, TValue>\n) => {\n  const { header, ...rest } = props\n\n  const sorterStyles = {\n    ms: 2,\n  }\n\n  if (header.id === 'selection') {\n    return null\n  }\n\n  const sorted = header.column.getIsSorted()\n\n  return (\n    <chakra.span __css={sorterStyles} {...rest}>\n      {sorted ? (\n        sorted === 'desc' ? (\n          <ChevronDownIcon aria-label=\"sorted descending\" />\n        ) : (\n          <ChevronUpIcon aria-label=\"sorted ascending\" />\n        )\n      ) : (\n        ''\n      )}\n    </chakra.span>\n  )\n}\n\nDataTableSort.displayName = 'DataTableSort'\n\nexport interface DataTableHeaderProps<Data extends object, TValue> {\n  header: Header<Data, TValue>\n  isSortable?: boolean\n}\nexport const DataTableHeader = <Data extends object, TValue>(\n  props: DataTableHeaderProps<Data, TValue>\n) => {\n  const { header, isSortable, ...rest } = props\n\n  let headerProps = {}\n\n  const enabled = !header.column.getCanSort() ? false : isSortable\n\n  if (enabled) {\n    headerProps = {\n      className: 'saas-data-table__sortable',\n      userSelect: 'none',\n      cursor: 'pointer',\n      onClick: header.column.getToggleSortingHandler(),\n    }\n  }\n\n  const meta = (header.column.columnDef.meta || {}) as any\n  const size = header.column.columnDef.size\n  return (\n    <Th\n      colSpan={header.colSpan}\n      textTransform=\"none\"\n      width={size && `${size}px`}\n      isNumeric={meta.isNumeric}\n      {...headerProps}\n      {...rest}\n    >\n      {flexRender(header.column.columnDef.header, header.getContext())}\n      {enabled && <DataTableSort header={header} />}\n    </Th>\n  )\n}\n\nDataTableHeader.displayName = 'DataTableHeader'\n\nconst getResult = <Data extends object>(\n  fn: (row: Data) => string,\n  params: Data\n): string => {\n  if (typeof fn === 'function') {\n    return fn(params)\n  }\n  return fn\n}\n\nexport const DataTableCell = <Data extends object, TValue>(\n  props: Cell<Data, TValue>\n) => {\n  const { column, row, getValue } = props\n\n  const meta = (column.columnDef.meta || {}) as any\n\n  if (meta.href) {\n    const href = getResult(meta.href, row.original)\n    return <Link href={href}>{getValue<string>()}</Link>\n  }\n  return getValue() || null\n}\n\nDataTableCell.displayName = 'DataTableCell'\n\nconst DataTableCheckbox = forwardRef((props, ref) => {\n  return (\n    <chakra.div>\n      <Checkbox ref={ref} {...props} />\n    </chakra.div>\n  )\n})\n\nDataTableCheckbox.displayName = 'DataTableCheckbox'\n\nconst getSelectionColumn = <Data extends object>(enabled?: boolean) => {\n  return enabled\n    ? [\n        {\n          id: 'selection',\n          size: 1,\n          header: ({ table }) => (\n            <DataTableCheckbox\n              isChecked={table.getIsAllRowsSelected()}\n              isIndeterminate={table.getIsSomeRowsSelected()}\n              onChange={table.getToggleAllRowsSelectedHandler()}\n              aria-label={\n                table.getIsAllRowsSelected()\n                  ? 'Deselect all rows'\n                  : 'Select all rows'\n              }\n            />\n          ),\n          cell: ({ row }) => (\n            <DataTableCheckbox\n              isChecked={row.getIsSelected()}\n              isIndeterminate={row.getIsSomeSelected()}\n              onChange={row.getToggleSelectedHandler()}\n              aria-label={row.getIsSelected() ? 'Deselect row' : 'Select row'}\n            />\n          ),\n        } as ColumnDef<Data>,\n      ]\n    : []\n}\n"],"names":["forwardRef"],"mappings":"","debugId":null}},
    {"offset": {"line": 1832, "column": 0}, "map": {"version":3,"sources":["file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/hotkeys/dist/index.mjs/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const Hotkey = registerClientReference(\n    function() { throw new Error(\"Attempted to call Hotkey() from the server but Hotkey is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/hotkeys/dist/index.mjs <module evaluation>\",\n    \"Hotkey\",\n);\nexport const HotkeysCommand = registerClientReference(\n    function() { throw new Error(\"Attempted to call HotkeysCommand() from the server but HotkeysCommand is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/hotkeys/dist/index.mjs <module evaluation>\",\n    \"HotkeysCommand\",\n);\nexport const HotkeysGroup = registerClientReference(\n    function() { throw new Error(\"Attempted to call HotkeysGroup() from the server but HotkeysGroup is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/hotkeys/dist/index.mjs <module evaluation>\",\n    \"HotkeysGroup\",\n);\nexport const HotkeysItem = registerClientReference(\n    function() { throw new Error(\"Attempted to call HotkeysItem() from the server but HotkeysItem is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/hotkeys/dist/index.mjs <module evaluation>\",\n    \"HotkeysItem\",\n);\nexport const HotkeysList = registerClientReference(\n    function() { throw new Error(\"Attempted to call HotkeysList() from the server but HotkeysList is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/hotkeys/dist/index.mjs <module evaluation>\",\n    \"HotkeysList\",\n);\nexport const HotkeysListItems = registerClientReference(\n    function() { throw new Error(\"Attempted to call HotkeysListItems() from the server but HotkeysListItems is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/hotkeys/dist/index.mjs <module evaluation>\",\n    \"HotkeysListItems\",\n);\nexport const HotkeysProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call HotkeysProvider() from the server but HotkeysProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/hotkeys/dist/index.mjs <module evaluation>\",\n    \"HotkeysProvider\",\n);\nexport const HotkeysSearch = registerClientReference(\n    function() { throw new Error(\"Attempted to call HotkeysSearch() from the server but HotkeysSearch is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/hotkeys/dist/index.mjs <module evaluation>\",\n    \"HotkeysSearch\",\n);\nexport const createHotkeys = registerClientReference(\n    function() { throw new Error(\"Attempted to call createHotkeys() from the server but createHotkeys is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/hotkeys/dist/index.mjs <module evaluation>\",\n    \"createHotkeys\",\n);\nexport const splitKeys = registerClientReference(\n    function() { throw new Error(\"Attempted to call splitKeys() from the server but splitKeys is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/hotkeys/dist/index.mjs <module evaluation>\",\n    \"splitKeys\",\n);\nexport const useHotkeys = registerClientReference(\n    function() { throw new Error(\"Attempted to call useHotkeys() from the server but useHotkeys is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/hotkeys/dist/index.mjs <module evaluation>\",\n    \"useHotkeys\",\n);\nexport const useHotkeysContext = registerClientReference(\n    function() { throw new Error(\"Attempted to call useHotkeysContext() from the server but useHotkeysContext is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/hotkeys/dist/index.mjs <module evaluation>\",\n    \"useHotkeysContext\",\n);\nexport const useHotkeysSearch = registerClientReference(\n    function() { throw new Error(\"Attempted to call useHotkeysSearch() from the server but useHotkeysSearch is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/hotkeys/dist/index.mjs <module evaluation>\",\n    \"useHotkeysSearch\",\n);\nexport const useHotkeysShortcut = registerClientReference(\n    function() { throw new Error(\"Attempted to call useHotkeysShortcut() from the server but useHotkeysShortcut is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/hotkeys/dist/index.mjs <module evaluation>\",\n    \"useHotkeysShortcut\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACvE;;AACO,MAAM,SAAS,IAAA,wQAAuB,EACzC;IAAa,MAAM,IAAI,MAAM;AAA4N,GACzP,8EACA;AAEG,MAAM,iBAAiB,IAAA,wQAAuB,EACjD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,8EACA;AAEG,MAAM,eAAe,IAAA,wQAAuB,EAC/C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,8EACA;AAEG,MAAM,cAAc,IAAA,wQAAuB,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,8EACA;AAEG,MAAM,cAAc,IAAA,wQAAuB,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,8EACA;AAEG,MAAM,mBAAmB,IAAA,wQAAuB,EACnD;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,8EACA;AAEG,MAAM,kBAAkB,IAAA,wQAAuB,EAClD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,8EACA;AAEG,MAAM,gBAAgB,IAAA,wQAAuB,EAChD;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,8EACA;AAEG,MAAM,gBAAgB,IAAA,wQAAuB,EAChD;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,8EACA;AAEG,MAAM,YAAY,IAAA,wQAAuB,EAC5C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,8EACA;AAEG,MAAM,aAAa,IAAA,wQAAuB,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,8EACA;AAEG,MAAM,oBAAoB,IAAA,wQAAuB,EACpD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,8EACA;AAEG,MAAM,mBAAmB,IAAA,wQAAuB,EACnD;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,8EACA;AAEG,MAAM,qBAAqB,IAAA,wQAAuB,EACrD;IAAa,MAAM,IAAI,MAAM;AAAoP,GACjR,8EACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1911, "column": 0}, "map": {"version":3,"sources":["file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/hotkeys/dist/index.mjs/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const Hotkey = registerClientReference(\n    function() { throw new Error(\"Attempted to call Hotkey() from the server but Hotkey is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/hotkeys/dist/index.mjs\",\n    \"Hotkey\",\n);\nexport const HotkeysCommand = registerClientReference(\n    function() { throw new Error(\"Attempted to call HotkeysCommand() from the server but HotkeysCommand is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/hotkeys/dist/index.mjs\",\n    \"HotkeysCommand\",\n);\nexport const HotkeysGroup = registerClientReference(\n    function() { throw new Error(\"Attempted to call HotkeysGroup() from the server but HotkeysGroup is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/hotkeys/dist/index.mjs\",\n    \"HotkeysGroup\",\n);\nexport const HotkeysItem = registerClientReference(\n    function() { throw new Error(\"Attempted to call HotkeysItem() from the server but HotkeysItem is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/hotkeys/dist/index.mjs\",\n    \"HotkeysItem\",\n);\nexport const HotkeysList = registerClientReference(\n    function() { throw new Error(\"Attempted to call HotkeysList() from the server but HotkeysList is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/hotkeys/dist/index.mjs\",\n    \"HotkeysList\",\n);\nexport const HotkeysListItems = registerClientReference(\n    function() { throw new Error(\"Attempted to call HotkeysListItems() from the server but HotkeysListItems is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/hotkeys/dist/index.mjs\",\n    \"HotkeysListItems\",\n);\nexport const HotkeysProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call HotkeysProvider() from the server but HotkeysProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/hotkeys/dist/index.mjs\",\n    \"HotkeysProvider\",\n);\nexport const HotkeysSearch = registerClientReference(\n    function() { throw new Error(\"Attempted to call HotkeysSearch() from the server but HotkeysSearch is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/hotkeys/dist/index.mjs\",\n    \"HotkeysSearch\",\n);\nexport const createHotkeys = registerClientReference(\n    function() { throw new Error(\"Attempted to call createHotkeys() from the server but createHotkeys is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/hotkeys/dist/index.mjs\",\n    \"createHotkeys\",\n);\nexport const splitKeys = registerClientReference(\n    function() { throw new Error(\"Attempted to call splitKeys() from the server but splitKeys is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/hotkeys/dist/index.mjs\",\n    \"splitKeys\",\n);\nexport const useHotkeys = registerClientReference(\n    function() { throw new Error(\"Attempted to call useHotkeys() from the server but useHotkeys is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/hotkeys/dist/index.mjs\",\n    \"useHotkeys\",\n);\nexport const useHotkeysContext = registerClientReference(\n    function() { throw new Error(\"Attempted to call useHotkeysContext() from the server but useHotkeysContext is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/hotkeys/dist/index.mjs\",\n    \"useHotkeysContext\",\n);\nexport const useHotkeysSearch = registerClientReference(\n    function() { throw new Error(\"Attempted to call useHotkeysSearch() from the server but useHotkeysSearch is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/hotkeys/dist/index.mjs\",\n    \"useHotkeysSearch\",\n);\nexport const useHotkeysShortcut = registerClientReference(\n    function() { throw new Error(\"Attempted to call useHotkeysShortcut() from the server but useHotkeysShortcut is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/hotkeys/dist/index.mjs\",\n    \"useHotkeysShortcut\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACvE;;AACO,MAAM,SAAS,IAAA,wQAAuB,EACzC;IAAa,MAAM,IAAI,MAAM;AAA4N,GACzP,0DACA;AAEG,MAAM,iBAAiB,IAAA,wQAAuB,EACjD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,0DACA;AAEG,MAAM,eAAe,IAAA,wQAAuB,EAC/C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,0DACA;AAEG,MAAM,cAAc,IAAA,wQAAuB,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,0DACA;AAEG,MAAM,cAAc,IAAA,wQAAuB,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,0DACA;AAEG,MAAM,mBAAmB,IAAA,wQAAuB,EACnD;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,0DACA;AAEG,MAAM,kBAAkB,IAAA,wQAAuB,EAClD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,0DACA;AAEG,MAAM,gBAAgB,IAAA,wQAAuB,EAChD;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,0DACA;AAEG,MAAM,gBAAgB,IAAA,wQAAuB,EAChD;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,0DACA;AAEG,MAAM,YAAY,IAAA,wQAAuB,EAC5C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,0DACA;AAEG,MAAM,aAAa,IAAA,wQAAuB,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,0DACA;AAEG,MAAM,oBAAoB,IAAA,wQAAuB,EACpD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,0DACA;AAEG,MAAM,mBAAmB,IAAA,wQAAuB,EACnD;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,0DACA;AAEG,MAAM,qBAAqB,IAAA,wQAAuB,EACrD;IAAa,MAAM,IAAI,MAAM;AAAoP,GACjR,0DACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1990, "column": 0}, "map": {"version":3,"sources":["file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/hotkeys/src/index.ts","file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/hotkeys/src/hotkeys.tsx"],"sourcesContent":["export {\n  HotkeysProvider,\n  useHotkeysContext,\n  splitKeys,\n  useHotkeys,\n  useHotkeysShortcut,\n  Hotkey,\n  createHotkeys,\n} from '@saas-ui/use-hotkeys'\nexport type {\n  HotkeysProviderProps,\n  UseHotkeysOptions,\n  HotkeysConfig,\n  HotkeyProps,\n  HotkeysContextValues,\n  HotkeysGroupConfig,\n  HotkeysGroupItems,\n  HotkeysItemConfig,\n} from '@saas-ui/use-hotkeys'\n\nexport {\n  HotkeysCommand,\n  HotkeysGroup,\n  HotkeysItem,\n  HotkeysList,\n  HotkeysListItems,\n  HotkeysSearch,\n  useHotkeysSearch,\n} from './hotkeys'\nexport type {\n  HotkeysGroupProps,\n  HotkeysItemProps,\n  HotkeysListProps,\n  HotkeysOptions,\n  UseHotkeysListReturn,\n} from './hotkeys'\n\nimport { HotkeysConfig } from '@saas-ui/use-hotkeys'\n\n/**\n * @deprecated Use `HotkeysConfig` instead.\n */\nexport type HotkeysListOptions = HotkeysConfig\n","import * as React from 'react'\nimport {\n  chakra,\n  forwardRef,\n  HTMLChakraProps,\n  ThemingProps,\n  omitThemingProps,\n  useMultiStyleConfig,\n  createStylesContext,\n} from '@chakra-ui/react'\nimport { cx, createContext } from '@chakra-ui/utils'\n\nimport { Kbd } from '@chakra-ui/react'\n\nimport { SearchInput, SearchInputProps } from '@saas-ui/core'\n\nconst [StylesProvider, useStyles] = createStylesContext('SuiHotkeys')\n\nconst regExpSyntaxCharacter = /[.*+?^${}()|[\\]\\\\]/g\n\nfunction escapeRegExp(value: string) {\n  return value.replace(regExpSyntaxCharacter, '\\\\$&')\n}\n\nimport {\n  HotkeysGroupItems,\n  HotkeysItemConfig,\n  splitKeys,\n} from '@saas-ui/use-hotkeys'\nimport { HotkeysConfig } from '@saas-ui/use-hotkeys'\n\nexport interface HotkeysOptions {\n  hotkeys: HotkeysConfig\n}\n\nexport interface UseHotkeysListReturn {\n  query?: string\n  setQuery: (query: string) => void\n  hotkeys: HotkeysConfig\n}\n\nconst [HotkeysListProvider, useHotkeysListContext] =\n  createContext<UseHotkeysListReturn>({\n    name: 'HotkeysListContext',\n  })\n\nconst useHotkeysList = (props: HotkeysListProps) => {\n  const [query, setQuery] = React.useState<string>('')\n\n  const { hotkeys } = props\n\n  return {\n    hotkeys,\n    query,\n    setQuery,\n  }\n}\n\nexport interface HotkeysListProps\n  extends HotkeysOptions,\n    HTMLChakraProps<'div'>,\n    ThemingProps<'SuiHotkeys'> {}\n\nexport const HotkeysList = forwardRef<HotkeysListProps, 'div'>(\n  ({ children, ...props }, ref) => {\n    const styles = useMultiStyleConfig('SuiHotkeys', props)\n    const ownProps = omitThemingProps(props)\n\n    const context = useHotkeysList(ownProps)\n\n    return (\n      <chakra.div\n        {...props}\n        ref={ref}\n        __css={styles.container}\n        className={cx('sui-hotkeys', props.className)}\n      >\n        <HotkeysListProvider value={context}>\n          <StylesProvider value={styles}>{children}</StylesProvider>\n        </HotkeysListProvider>\n      </chakra.div>\n    )\n  }\n)\n\nHotkeysList.displayName = 'HotkeysList'\n\nexport const useHotkeysSearch = () => {\n  return useHotkeysListContext()\n}\n\nexport const HotkeysSearch = forwardRef<Omit<SearchInputProps, 'as'>, 'input'>(\n  (props, ref) => {\n    const { query, setQuery } = useHotkeysSearch()\n\n    return (\n      <SearchInput\n        {...props}\n        ref={ref}\n        value={query}\n        onChange={({ target }) => setQuery(target.value)}\n        onReset={() => setQuery('')}\n      />\n    )\n  }\n)\n\nHotkeysSearch.displayName = 'HotkeysSearch'\n\nconst filterHotkeys = (\n  hotkeys: HotkeysGroupItems,\n  query?: string\n): HotkeysItemConfig[] | null => {\n  const results = Object.values(hotkeys).reduce(\n    (hotkeys: Array<HotkeysItemConfig>, key) => {\n      const { label } = key\n      const re = query && new RegExp(escapeRegExp(query), 'i')\n\n      const command = Array.isArray(key.command) ? key.command : [key.command]\n      if (!re || label.match(re) || command.some((c) => c.match(re))) {\n        hotkeys.push(key)\n      }\n\n      return hotkeys\n    },\n    []\n  )\n\n  if (!results?.length) {\n    return null\n  }\n\n  return results\n}\n\nexport const HotkeysListItems = forwardRef<HTMLChakraProps<'div'>, 'div'>(\n  (props, ref) => {\n    const { hotkeys, query } = useHotkeysListContext()\n    return (\n      <chakra.div\n        {...props}\n        ref={ref}\n        className={cx('sui-hotkeys__list-items', props.className)}\n      >\n        {Object.values(hotkeys).map((group, i) => {\n          const results = filterHotkeys(group.hotkeys, query)\n\n          if (!results?.length) {\n            return null\n          }\n\n          return (\n            <HotkeysGroup title={group.title} key={i}>\n              {results.map(({ label, command }: HotkeysItemConfig) => {\n                const c = Array.isArray(command) ? command[0] : command\n                return (\n                  <HotkeysItem command={c} key={c}>\n                    {label}\n                  </HotkeysItem>\n                )\n              })}\n            </HotkeysGroup>\n          )\n        })}\n      </chakra.div>\n    )\n  }\n)\n\nHotkeysListItems.displayName = 'HotkeysListItems'\n\nexport interface HotkeysGroupProps extends HTMLChakraProps<'div'> {\n  title?: string\n}\n\nexport const HotkeysGroup: React.FC<HotkeysGroupProps> = (props) => {\n  const { title, children, ...rest } = props\n  const styles = useStyles()\n\n  const groupStyles = {\n    my: 2,\n    py: 2,\n    ...styles.group,\n  }\n\n  const titleStyles = {\n    py: 2,\n    fontWeight: 'semibold',\n    ...styles.groupTitle,\n  }\n\n  return (\n    <chakra.div\n      {...rest}\n      __css={groupStyles}\n      className={cx('sui-hotkeys__group', props.className)}\n    >\n      {title && <chakra.p __css={titleStyles}>{title}</chakra.p>}\n      {children}\n    </chakra.div>\n  )\n}\n\nHotkeysGroup.displayName = 'HotkeysGroup'\n\nexport const HotkeysCommand: React.FC<HTMLChakraProps<'span'>> = (props) => {\n  const { children, ...rest } = props\n  const styles = useStyles()\n\n  let keys\n  if (typeof children === 'string') {\n    keys = splitKeys(children).map((key, i) => {\n      if (key === 'then') {\n        return (\n          <chakra.span key={key} __css={styles.then}>\n            {key}\n          </chakra.span>\n        )\n      }\n      return <Kbd key={key}>{key}</Kbd>\n    })\n  }\n\n  return (\n    <chakra.span\n      {...rest}\n      __css={styles.command}\n      className={cx('sui-hotkeys__command', props.className)}\n    >\n      {keys || children}\n    </chakra.span>\n  )\n}\n\nHotkeysCommand.displayName = 'HotkeysCommand'\n\nexport interface HotkeysItemProps extends HTMLChakraProps<'div'> {\n  command: string\n}\n\nexport const HotkeysItem: React.FC<HotkeysItemProps> = (props) => {\n  const { command, children } = props\n  const styles = useStyles()\n\n  const itemStyles = {\n    display: 'flex',\n    alignItems: 'center',\n    textAlign: 'start',\n    flex: '0 0 auto',\n    ...styles.item,\n  }\n\n  return (\n    <chakra.div\n      __css={itemStyles}\n      className={cx('sui-hotkeys__item', props.className)}\n    >\n      <chakra.span flex=\"1\">{children}</chakra.span>\n      <HotkeysCommand>{command}</HotkeysCommand>\n    </chakra.div>\n  )\n}\n\nHotkeysItem.displayName = 'HotkeysItem'\n"],"names":["splitKeys","hotkeys"],"mappings":"","debugId":null}},
    {"offset": {"line": 1998, "column": 0}, "map": {"version":3,"sources":["file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/forms/dist/index.mjs/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const ArrayField = registerClientReference(\n    function() { throw new Error(\"Attempted to call ArrayField() from the server but ArrayField is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs <module evaluation>\",\n    \"ArrayField\",\n);\nexport const ArrayFieldAddButton = registerClientReference(\n    function() { throw new Error(\"Attempted to call ArrayFieldAddButton() from the server but ArrayFieldAddButton is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs <module evaluation>\",\n    \"ArrayFieldAddButton\",\n);\nexport const ArrayFieldContainer = registerClientReference(\n    function() { throw new Error(\"Attempted to call ArrayFieldContainer() from the server but ArrayFieldContainer is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs <module evaluation>\",\n    \"ArrayFieldContainer\",\n);\nexport const ArrayFieldProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call ArrayFieldProvider() from the server but ArrayFieldProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs <module evaluation>\",\n    \"ArrayFieldProvider\",\n);\nexport const ArrayFieldRemoveButton = registerClientReference(\n    function() { throw new Error(\"Attempted to call ArrayFieldRemoveButton() from the server but ArrayFieldRemoveButton is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs <module evaluation>\",\n    \"ArrayFieldRemoveButton\",\n);\nexport const ArrayFieldRow = registerClientReference(\n    function() { throw new Error(\"Attempted to call ArrayFieldRow() from the server but ArrayFieldRow is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs <module evaluation>\",\n    \"ArrayFieldRow\",\n);\nexport const ArrayFieldRowContainer = registerClientReference(\n    function() { throw new Error(\"Attempted to call ArrayFieldRowContainer() from the server but ArrayFieldRowContainer is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs <module evaluation>\",\n    \"ArrayFieldRowContainer\",\n);\nexport const ArrayFieldRowFields = registerClientReference(\n    function() { throw new Error(\"Attempted to call ArrayFieldRowFields() from the server but ArrayFieldRowFields is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs <module evaluation>\",\n    \"ArrayFieldRowFields\",\n);\nexport const ArrayFieldRowProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call ArrayFieldRowProvider() from the server but ArrayFieldRowProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs <module evaluation>\",\n    \"ArrayFieldRowProvider\",\n);\nexport const ArrayFieldRows = registerClientReference(\n    function() { throw new Error(\"Attempted to call ArrayFieldRows() from the server but ArrayFieldRows is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs <module evaluation>\",\n    \"ArrayFieldRows\",\n);\nexport const AutoFields = registerClientReference(\n    function() { throw new Error(\"Attempted to call AutoFields() from the server but AutoFields is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs <module evaluation>\",\n    \"AutoFields\",\n);\nexport const BaseField = registerClientReference(\n    function() { throw new Error(\"Attempted to call BaseField() from the server but BaseField is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs <module evaluation>\",\n    \"BaseField\",\n);\nexport const BaseForm = registerClientReference(\n    function() { throw new Error(\"Attempted to call BaseForm() from the server but BaseForm is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs <module evaluation>\",\n    \"BaseForm\",\n);\nexport const CheckboxField = registerClientReference(\n    function() { throw new Error(\"Attempted to call CheckboxField() from the server but CheckboxField is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs <module evaluation>\",\n    \"CheckboxField\",\n);\nexport const Controller = registerClientReference(\n    function() { throw new Error(\"Attempted to call Controller() from the server but Controller is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs <module evaluation>\",\n    \"Controller\",\n);\nexport const DisplayField = registerClientReference(\n    function() { throw new Error(\"Attempted to call DisplayField() from the server but DisplayField is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs <module evaluation>\",\n    \"DisplayField\",\n);\nexport const DisplayIf = registerClientReference(\n    function() { throw new Error(\"Attempted to call DisplayIf() from the server but DisplayIf is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs <module evaluation>\",\n    \"DisplayIf\",\n);\nexport const Field = registerClientReference(\n    function() { throw new Error(\"Attempted to call Field() from the server but Field is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs <module evaluation>\",\n    \"Field\",\n);\nexport const FieldsProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call FieldsProvider() from the server but FieldsProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs <module evaluation>\",\n    \"FieldsProvider\",\n);\nexport const Form = registerClientReference(\n    function() { throw new Error(\"Attempted to call Form() from the server but Form is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs <module evaluation>\",\n    \"Form\",\n);\nexport const FormLayout = registerClientReference(\n    function() { throw new Error(\"Attempted to call FormLayout() from the server but FormLayout is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs <module evaluation>\",\n    \"FormLayout\",\n);\nexport const FormLegend = registerClientReference(\n    function() { throw new Error(\"Attempted to call FormLegend() from the server but FormLegend is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs <module evaluation>\",\n    \"FormLegend\",\n);\nexport const FormProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call FormProvider() from the server but FormProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs <module evaluation>\",\n    \"FormProvider\",\n);\nexport const FormStep = registerClientReference(\n    function() { throw new Error(\"Attempted to call FormStep() from the server but FormStep is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs <module evaluation>\",\n    \"FormStep\",\n);\nexport const FormStepper = registerClientReference(\n    function() { throw new Error(\"Attempted to call FormStepper() from the server but FormStepper is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs <module evaluation>\",\n    \"FormStepper\",\n);\nexport const FormValue = registerClientReference(\n    function() { throw new Error(\"Attempted to call FormValue() from the server but FormValue is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs <module evaluation>\",\n    \"FormValue\",\n);\nexport const InputField = registerClientReference(\n    function() { throw new Error(\"Attempted to call InputField() from the server but InputField is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs <module evaluation>\",\n    \"InputField\",\n);\nexport const InputRightButton = registerClientReference(\n    function() { throw new Error(\"Attempted to call InputRightButton() from the server but InputRightButton is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs <module evaluation>\",\n    \"InputRightButton\",\n);\nexport const NativeSelect = registerClientReference(\n    function() { throw new Error(\"Attempted to call NativeSelect() from the server but NativeSelect is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs <module evaluation>\",\n    \"NativeSelect\",\n);\nexport const NativeSelectField = registerClientReference(\n    function() { throw new Error(\"Attempted to call NativeSelectField() from the server but NativeSelectField is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs <module evaluation>\",\n    \"NativeSelectField\",\n);\nexport const NextButton = registerClientReference(\n    function() { throw new Error(\"Attempted to call NextButton() from the server but NextButton is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs <module evaluation>\",\n    \"NextButton\",\n);\nexport const NumberInputField = registerClientReference(\n    function() { throw new Error(\"Attempted to call NumberInputField() from the server but NumberInputField is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs <module evaluation>\",\n    \"NumberInputField\",\n);\nexport const ObjectField = registerClientReference(\n    function() { throw new Error(\"Attempted to call ObjectField() from the server but ObjectField is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs <module evaluation>\",\n    \"ObjectField\",\n);\nexport const PasswordInput = registerClientReference(\n    function() { throw new Error(\"Attempted to call PasswordInput() from the server but PasswordInput is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs <module evaluation>\",\n    \"PasswordInput\",\n);\nexport const PasswordInputField = registerClientReference(\n    function() { throw new Error(\"Attempted to call PasswordInputField() from the server but PasswordInputField is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs <module evaluation>\",\n    \"PasswordInputField\",\n);\nexport const PinField = registerClientReference(\n    function() { throw new Error(\"Attempted to call PinField() from the server but PinField is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs <module evaluation>\",\n    \"PinField\",\n);\nexport const PrevButton = registerClientReference(\n    function() { throw new Error(\"Attempted to call PrevButton() from the server but PrevButton is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs <module evaluation>\",\n    \"PrevButton\",\n);\nexport const RadioField = registerClientReference(\n    function() { throw new Error(\"Attempted to call RadioField() from the server but RadioField is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs <module evaluation>\",\n    \"RadioField\",\n);\nexport const RadioInput = registerClientReference(\n    function() { throw new Error(\"Attempted to call RadioInput() from the server but RadioInput is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs <module evaluation>\",\n    \"RadioInput\",\n);\nexport const Select = registerClientReference(\n    function() { throw new Error(\"Attempted to call Select() from the server but Select is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs <module evaluation>\",\n    \"Select\",\n);\nexport const SelectButton = registerClientReference(\n    function() { throw new Error(\"Attempted to call SelectButton() from the server but SelectButton is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs <module evaluation>\",\n    \"SelectButton\",\n);\nexport const SelectField = registerClientReference(\n    function() { throw new Error(\"Attempted to call SelectField() from the server but SelectField is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs <module evaluation>\",\n    \"SelectField\",\n);\nexport const SelectList = registerClientReference(\n    function() { throw new Error(\"Attempted to call SelectList() from the server but SelectList is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs <module evaluation>\",\n    \"SelectList\",\n);\nexport const SelectOption = registerClientReference(\n    function() { throw new Error(\"Attempted to call SelectOption() from the server but SelectOption is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs <module evaluation>\",\n    \"SelectOption\",\n);\nexport const StepForm = registerClientReference(\n    function() { throw new Error(\"Attempted to call StepForm() from the server but StepForm is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs <module evaluation>\",\n    \"StepForm\",\n);\nexport const StepFormProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call StepFormProvider() from the server but StepFormProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs <module evaluation>\",\n    \"StepFormProvider\",\n);\nexport const SubmitButton = registerClientReference(\n    function() { throw new Error(\"Attempted to call SubmitButton() from the server but SubmitButton is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs <module evaluation>\",\n    \"SubmitButton\",\n);\nexport const SwitchField = registerClientReference(\n    function() { throw new Error(\"Attempted to call SwitchField() from the server but SwitchField is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs <module evaluation>\",\n    \"SwitchField\",\n);\nexport const TextareaField = registerClientReference(\n    function() { throw new Error(\"Attempted to call TextareaField() from the server but TextareaField is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs <module evaluation>\",\n    \"TextareaField\",\n);\nexport const WatchField = registerClientReference(\n    function() { throw new Error(\"Attempted to call WatchField() from the server but WatchField is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs <module evaluation>\",\n    \"WatchField\",\n);\nexport const appendErrors = registerClientReference(\n    function() { throw new Error(\"Attempted to call appendErrors() from the server but appendErrors is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs <module evaluation>\",\n    \"appendErrors\",\n);\nexport const createField = registerClientReference(\n    function() { throw new Error(\"Attempted to call createField() from the server but createField is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs <module evaluation>\",\n    \"createField\",\n);\nexport const createForm = registerClientReference(\n    function() { throw new Error(\"Attempted to call createForm() from the server but createForm is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs <module evaluation>\",\n    \"createForm\",\n);\nexport const createStepForm = registerClientReference(\n    function() { throw new Error(\"Attempted to call createStepForm() from the server but createStepForm is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs <module evaluation>\",\n    \"createStepForm\",\n);\nexport const defaultFieldTypes = registerClientReference(\n    function() { throw new Error(\"Attempted to call defaultFieldTypes() from the server but defaultFieldTypes is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs <module evaluation>\",\n    \"defaultFieldTypes\",\n);\nexport const objectFieldResolver = registerClientReference(\n    function() { throw new Error(\"Attempted to call objectFieldResolver() from the server but objectFieldResolver is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs <module evaluation>\",\n    \"objectFieldResolver\",\n);\nexport const useArrayField = registerClientReference(\n    function() { throw new Error(\"Attempted to call useArrayField() from the server but useArrayField is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs <module evaluation>\",\n    \"useArrayField\",\n);\nexport const useArrayFieldAddButton = registerClientReference(\n    function() { throw new Error(\"Attempted to call useArrayFieldAddButton() from the server but useArrayFieldAddButton is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs <module evaluation>\",\n    \"useArrayFieldAddButton\",\n);\nexport const useArrayFieldContext = registerClientReference(\n    function() { throw new Error(\"Attempted to call useArrayFieldContext() from the server but useArrayFieldContext is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs <module evaluation>\",\n    \"useArrayFieldContext\",\n);\nexport const useArrayFieldRemoveButton = registerClientReference(\n    function() { throw new Error(\"Attempted to call useArrayFieldRemoveButton() from the server but useArrayFieldRemoveButton is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs <module evaluation>\",\n    \"useArrayFieldRemoveButton\",\n);\nexport const useArrayFieldRow = registerClientReference(\n    function() { throw new Error(\"Attempted to call useArrayFieldRow() from the server but useArrayFieldRow is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs <module evaluation>\",\n    \"useArrayFieldRow\",\n);\nexport const useArrayFieldRowContext = registerClientReference(\n    function() { throw new Error(\"Attempted to call useArrayFieldRowContext() from the server but useArrayFieldRowContext is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs <module evaluation>\",\n    \"useArrayFieldRowContext\",\n);\nexport const useBaseField = registerClientReference(\n    function() { throw new Error(\"Attempted to call useBaseField() from the server but useBaseField is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs <module evaluation>\",\n    \"useBaseField\",\n);\nexport const useController = registerClientReference(\n    function() { throw new Error(\"Attempted to call useController() from the server but useController is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs <module evaluation>\",\n    \"useController\",\n);\nexport const useField = registerClientReference(\n    function() { throw new Error(\"Attempted to call useField() from the server but useField is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs <module evaluation>\",\n    \"useField\",\n);\nexport const useFieldArray = registerClientReference(\n    function() { throw new Error(\"Attempted to call useFieldArray() from the server but useFieldArray is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs <module evaluation>\",\n    \"useFieldArray\",\n);\nexport const useForm = registerClientReference(\n    function() { throw new Error(\"Attempted to call useForm() from the server but useForm is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs <module evaluation>\",\n    \"useForm\",\n);\nexport const useFormContext = registerClientReference(\n    function() { throw new Error(\"Attempted to call useFormContext() from the server but useFormContext is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs <module evaluation>\",\n    \"useFormContext\",\n);\nexport const useFormState = registerClientReference(\n    function() { throw new Error(\"Attempted to call useFormState() from the server but useFormState is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs <module evaluation>\",\n    \"useFormState\",\n);\nexport const useFormStep = registerClientReference(\n    function() { throw new Error(\"Attempted to call useFormStep() from the server but useFormStep is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs <module evaluation>\",\n    \"useFormStep\",\n);\nexport const useStepForm = registerClientReference(\n    function() { throw new Error(\"Attempted to call useStepForm() from the server but useStepForm is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs <module evaluation>\",\n    \"useStepForm\",\n);\nexport const useStepFormContext = registerClientReference(\n    function() { throw new Error(\"Attempted to call useStepFormContext() from the server but useStepFormContext is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs <module evaluation>\",\n    \"useStepFormContext\",\n);\nexport const useWatch = registerClientReference(\n    function() { throw new Error(\"Attempted to call useWatch() from the server but useWatch is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs <module evaluation>\",\n    \"useWatch\",\n);\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2372, "column": 0}, "map": {"version":3,"sources":["file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/forms/dist/index.mjs/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const ArrayField = registerClientReference(\n    function() { throw new Error(\"Attempted to call ArrayField() from the server but ArrayField is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs\",\n    \"ArrayField\",\n);\nexport const ArrayFieldAddButton = registerClientReference(\n    function() { throw new Error(\"Attempted to call ArrayFieldAddButton() from the server but ArrayFieldAddButton is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs\",\n    \"ArrayFieldAddButton\",\n);\nexport const ArrayFieldContainer = registerClientReference(\n    function() { throw new Error(\"Attempted to call ArrayFieldContainer() from the server but ArrayFieldContainer is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs\",\n    \"ArrayFieldContainer\",\n);\nexport const ArrayFieldProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call ArrayFieldProvider() from the server but ArrayFieldProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs\",\n    \"ArrayFieldProvider\",\n);\nexport const ArrayFieldRemoveButton = registerClientReference(\n    function() { throw new Error(\"Attempted to call ArrayFieldRemoveButton() from the server but ArrayFieldRemoveButton is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs\",\n    \"ArrayFieldRemoveButton\",\n);\nexport const ArrayFieldRow = registerClientReference(\n    function() { throw new Error(\"Attempted to call ArrayFieldRow() from the server but ArrayFieldRow is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs\",\n    \"ArrayFieldRow\",\n);\nexport const ArrayFieldRowContainer = registerClientReference(\n    function() { throw new Error(\"Attempted to call ArrayFieldRowContainer() from the server but ArrayFieldRowContainer is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs\",\n    \"ArrayFieldRowContainer\",\n);\nexport const ArrayFieldRowFields = registerClientReference(\n    function() { throw new Error(\"Attempted to call ArrayFieldRowFields() from the server but ArrayFieldRowFields is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs\",\n    \"ArrayFieldRowFields\",\n);\nexport const ArrayFieldRowProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call ArrayFieldRowProvider() from the server but ArrayFieldRowProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs\",\n    \"ArrayFieldRowProvider\",\n);\nexport const ArrayFieldRows = registerClientReference(\n    function() { throw new Error(\"Attempted to call ArrayFieldRows() from the server but ArrayFieldRows is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs\",\n    \"ArrayFieldRows\",\n);\nexport const AutoFields = registerClientReference(\n    function() { throw new Error(\"Attempted to call AutoFields() from the server but AutoFields is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs\",\n    \"AutoFields\",\n);\nexport const BaseField = registerClientReference(\n    function() { throw new Error(\"Attempted to call BaseField() from the server but BaseField is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs\",\n    \"BaseField\",\n);\nexport const BaseForm = registerClientReference(\n    function() { throw new Error(\"Attempted to call BaseForm() from the server but BaseForm is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs\",\n    \"BaseForm\",\n);\nexport const CheckboxField = registerClientReference(\n    function() { throw new Error(\"Attempted to call CheckboxField() from the server but CheckboxField is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs\",\n    \"CheckboxField\",\n);\nexport const Controller = registerClientReference(\n    function() { throw new Error(\"Attempted to call Controller() from the server but Controller is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs\",\n    \"Controller\",\n);\nexport const DisplayField = registerClientReference(\n    function() { throw new Error(\"Attempted to call DisplayField() from the server but DisplayField is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs\",\n    \"DisplayField\",\n);\nexport const DisplayIf = registerClientReference(\n    function() { throw new Error(\"Attempted to call DisplayIf() from the server but DisplayIf is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs\",\n    \"DisplayIf\",\n);\nexport const Field = registerClientReference(\n    function() { throw new Error(\"Attempted to call Field() from the server but Field is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs\",\n    \"Field\",\n);\nexport const FieldsProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call FieldsProvider() from the server but FieldsProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs\",\n    \"FieldsProvider\",\n);\nexport const Form = registerClientReference(\n    function() { throw new Error(\"Attempted to call Form() from the server but Form is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs\",\n    \"Form\",\n);\nexport const FormLayout = registerClientReference(\n    function() { throw new Error(\"Attempted to call FormLayout() from the server but FormLayout is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs\",\n    \"FormLayout\",\n);\nexport const FormLegend = registerClientReference(\n    function() { throw new Error(\"Attempted to call FormLegend() from the server but FormLegend is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs\",\n    \"FormLegend\",\n);\nexport const FormProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call FormProvider() from the server but FormProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs\",\n    \"FormProvider\",\n);\nexport const FormStep = registerClientReference(\n    function() { throw new Error(\"Attempted to call FormStep() from the server but FormStep is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs\",\n    \"FormStep\",\n);\nexport const FormStepper = registerClientReference(\n    function() { throw new Error(\"Attempted to call FormStepper() from the server but FormStepper is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs\",\n    \"FormStepper\",\n);\nexport const FormValue = registerClientReference(\n    function() { throw new Error(\"Attempted to call FormValue() from the server but FormValue is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs\",\n    \"FormValue\",\n);\nexport const InputField = registerClientReference(\n    function() { throw new Error(\"Attempted to call InputField() from the server but InputField is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs\",\n    \"InputField\",\n);\nexport const InputRightButton = registerClientReference(\n    function() { throw new Error(\"Attempted to call InputRightButton() from the server but InputRightButton is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs\",\n    \"InputRightButton\",\n);\nexport const NativeSelect = registerClientReference(\n    function() { throw new Error(\"Attempted to call NativeSelect() from the server but NativeSelect is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs\",\n    \"NativeSelect\",\n);\nexport const NativeSelectField = registerClientReference(\n    function() { throw new Error(\"Attempted to call NativeSelectField() from the server but NativeSelectField is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs\",\n    \"NativeSelectField\",\n);\nexport const NextButton = registerClientReference(\n    function() { throw new Error(\"Attempted to call NextButton() from the server but NextButton is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs\",\n    \"NextButton\",\n);\nexport const NumberInputField = registerClientReference(\n    function() { throw new Error(\"Attempted to call NumberInputField() from the server but NumberInputField is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs\",\n    \"NumberInputField\",\n);\nexport const ObjectField = registerClientReference(\n    function() { throw new Error(\"Attempted to call ObjectField() from the server but ObjectField is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs\",\n    \"ObjectField\",\n);\nexport const PasswordInput = registerClientReference(\n    function() { throw new Error(\"Attempted to call PasswordInput() from the server but PasswordInput is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs\",\n    \"PasswordInput\",\n);\nexport const PasswordInputField = registerClientReference(\n    function() { throw new Error(\"Attempted to call PasswordInputField() from the server but PasswordInputField is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs\",\n    \"PasswordInputField\",\n);\nexport const PinField = registerClientReference(\n    function() { throw new Error(\"Attempted to call PinField() from the server but PinField is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs\",\n    \"PinField\",\n);\nexport const PrevButton = registerClientReference(\n    function() { throw new Error(\"Attempted to call PrevButton() from the server but PrevButton is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs\",\n    \"PrevButton\",\n);\nexport const RadioField = registerClientReference(\n    function() { throw new Error(\"Attempted to call RadioField() from the server but RadioField is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs\",\n    \"RadioField\",\n);\nexport const RadioInput = registerClientReference(\n    function() { throw new Error(\"Attempted to call RadioInput() from the server but RadioInput is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs\",\n    \"RadioInput\",\n);\nexport const Select = registerClientReference(\n    function() { throw new Error(\"Attempted to call Select() from the server but Select is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs\",\n    \"Select\",\n);\nexport const SelectButton = registerClientReference(\n    function() { throw new Error(\"Attempted to call SelectButton() from the server but SelectButton is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs\",\n    \"SelectButton\",\n);\nexport const SelectField = registerClientReference(\n    function() { throw new Error(\"Attempted to call SelectField() from the server but SelectField is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs\",\n    \"SelectField\",\n);\nexport const SelectList = registerClientReference(\n    function() { throw new Error(\"Attempted to call SelectList() from the server but SelectList is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs\",\n    \"SelectList\",\n);\nexport const SelectOption = registerClientReference(\n    function() { throw new Error(\"Attempted to call SelectOption() from the server but SelectOption is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs\",\n    \"SelectOption\",\n);\nexport const StepForm = registerClientReference(\n    function() { throw new Error(\"Attempted to call StepForm() from the server but StepForm is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs\",\n    \"StepForm\",\n);\nexport const StepFormProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call StepFormProvider() from the server but StepFormProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs\",\n    \"StepFormProvider\",\n);\nexport const SubmitButton = registerClientReference(\n    function() { throw new Error(\"Attempted to call SubmitButton() from the server but SubmitButton is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs\",\n    \"SubmitButton\",\n);\nexport const SwitchField = registerClientReference(\n    function() { throw new Error(\"Attempted to call SwitchField() from the server but SwitchField is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs\",\n    \"SwitchField\",\n);\nexport const TextareaField = registerClientReference(\n    function() { throw new Error(\"Attempted to call TextareaField() from the server but TextareaField is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs\",\n    \"TextareaField\",\n);\nexport const WatchField = registerClientReference(\n    function() { throw new Error(\"Attempted to call WatchField() from the server but WatchField is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs\",\n    \"WatchField\",\n);\nexport const appendErrors = registerClientReference(\n    function() { throw new Error(\"Attempted to call appendErrors() from the server but appendErrors is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs\",\n    \"appendErrors\",\n);\nexport const createField = registerClientReference(\n    function() { throw new Error(\"Attempted to call createField() from the server but createField is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs\",\n    \"createField\",\n);\nexport const createForm = registerClientReference(\n    function() { throw new Error(\"Attempted to call createForm() from the server but createForm is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs\",\n    \"createForm\",\n);\nexport const createStepForm = registerClientReference(\n    function() { throw new Error(\"Attempted to call createStepForm() from the server but createStepForm is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs\",\n    \"createStepForm\",\n);\nexport const defaultFieldTypes = registerClientReference(\n    function() { throw new Error(\"Attempted to call defaultFieldTypes() from the server but defaultFieldTypes is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs\",\n    \"defaultFieldTypes\",\n);\nexport const objectFieldResolver = registerClientReference(\n    function() { throw new Error(\"Attempted to call objectFieldResolver() from the server but objectFieldResolver is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs\",\n    \"objectFieldResolver\",\n);\nexport const useArrayField = registerClientReference(\n    function() { throw new Error(\"Attempted to call useArrayField() from the server but useArrayField is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs\",\n    \"useArrayField\",\n);\nexport const useArrayFieldAddButton = registerClientReference(\n    function() { throw new Error(\"Attempted to call useArrayFieldAddButton() from the server but useArrayFieldAddButton is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs\",\n    \"useArrayFieldAddButton\",\n);\nexport const useArrayFieldContext = registerClientReference(\n    function() { throw new Error(\"Attempted to call useArrayFieldContext() from the server but useArrayFieldContext is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs\",\n    \"useArrayFieldContext\",\n);\nexport const useArrayFieldRemoveButton = registerClientReference(\n    function() { throw new Error(\"Attempted to call useArrayFieldRemoveButton() from the server but useArrayFieldRemoveButton is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs\",\n    \"useArrayFieldRemoveButton\",\n);\nexport const useArrayFieldRow = registerClientReference(\n    function() { throw new Error(\"Attempted to call useArrayFieldRow() from the server but useArrayFieldRow is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs\",\n    \"useArrayFieldRow\",\n);\nexport const useArrayFieldRowContext = registerClientReference(\n    function() { throw new Error(\"Attempted to call useArrayFieldRowContext() from the server but useArrayFieldRowContext is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs\",\n    \"useArrayFieldRowContext\",\n);\nexport const useBaseField = registerClientReference(\n    function() { throw new Error(\"Attempted to call useBaseField() from the server but useBaseField is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs\",\n    \"useBaseField\",\n);\nexport const useController = registerClientReference(\n    function() { throw new Error(\"Attempted to call useController() from the server but useController is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs\",\n    \"useController\",\n);\nexport const useField = registerClientReference(\n    function() { throw new Error(\"Attempted to call useField() from the server but useField is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs\",\n    \"useField\",\n);\nexport const useFieldArray = registerClientReference(\n    function() { throw new Error(\"Attempted to call useFieldArray() from the server but useFieldArray is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs\",\n    \"useFieldArray\",\n);\nexport const useForm = registerClientReference(\n    function() { throw new Error(\"Attempted to call useForm() from the server but useForm is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs\",\n    \"useForm\",\n);\nexport const useFormContext = registerClientReference(\n    function() { throw new Error(\"Attempted to call useFormContext() from the server but useFormContext is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs\",\n    \"useFormContext\",\n);\nexport const useFormState = registerClientReference(\n    function() { throw new Error(\"Attempted to call useFormState() from the server but useFormState is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs\",\n    \"useFormState\",\n);\nexport const useFormStep = registerClientReference(\n    function() { throw new Error(\"Attempted to call useFormStep() from the server but useFormStep is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs\",\n    \"useFormStep\",\n);\nexport const useStepForm = registerClientReference(\n    function() { throw new Error(\"Attempted to call useStepForm() from the server but useStepForm is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs\",\n    \"useStepForm\",\n);\nexport const useStepFormContext = registerClientReference(\n    function() { throw new Error(\"Attempted to call useStepFormContext() from the server but useStepFormContext is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs\",\n    \"useStepFormContext\",\n);\nexport const useWatch = registerClientReference(\n    function() { throw new Error(\"Attempted to call useWatch() from the server but useWatch is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@saas-ui/forms/dist/index.mjs\",\n    \"useWatch\",\n);\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2746, "column": 0}, "map": {"version":3,"sources":["file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/forms/src/form-context.tsx","file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/forms/src/display-field.tsx","file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/forms/src/field.tsx","file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/forms/src/fields-context.tsx","file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/forms/src/default-fields.tsx","file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/forms/src/number-input/number-input.tsx","file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/forms/src/password-input/password-input.tsx","file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/forms/src/input-right-button/input-right-button.tsx","file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/forms/src/radio/radio-input.tsx","file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/forms/src/utils.ts","file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/forms/src/select/select.tsx","file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/forms/src/select/select-context.tsx","file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/forms/src/select/native-select.tsx","file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/forms/src/create-field.tsx","file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/forms/src/base-field.tsx","file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/forms/src/fields.tsx","file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/forms/src/layout.tsx","file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/forms/src/array-field.tsx","file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/forms/src/use-array-field.tsx","file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/forms/src/object-field.tsx","file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/forms/src/submit-button.tsx","file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/forms/src/display-if.tsx","file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/forms/src/step-form.tsx","file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/forms/src/use-step-form.tsx","file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/forms/src/field-resolver.ts","file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/forms/src/watch-field.tsx","file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/forms/src/create-form.tsx","file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/forms/src/form.tsx","file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/forms/src/create-step-form.tsx","file:///home/joeagharib/My-Github/taskhive/client/node_modules/%40saas-ui/forms/src/index.ts"],"sourcesContent":["import * as React from 'react'\nimport {\n  FormProvider as HookFormProvider,\n  FormProviderProps as HookFormProviderProps,\n  useFormContext as useHookFormContext,\n  FieldValues,\n} from 'react-hook-form'\nimport { FieldResolver } from './field-resolver'\nimport type { BaseFieldProps } from './types'\n\nexport type FormContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TContext = any,\n  TSchema = any,\n> = {\n  fieldResolver?: FieldResolver\n  schema?: TSchema\n  fields?: {\n    [key: string]: unknown\n  }\n}\n\nexport type FormProviderProps<\n  TFieldValues extends FieldValues = FieldValues,\n  TContext = any,\n  TSchema = any,\n> = HookFormProviderProps<TFieldValues, TContext> & {\n  fieldResolver?: FieldResolver\n  schema?: TSchema\n  fields?: {\n    [key: string]: unknown\n  }\n}\n\nconst FormContext = React.createContext<FormContextValue | null>(null)\n\nexport const useFormContext = <\n  TFieldValues extends FieldValues = FieldValues,\n  TContext = any,\n  TSchema = any,\n>() => {\n  const context = React.useContext(FormContext)\n  const hookContext = useHookFormContext<TFieldValues, TContext>()\n\n  return {\n    ...hookContext,\n    ...context,\n  }\n}\n\nexport const useFieldProps = <TFieldValues extends FieldValues = FieldValues>(\n  name: string\n): BaseFieldProps<TFieldValues> | undefined => {\n  const parsedName = name?.replace(/\\.[0-9]/g, '.$')\n  const context = useFormContext()\n  return (context?.fields?.[parsedName] as any) || {}\n}\n\nexport type UseFormReturn<\n  TFieldValues extends FieldValues = FieldValues,\n  TContext = any,\n  TSchema = any,\n> = ReturnType<typeof useFormContext<TFieldValues, TContext, TSchema>>\n\nexport const FormProvider = <\n  TFieldValues extends FieldValues = FieldValues,\n  TContext = any,\n  TSchema = any,\n>(\n  props: FormProviderProps<TFieldValues, TContext, TSchema>\n) => {\n  const { children, fieldResolver, schema, fields, ...rest } = props\n  return (\n    <HookFormProvider {...rest}>\n      <FormContext.Provider value={{ fieldResolver, schema, fields }}>\n        {children}\n      </FormContext.Provider>\n    </HookFormProvider>\n  )\n}\n","import * as React from 'react'\nimport { useFormContext } from './form-context'\nimport {\n  Text,\n  FormControl,\n  FormControlProps,\n  FormLabel,\n} from '@chakra-ui/react'\n\nimport { FieldProps } from './types'\n\nexport interface DisplayFieldProps\n  extends Omit<FormControlProps, 'onChange'>,\n    Omit<FieldProps, 'type' | 'label' | 'onChange'> {}\n\n/**\n * Display a field value.\n *\n * @see Docs https://saas-ui.dev/\n */\nexport const DisplayField: React.FC<DisplayFieldProps> = ({\n  name,\n  label,\n  placeholder,\n  ...props\n}) => {\n  return (\n    <FormControl {...props}>\n      {label ? <FormLabel htmlFor={name}>{label}</FormLabel> : null}\n      <Text fontSize=\"md\">\n        <FormValue name={name} />\n      </Text>\n    </FormControl>\n  )\n}\n\nDisplayField.displayName = 'DisplayField'\n\nexport const FormValue: React.FC<{ name: string }> = ({ name }) => {\n  const { getValues } = useFormContext()\n  return getValues(name) || null\n}\n\nFormValue.displayName = 'FormValue'\n","import * as React from 'react'\nimport { RegisterOptions, FieldValues } from 'react-hook-form'\n\nimport { FocusableElement } from '@chakra-ui/utils'\nimport { useField } from './fields-context'\nimport { FieldProps } from './types'\nimport { useFieldProps } from './form-context'\nimport { InputField } from './default-fields'\n\nexport interface Option {\n  value: string\n  label?: string\n  [key: string]: unknown\n}\n\nexport type FieldRules = Pick<\n  RegisterOptions,\n  'required' | 'min' | 'max' | 'maxLength' | 'minLength' | 'pattern'\n>\n\nconst defaultInputType = 'text'\n\n/**\n * Form field component.\n * \n * Build-in types:\n * text, number, password, textarea, select, native-select, checkbox, radio, switch, pin\n *\n * Will default to a text field if there is no matching type.\n\n * @see Docs https://saas-ui.dev/docs/components/forms/field\n */\nexport const Field = React.forwardRef(\n  <TFieldValues extends FieldValues = FieldValues>(\n    props: FieldProps<TFieldValues>,\n    ref: React.ForwardedRef<FocusableElement>\n  ) => {\n    const { type = defaultInputType, name } = props\n    const overrides = useFieldProps(name)\n    const InputComponent = useField(overrides?.type || type, InputField)\n\n    return <InputComponent ref={ref} {...props} {...overrides} />\n  }\n) as (<TFieldValues extends FieldValues>(\n  props: FieldProps<TFieldValues> & {\n    ref?: React.ForwardedRef<FocusableElement>\n  }\n) => React.ReactElement) & {\n  displayName?: string\n}\n","import React from 'react'\nimport { defaultFieldTypes, InputField } from './default-fields'\nimport type { GetBaseField } from './types'\n\nexport interface FieldsContextValue {\n  fields: Record<string, React.FC<any>>\n  getBaseField?: GetBaseField<any>\n}\n\nconst FieldsContext = React.createContext<FieldsContextValue | null>(null)\n\nexport const FieldsProvider: React.FC<{\n  value: FieldsContextValue\n  children: React.ReactNode\n}> = (props) => {\n  return (\n    <FieldsContext.Provider value={props.value}>\n      {props.children}\n    </FieldsContext.Provider>\n  )\n}\n\nexport const useFieldsContext = () => {\n  return React.useContext(FieldsContext)\n}\n\nexport const useField = (\n  type: string,\n  fallback: React.FC<any>\n): React.FC<any> => {\n  const context = React.useContext(FieldsContext)\n  return context?.fields?.[type] || fallback\n}\n","import * as React from 'react'\n\nimport {\n  forwardRef,\n  Input,\n  Textarea,\n  Checkbox,\n  Switch,\n  InputGroup,\n  InputProps,\n  TextareaProps,\n  SwitchProps,\n  CheckboxProps,\n  PinInputField,\n  HStack,\n  PinInput,\n  UsePinInputProps,\n  SystemProps,\n} from '@chakra-ui/react'\n\nimport { NumberInput, NumberInputProps } from './number-input'\nimport { PasswordInput, PasswordInputProps } from './password-input'\nimport { RadioInput, RadioInputProps } from './radio'\n\nimport {\n  Select,\n  SelectButton,\n  SelectList,\n  SelectProps,\n  NativeSelect,\n  NativeSelectProps,\n  SelectButtonProps,\n  SelectListProps,\n} from './select'\n\nimport { createField } from './create-field'\n\nexport interface InputFieldProps extends InputProps {\n  type?: string\n  leftAddon?: React.ReactNode\n  rightAddon?: React.ReactNode\n}\n\nexport const InputField = createField<InputFieldProps>(\n  forwardRef(({ type = 'text', leftAddon, rightAddon, size, ...rest }, ref) => {\n    const input = <Input type={type} size={size} {...rest} ref={ref} />\n    if (leftAddon || rightAddon) {\n      return (\n        <InputGroup size={size}>\n          {leftAddon}\n          {input}\n          {rightAddon}\n        </InputGroup>\n      )\n    }\n    return input\n  })\n)\n\nexport interface NumberInputFieldProps extends NumberInputProps {\n  type: 'number'\n}\n\nexport const NumberInputField = createField<NumberInputFieldProps>(\n  NumberInput,\n  {\n    isControlled: true,\n  }\n)\n\nexport const PasswordInputField = createField<PasswordInputProps>(\n  forwardRef((props, ref) => <PasswordInput ref={ref} {...props} />)\n)\n\nexport interface TextareaFieldProps extends TextareaProps {}\n\nexport const TextareaField = createField<TextareaFieldProps>(Textarea)\n\nexport interface SwitchFieldProps extends SwitchProps {}\n\nexport const SwitchField = createField<SwitchFieldProps>(\n  forwardRef(({ type, value, ...rest }, ref) => {\n    return <Switch isChecked={!!value} {...rest} ref={ref} />\n  }),\n  {\n    isControlled: true,\n  }\n)\n\nexport interface SelectFieldProps extends SelectProps<boolean> {\n  buttonProps?: SelectButtonProps\n  listProps?: SelectListProps\n}\n\nexport const SelectField = createField<SelectFieldProps>(\n  forwardRef((props, ref) => {\n    const { buttonProps, listProps, ...rest } = props\n\n    return (\n      <Select ref={ref} {...rest}>\n        <SelectButton {...buttonProps} />\n        <SelectList {...listProps} />\n      </Select>\n    )\n  }),\n  {\n    isControlled: true,\n  }\n)\n\nexport type CheckboxFieldProps = CheckboxProps\n\nexport const CheckboxField = createField<CheckboxFieldProps>(\n  forwardRef(({ label, type, ...props }, ref) => {\n    return (\n      <Checkbox ref={ref} {...props}>\n        {label}\n      </Checkbox>\n    )\n  }),\n  {\n    hideLabel: true,\n  }\n)\n\nexport type RadioFieldProps = RadioInputProps\n\nexport const RadioField = createField<RadioFieldProps>(RadioInput, {\n  isControlled: true,\n})\n\nexport type NativeSelectFieldProps = NativeSelectProps\n\nexport const NativeSelectField = createField<NativeSelectFieldProps>(\n  NativeSelect,\n  {\n    isControlled: true,\n  }\n)\n\nexport interface PinFieldProps extends Omit<UsePinInputProps, 'type'> {\n  pinLength?: number\n  pinType?: 'alphanumeric' | 'number'\n  spacing?: SystemProps['margin']\n}\n\nexport const PinField = createField<PinFieldProps>(\n  forwardRef((props, ref) => {\n    const { pinLength = 4, pinType, spacing, ...inputProps } = props\n\n    const inputs: React.ReactNode[] = []\n    for (let i = 0; i < pinLength; i++) {\n      inputs.push(<PinInputField key={i} ref={ref} />)\n    }\n\n    return (\n      <HStack spacing={spacing}>\n        <PinInput {...inputProps} type={pinType}>\n          {inputs}\n        </PinInput>\n      </HStack>\n    )\n  }),\n  {\n    isControlled: true,\n  }\n)\n\nexport const defaultFieldTypes = {\n  text: InputField,\n  email: InputField,\n  url: InputField,\n  phone: InputField,\n  time: InputField,\n  number: NumberInputField,\n  password: PasswordInputField,\n  textarea: TextareaField,\n  switch: SwitchField,\n  select: SelectField,\n  checkbox: CheckboxField,\n  radio: RadioField,\n  pin: PinField,\n  'native-select': NativeSelectField,\n}\n\nexport type DefaultFields = typeof defaultFieldTypes\n","import * as React from 'react'\n\nimport {\n  forwardRef,\n  NumberInput as ChakraNumberInput,\n  NumberInputField,\n  NumberInputStepper,\n  NumberIncrementStepper,\n  NumberDecrementStepper,\n  NumberInputProps as ChakraNumberInputProps,\n  NumberInputFieldProps,\n  InputGroup,\n  InputLeftAddon,\n  InputRightAddon,\n  InputLeftElement,\n  InputRightElement,\n} from '@chakra-ui/react'\n\nimport { ChevronDownIcon, ChevronUpIcon } from '@saas-ui/core'\n\ninterface NumberInputOptions {\n  /**\n   * Hide the stepper. This will be true when `rightAddon` is provided.\n   */\n  hideStepper?: boolean\n  /**\n   * Render a custom increment icon.\n   */\n  incrementIcon?: React.ReactNode\n  /**\n   * Render a custom decrement icon.\n   */\n  decrementIcon?: React.ReactNode\n  /**\n   * The placeholder text when no value is selected.\n   */\n  placeholder?: string\n  /**\n   * Props to pass to the NumberInputField component.\n   */\n  fieldProps?: NumberInputFieldProps\n  /**\n   * Either `InputLeftAddon` or `InputLeftElement`\n   */\n  leftAddon?: React.ReactNode\n  /**\n   * Either `InputRightAddon` or `InputRightElement`\n   */\n  rightAddon?: React.ReactNode\n}\n\nconst Input = forwardRef<NumberInputFieldProps, 'input'>((props, ref) => (\n  <NumberInputField ref={ref} {...props} />\n))\nInput.displayName = 'NumberInputField'\nInput.id = 'Input'\n\nexport interface NumberInputProps\n  extends ChakraNumberInputProps,\n    NumberInputOptions {}\n\nexport const NumberInput = forwardRef<NumberInputProps, 'div'>((props, ref) => {\n  const {\n    hideStepper = false,\n    incrementIcon = <ChevronUpIcon />,\n    decrementIcon = <ChevronDownIcon />,\n    leftAddon,\n    rightAddon,\n    placeholder,\n    fieldProps: _fieldProps,\n    ...rest\n  } = props\n\n  const fieldProps = { placeholder, ..._fieldProps }\n\n  return (\n    <ChakraNumberInput {...rest} ref={ref}>\n      <InputGroup>\n        {leftAddon}\n        <Input {...fieldProps} />\n        {rightAddon}\n      </InputGroup>\n      {!hideStepper && !rightAddon ? (\n        <NumberInputStepper>\n          <NumberIncrementStepper children={incrementIcon} />\n          <NumberDecrementStepper children={decrementIcon} />\n        </NumberInputStepper>\n      ) : null}\n    </ChakraNumberInput>\n  )\n})\n\nNumberInput.displayName = 'NumberInput'\n","import React, { useState } from 'react'\n\nimport { forwardRef, InputGroup, Input, InputProps } from '@chakra-ui/react'\n\nimport { ViewIcon, ViewOffIcon } from '@saas-ui/core/icons'\n\nimport { InputRightButton } from '../input-right-button'\n\ninterface PasswordOptions {\n  viewIcon?: React.ReactNode\n  viewOffIcon?: React.ReactNode\n  leftAddon?: React.ReactNode\n}\n\nexport interface PasswordInputProps extends InputProps, PasswordOptions {}\n\nexport const PasswordInput = forwardRef<PasswordInputProps, 'div'>(\n  (props, ref) => {\n    const {\n      viewIcon,\n      viewOffIcon,\n      autoComplete,\n      w,\n      width,\n      size,\n      variant,\n      leftAddon,\n      ...inputProps\n    } = props\n    const [show, setShow] = useState(false)\n    const handleClick = () => setShow(!show)\n\n    const label = show ? 'Hide password' : 'Show password'\n\n    let icon\n    if (show) {\n      icon = viewIcon || <ViewIcon />\n    } else {\n      icon = viewOffIcon || <ViewOffIcon />\n    }\n\n    const groupProps = {\n      width: w || width,\n      size,\n      variant,\n    }\n\n    return (\n      <InputGroup {...groupProps}>\n        {leftAddon}\n        <Input\n          {...inputProps}\n          ref={ref}\n          type={show ? 'text' : 'password'}\n          autoComplete={show ? 'off' : autoComplete}\n        />\n        <InputRightButton\n          onClick={handleClick}\n          aria-label={label}\n          variant=\"ghost\"\n        >\n          {icon}\n        </InputRightButton>\n      </InputGroup>\n    )\n  }\n)\n\nPasswordInput.displayName = 'PasswordInput'\n","import * as React from 'react'\n\nimport {\n  Button,\n  ButtonProps,\n  forwardRef,\n  InputRightElement,\n} from '@chakra-ui/react'\n\nexport type InputRightButtonProps = ButtonProps\n\nexport const InputRightButton = forwardRef<InputRightButtonProps, 'div'>(\n  (props, ref) => {\n    return (\n      <InputRightElement w=\"auto\" px=\"1\" py=\"1\" alignItems=\"stretch\">\n        <Button ref={ref} height=\"auto\" {...props} />\n      </InputRightElement>\n    )\n  }\n)\n\nInputRightButton.id = 'InputRightElement'\n\nInputRightButton.displayName = 'InputRightButton'\n","import * as React from 'react'\n\nimport {\n  forwardRef,\n  Stack,\n  RadioGroup,\n  RadioGroupProps,\n  Radio,\n  RadioProps,\n  SystemProps,\n  StackDirection,\n} from '@chakra-ui/react'\nimport { FieldOptions, FieldOption } from '../types'\nimport { mapOptions } from '../utils'\n\nexport interface RadioOption\n  extends Omit<RadioProps, 'value' | 'label'>,\n    FieldOption {}\n\nexport type RadioOptions = FieldOptions<RadioOption>\n\ninterface RadioInputOptions {\n  options: RadioOptions\n  spacing?: SystemProps['margin']\n  direction?: StackDirection\n}\n\nexport interface RadioInputProps\n  extends Omit<RadioGroupProps, 'children'>,\n    RadioInputOptions {}\n\nexport const RadioInput = forwardRef<RadioInputProps, 'div'>(\n  ({ options: optionsProp, spacing, direction, ...props }, ref) => {\n    const { onBlur, onChange, ...groupProps } = props\n\n    const options = mapOptions(optionsProp)\n\n    return (\n      <RadioGroup onChange={onChange} {...groupProps}>\n        <Stack spacing={spacing} direction={direction}>\n          {options.map(({ value, label, ...radioProps }, i) => {\n            return (\n              <Radio\n                key={i}\n                onBlur={onBlur}\n                value={value}\n                ref={ref}\n                {...radioProps}\n              >\n                {label || value}\n              </Radio>\n            )\n          })}\n        </Stack>\n      </RadioGroup>\n    )\n  }\n)\n\nRadioInput.displayName = 'RadioInput'\n","import * as React from 'react'\nimport { FieldOption, FieldOptions } from './types'\n\nexport const mapNestedFields = (name: string, children: React.ReactNode) => {\n  return React.Children.map(children, (child) => {\n    if (React.isValidElement(child) && child.props.name) {\n      let childName = child.props.name\n      if (childName.includes('.')) {\n        childName = childName.replace(/^.*\\.(.*)/, '$1')\n      } else if (childName.includes('.$')) {\n        childName = childName.replace(/^.*\\.\\$(.*)/, '$1')\n      }\n\n      return React.cloneElement(child, {\n        ...child.props,\n        name: `${name}.${childName}`,\n      })\n    }\n    return child\n  })\n}\n\nexport const mapOptions = <TOption extends FieldOption = FieldOption>(\n  options: FieldOptions<TOption>\n) => {\n  return options.map((option) => {\n    if (typeof option === 'string') {\n      return {\n        label: option,\n        value: option,\n      }\n    }\n    return option\n  })\n}\n","import * as React from 'react'\n\nimport {\n  chakra,\n  forwardRef,\n  Menu,\n  MenuProps,\n  MenuList,\n  MenuListProps,\n  MenuItemOption,\n  MenuOptionGroup,\n  Button,\n  ButtonProps,\n  omitThemingProps,\n  useMultiStyleConfig,\n  MenuItemOptionProps,\n  useFormControlContext,\n  ThemingProps,\n  useMenuButton,\n} from '@chakra-ui/react'\nimport { cx, dataAttr } from '@chakra-ui/utils'\nimport { ChevronDownIcon } from '@saas-ui/core'\n\nimport { FieldOption } from '../types'\n\nimport {\n  SelectOptions,\n  SelectProvider,\n  SelectStylesProvider,\n  useSelect,\n  useSelectContext,\n  useSelectStyles,\n} from './select-context'\n\nexport interface SelectOption\n  extends Omit<MenuItemOptionProps, 'value'>,\n    FieldOption {}\n\nexport interface SelectProps<\n  Multiple extends boolean = false,\n  Value = Multiple extends true ? string[] : string,\n> extends Omit<MenuProps, 'children' | 'variant' | 'size'>,\n    ThemingProps<'SuiSelect'>,\n    SelectOptions<Multiple, Value> {\n  children: React.ReactNode\n}\n\nexport interface SelectButtonProps\n  extends Omit<ButtonProps, 'size' | 'variant'> {}\n\n/**\n * Button that opens the select menu and displays the selected value.\n *\n * @see https://saas-ui.dev/docs/components/forms/select\n */\nexport const SelectButton = forwardRef<SelectButtonProps, 'button'>(\n  (props, ref) => {\n    const {\n      displayValue,\n      renderValue,\n      placeholder,\n      isDisabled: isSelectDisabled,\n    } = useSelectContext()\n\n    const context = useFormControlContext()\n\n    const styles = useSelectStyles()\n\n    const {\n      isInvalid,\n      isReadOnly,\n      isDisabled,\n      isFocused,\n      isRequired,\n      id,\n      onBlur,\n      onFocus,\n    } = context || {}\n\n    const { rightIcon = <ChevronDownIcon />, ...rest } = props\n\n    /* @ts-ignore */\n    const focusStyles = styles.field?._focusVisible\n    /* @ts-ignore */\n    const readOnlyStyles = styles.field?._readOnly\n    /* @ts-ignore */\n    const invalid = styles.field?._invalid\n\n    const height = styles.field?.h || styles.field?.height\n\n    const buttonStyles: any = {\n      fontWeight: 'normal',\n      textAlign: 'left',\n      color: 'inherit',\n      _active: {\n        bg: 'transparent',\n      },\n      minH: height,\n      _focus: focusStyles,\n      _expanded: focusStyles,\n      _readOnly: readOnlyStyles,\n      _invalid: invalid,\n      minW: 0,\n      ...styles.field,\n      h: 'auto',\n      ...props.sx,\n    }\n\n    const buttonProps = useMenuButton(rest, ref)\n\n    // Using a Button, so we can simply use leftIcon and rightIcon\n    return (\n      <Button\n        {...buttonProps}\n        sx={buttonStyles}\n        {...rest}\n        onFocus={onFocus}\n        onBlur={onBlur}\n        isDisabled={isDisabled || isSelectDisabled}\n        data-invalid={dataAttr(isInvalid)}\n        data-read-only={dataAttr(isReadOnly)}\n        data-focus={dataAttr(isFocused)}\n        data-required={dataAttr(isRequired)}\n        rightIcon={rightIcon}\n      >\n        <chakra.span\n          __css={{\n            display: 'block',\n            pointerEvents: 'none',\n            flex: '1 1 auto',\n            minW: 0,\n            overflow: 'hidden',\n            textOverflow: 'ellipsis',\n          }}\n        >\n          {renderValue(displayValue) || placeholder}\n        </chakra.span>\n      </Button>\n    )\n  }\n)\n\nSelectButton.displayName = 'SelectButton'\n\n/**\n * Allow users to select a value from a list of options.\n *\n * @see https://saas-ui.dev/docs/components/forms/select\n */\nexport const Select = forwardRef((props, ref) => {\n  const { name, children, isDisabled, multiple, ...rest } = props\n\n  const styles = useMultiStyleConfig('SuiSelect', props)\n\n  const menuProps = omitThemingProps(rest)\n\n  const context = useSelect(props)\n\n  const { value, controlProps } = context\n\n  return (\n    <SelectProvider value={context}>\n      <SelectStylesProvider value={styles}>\n        <Menu {...menuProps} closeOnSelect={!multiple}>\n          <chakra.div className={cx('sui-select')}>\n            {children}\n            <chakra.input\n              {...controlProps}\n              ref={ref}\n              name={name}\n              type=\"hidden\"\n              value={value || ''}\n              className=\"saas-select__input\"\n            />\n          </chakra.div>\n        </Menu>\n      </SelectStylesProvider>\n    </SelectProvider>\n  )\n}) as (<Multiple extends boolean = false>(\n  props: SelectProps<Multiple> & {\n    ref?: React.ForwardedRef<HTMLFormElement>\n  }\n) => React.ReactElement) & {\n  displayName?: string\n}\n\nexport interface SelectListProps extends MenuListProps {}\n\n/**\n * The list of options to choose from.\n *\n * @see https://saas-ui.dev/docs/components/forms/select\n */\nexport const SelectList: React.FC<SelectListProps> = (props) => {\n  const { defaultValue, value, options, multiple, onChange } =\n    useSelectContext()\n\n  return (\n    <MenuList maxH=\"100vh\" overflowY=\"auto\" {...props}>\n      <MenuOptionGroup\n        defaultValue={(defaultValue || value) as string | string[] | undefined}\n        value={value}\n        onChange={onChange}\n        type={multiple ? 'checkbox' : 'radio'}\n      >\n        {options\n          ? options.map(({ value, label, ...rest }, i) => (\n              <SelectOption key={i} value={value} {...rest}>\n                {label || value}\n              </SelectOption>\n            ))\n          : props.children}\n      </MenuOptionGroup>\n    </MenuList>\n  )\n}\n\nSelect.displayName = 'Select'\n\n/**\n * An option in a select list\n *\n * @see https://saas-ui.dev/docs/components/forms/select\n */\nexport const SelectOption = forwardRef<MenuItemOptionProps, 'button'>(\n  (props, ref) => {\n    return <MenuItemOption ref={ref} {...props} />\n  }\n)\nSelectOption.id = 'MenuItemOption'\nSelectOption.displayName = 'SelectOption'\n","import {\n  HTMLChakraProps,\n  createStylesContext,\n  useControllableState,\n  useFormControl,\n} from '@chakra-ui/react'\nimport { createContext } from '@chakra-ui/utils'\nimport React from 'react'\nimport { FieldOptions } from '../types'\nimport { mapOptions } from '../utils'\nimport { SelectOption } from './select'\n\nexport const [SelectStylesProvider, useSelectStyles] =\n  createStylesContext('SuiSelect')\n\nexport const [SelectProvider, useSelectContext] = createContext<\n  ReturnType<typeof useSelect>\n>({\n  strict: true,\n})\n\nexport interface SelectOptions<\n  Multiple extends boolean = false,\n  Value = Multiple extends true ? string[] : string,\n> {\n  /**\n   * The name of the input field in a native form.\n   */\n  name: string\n  /**\n   * The value of the select field.\n   */\n  value?: Value\n  /**\n   * The initial value of the select field.\n   */\n  defaultValue?: Value\n  /**\n   * The callback invoked when the value of the select field changes.\n   * @param value The value of the select field.\n   */\n  onChange?: (value: Value) => void\n  /**\n   * The placeholder text when there's no value.\n   */\n  placeholder?: string\n  /**\n   * If `true`, the select will be disabled.\n   */\n  isDisabled?: boolean\n  /**\n   * An array of options\n   * If you leave this empty the children prop will be rendered.\n   */\n  options?: FieldOptions<SelectOption>\n  /**\n   * Enable multiple select.\n   */\n  multiple?: Multiple\n  /**\n   * The function used to render the value of the select field.\n   * @param value The value of the select field.\n   * @returns The rendered value.\n   */\n  renderValue?: (value: Value) => React.ReactNode\n}\n\nexport const useSelect = (props: SelectOptions<boolean>) => {\n  const {\n    name,\n    value,\n    defaultValue,\n    onChange,\n    multiple,\n    placeholder,\n    options: optionsProp,\n    isDisabled,\n    renderValue = (value) =>\n      typeof value === 'string' ? value : value?.join(', '),\n  } = props\n  const [currentValue, setCurrentValue] = useControllableState({\n    value,\n    defaultValue,\n    onChange,\n  })\n\n  const controlProps = useFormControl({ name } as HTMLChakraProps<'input'>)\n\n  const options = React.useMemo(\n    () => optionsProp && mapOptions(optionsProp),\n    [optionsProp]\n  )\n\n  const handleChange = (value: string | string[]) => {\n    setCurrentValue(value)\n  }\n\n  const getDisplayValue = React.useCallback(\n    (value: string) => {\n      if (!options) {\n        return value\n      }\n\n      for (const option of options) {\n        if (option.value === value) {\n          return option.label || option.value\n        }\n      }\n\n      return value\n    },\n    [options]\n  )\n\n  const displayValue = React.useMemo(\n    () =>\n      currentValue\n        ? (Array.isArray(currentValue) ? currentValue : [currentValue]).map(\n            getDisplayValue\n          )\n        : [],\n    [currentValue, getDisplayValue]\n  )\n\n  return {\n    defaultValue,\n    value: currentValue,\n    displayValue,\n    renderValue,\n    onChange: handleChange,\n    options,\n    multiple,\n    controlProps,\n    placeholder,\n    isDisabled,\n  }\n}\n","import * as React from 'react'\n\nimport {\n  forwardRef,\n  Select as ChakraSelect,\n  SelectProps as ChakraSelectProps,\n} from '@chakra-ui/react'\n\ninterface Option {\n  value: string\n  label?: string\n}\n\ninterface NativeSelectOptions {\n  options?: Option[]\n}\n\nexport interface NativeSelectProps\n  extends ChakraSelectProps,\n    NativeSelectOptions {}\n\nexport const NativeSelect = forwardRef<NativeSelectProps, 'select'>(\n  ({ options, children, ...props }, ref) => {\n    return (\n      <ChakraSelect ref={ref} {...props}>\n        {children ||\n          options?.map(({ value, label }) => {\n            return (\n              <option key={value} value={value}>\n                {label || value}\n              </option>\n            )\n          })}\n      </ChakraSelect>\n    )\n  }\n)\n\nNativeSelect.displayName = 'NativeSelect'\n","import * as React from 'react'\nimport { Controller } from 'react-hook-form'\n\nimport { forwardRef, useMergeRefs } from '@chakra-ui/react'\nimport { callAllHandlers } from '@chakra-ui/utils'\n\nimport { splitProps } from '@saas-ui/core'\n\nimport { BaseFieldProps, FieldProps, GetBaseField } from './types'\nimport { BaseField } from './base-field'\nimport { useFormContext } from './form-context'\nimport { useFieldsContext } from './fields-context'\n\ninterface CreateFieldProps<ExtraFieldProps extends object = object> {\n  displayName: string\n  hideLabel?: boolean\n  getBaseField: GetBaseField<ExtraFieldProps>\n}\n\nconst _createField = (\n  InputComponent: React.FC<any>,\n  { displayName, hideLabel, getBaseField: getBaseFieldProp }: CreateFieldProps\n) => {\n  const Field = forwardRef<any, 'div'>((props, ref) => {\n    const { id, name, label, isRequired, rules } = props\n\n    const inputRules = {\n      required: isRequired,\n      ...rules,\n    }\n\n    const fieldContext = useFieldsContext()\n\n    const getBaseField = fieldContext?.getBaseField ?? getBaseFieldProp\n\n    const { extraProps, BaseField } = React.useMemo(\n      () => getBaseField(),\n      [getBaseField]\n    )\n\n    const [, inputProps] = splitProps(\n      props,\n      [\n        'children',\n        'name',\n        'label',\n        'isRequired',\n        'isDisabled',\n        'isInvalid',\n        'isReadOnly',\n        'help',\n        'hideLabel',\n      ].concat(extraProps)\n    )\n\n    return (\n      <BaseField hideLabel={hideLabel} {...props}>\n        <InputComponent\n          ref={ref}\n          id={id}\n          name={name}\n          label={hideLabel ? label : undefined} // Only pass down the label when it should be inline.\n          {...inputProps}\n          rules={inputRules}\n        />\n      </BaseField>\n    )\n  })\n\n  Field.displayName = displayName\n\n  return Field\n}\n\nconst withControlledInput = (InputComponent: React.FC<any>) => {\n  return forwardRef<FieldProps, typeof InputComponent>(\n    ({ name, rules, ...inputProps }, ref) => {\n      const { control } = useFormContext()\n\n      const onChange = inputProps.onChange as (...event: any[]) => void\n\n      return (\n        <Controller\n          name={name}\n          control={control}\n          rules={rules}\n          render={({ field: { ref: _ref, ...field } }) => (\n            <InputComponent\n              {...field}\n              {...inputProps}\n              onChange={callAllHandlers(onChange, field.onChange)}\n              onBlur={callAllHandlers(inputProps.onBlur, field.onBlur)}\n              ref={useMergeRefs(ref, _ref)}\n            />\n          )}\n        />\n      )\n    }\n  )\n}\n\nconst withUncontrolledInput = (InputComponent: React.FC<any>) => {\n  return forwardRef<FieldProps, typeof InputComponent>(\n    ({ name, rules, ...inputProps }, ref) => {\n      const { register } = useFormContext()\n\n      const { ref: _ref, ...field } = register(name, rules)\n\n      const onChange = inputProps.onChange as (...event: any[]) => void\n\n      return (\n        <InputComponent\n          {...field}\n          {...inputProps}\n          onChange={callAllHandlers(onChange, field.onChange)}\n          onBlur={callAllHandlers(inputProps.onBlur, field.onBlur)}\n          ref={useMergeRefs(ref, _ref)}\n        />\n      )\n    }\n  )\n}\n\nexport interface CreateFieldOptions<TProps extends object> {\n  isControlled?: boolean\n  hideLabel?: boolean\n  BaseField?: React.FC<any>\n}\n\n/**\n * Register a new field type\n * @param type The name for this field in kebab-case, eg `email` or `array-field`\n * @param component The React component\n * @param options\n * @param options.isControlled Set this to true if this is a controlled field.\n * @param options.hideLabel Hide the field label, for example for the checkbox field.\n */\nexport const createField = <TProps extends object>(\n  component: React.FC<TProps>,\n  options?: CreateFieldOptions<TProps>\n) => {\n  let InputComponent\n  if (options?.isControlled) {\n    InputComponent = withControlledInput(component)\n  } else {\n    InputComponent = withUncontrolledInput(component)\n  }\n\n  const Field = _createField(InputComponent, {\n    displayName: `${component.displayName ?? 'Custom'}Field`,\n    hideLabel: options?.hideLabel,\n    getBaseField: () => ({\n      extraProps: [],\n      BaseField,\n    }),\n  }) as React.FC<Omit<BaseFieldProps, keyof TProps> & TProps>\n\n  return Field\n}\n","import * as React from 'react'\nimport { FormState, get } from 'react-hook-form'\n\nimport {\n  Box,\n  FormControl,\n  FormLabel,\n  FormHelperText,\n  FormErrorMessage,\n  useBreakpointValue,\n} from '@chakra-ui/react'\n\nimport { splitProps } from '@saas-ui/core'\n\nimport { useFormContext } from './form-context'\n\nimport type { BaseFieldProps } from './types'\n\nconst getError = (name: string, formState: FormState<{ [x: string]: any }>) => {\n  return get(formState.errors, name)\n}\n\nconst isTouched = (\n  name: string,\n  formState: FormState<{ [x: string]: any }>\n) => {\n  return get(formState.touchedFields, name)\n}\n\nexport const useBaseField = (props: BaseFieldProps) => {\n  const [fieldProps] = splitProps(props, ['name', 'label', 'help', 'hideLabel'])\n\n  const [controlProps] = splitProps(props, [\n    'id',\n    'direction',\n    'isDisabled',\n    'isInvalid',\n    'isReadOnly',\n    'isRequired',\n  ])\n\n  const { formState } = useFormContext()\n\n  const error = getError(fieldProps.name, formState)\n  const touched = isTouched(fieldProps.name, formState)\n\n  return {\n    ...fieldProps,\n    controlProps,\n    error,\n    touched,\n  }\n}\n\n/**\n * The default BaseField component\n * Composes the Chakra UI FormControl component, with FormLabel, FormHelperText and FormErrorMessage.\n */\nexport const BaseField: React.FC<BaseFieldProps> = (props) => {\n  const { controlProps, label, help, hideLabel, error } = useBaseField(props)\n\n  const isInvalid = !!error || controlProps.isInvalid\n\n  const { direction, ...rest } = controlProps\n\n  return (\n    <FormControl\n      {...rest}\n      isInvalid={isInvalid}\n      variant={direction === 'row' ? 'horizontal' : undefined}\n    >\n      {label && !hideLabel ? <FormLabel>{label}</FormLabel> : null}\n      <Box>\n        {props.children}\n        {help && !error?.message ? (\n          <FormHelperText>{help}</FormHelperText>\n        ) : null}\n        {error?.message && (\n          <FormErrorMessage>{error?.message}</FormErrorMessage>\n        )}\n      </Box>\n    </FormControl>\n  )\n}\n\nBaseField.displayName = 'BaseField'\n","import * as React from 'react'\n\nimport { FormLayout } from './layout'\nimport { BaseFieldProps } from './types'\nimport { Field } from './field'\n\nimport { ArrayField } from './array-field'\nimport { ObjectField } from './object-field'\nimport { FieldResolver } from './field-resolver'\nimport { useFormContext } from './form-context'\n\nexport interface FieldsProps<TSchema = any> {\n  schema?: TSchema\n  fieldResolver?: FieldResolver\n  focusFirstField?: boolean\n}\n\nconst mapNestedFields = (resolver: FieldResolver, name: string) => {\n  return resolver\n    .getNestedFields(name)\n    ?.map(\n      (\n        { name, type, ...nestedFieldProps }: BaseFieldProps,\n        i\n      ): React.ReactNode => (\n        <Field\n          key={name || i}\n          name={name}\n          type={type as any}\n          {...nestedFieldProps}\n        />\n      )\n    )\n}\n\nexport const AutoFields: React.FC<FieldsProps> = ({\n  schema: schemaProp,\n  fieldResolver: fieldResolverProp,\n  focusFirstField,\n  ...props\n}) => {\n  const context = useFormContext()\n  const schema = schemaProp || context.schema\n  const fieldResolver = fieldResolverProp || context.fieldResolver\n  const resolver = React.useMemo(() => fieldResolver, [schema, fieldResolver])\n\n  const fields = React.useMemo(() => resolver?.getFields(), [resolver])\n\n  const form = useFormContext()\n\n  React.useEffect(() => {\n    if (focusFirstField && fields?.[0]?.name) {\n      form.setFocus(fields[0].name)\n    }\n  }, [schema, fieldResolver, focusFirstField])\n\n  if (!resolver) {\n    return null\n  }\n\n  return (\n    <FormLayout {...props}>\n      {fields?.map(\n        ({\n          name,\n          type,\n          defaultValue,\n          ...fieldProps\n        }: BaseFieldProps): React.ReactNode => {\n          if (type === 'array') {\n            return (\n              <ArrayField key={name} name={name} {...fieldProps}>\n                {mapNestedFields(resolver, name)}\n              </ArrayField>\n            )\n          } else if (type === 'object') {\n            return (\n              <ObjectField key={name} name={name} {...fieldProps}>\n                {mapNestedFields(resolver, name)}\n              </ObjectField>\n            )\n          }\n\n          return (\n            <Field\n              key={name}\n              name={name}\n              type={type as any}\n              defaultValue={defaultValue}\n              {...fieldProps}\n            />\n          )\n        }\n      )}\n    </FormLayout>\n  )\n}\n\nAutoFields.displayName = 'Fields'\n","import * as React from 'react'\n\nimport {\n  chakra,\n  omitThemingProps,\n  SimpleGrid,\n  SimpleGridProps,\n  ThemingProps,\n  useStyleConfig,\n  useTheme,\n} from '@chakra-ui/react'\nimport { cx } from '@chakra-ui/utils'\n\nexport interface FormLayoutProps\n  extends ThemingProps<'SuiFormLayout'>,\n    SimpleGridProps {}\n\ninterface FormLayoutItemProps {\n  children: React.ReactNode\n}\n\nconst FormLayoutItem: React.FC<FormLayoutItemProps> = ({ children }) => {\n  return <chakra.div>{children}</chakra.div>\n}\n\nFormLayoutItem.displayName = 'FormLayoutItem'\n\n/**\n * Create consistent field spacing and positioning.\n *\n * Renders form items in a `SimpleGrid`\n * @see https://chakra-ui.com/docs/layout/simple-grid\n *\n * @see https://saas-ui.dev/docs/components/forms/form\n */\nexport const FormLayout = ({ children, ...props }: FormLayoutProps) => {\n  const theme = useTheme()\n\n  const defaultProps = theme.components?.SuiFormLayout?.defaultProps ?? {\n    spacing: 4,\n  }\n\n  const styles = useStyleConfig('SuiFormLayout', props)\n\n  const gridProps = omitThemingProps({\n    ...defaultProps,\n    ...props,\n  })\n\n  return (\n    <SimpleGrid\n      {...gridProps}\n      className={cx('sui-form__layout', props.className)}\n      sx={{\n        ...styles,\n        ...props.sx,\n      }}\n    >\n      {children}\n    </SimpleGrid>\n  )\n}\n\nFormLayout.displayName = 'FormLayout'\n","import * as React from 'react'\n\nimport {\n  chakra,\n  ResponsiveValue,\n  forwardRef,\n  Button,\n  ButtonProps,\n} from '@chakra-ui/react'\nimport { PlusIcon, MinusIcon } from '@saas-ui/core/icons'\n\nimport { FormLayout, FormLayoutProps } from './layout'\nimport { BaseField } from './base-field'\nimport { BaseFieldProps } from './types'\n\nimport { mapNestedFields } from './utils'\n\nimport {\n  useArrayField,\n  useArrayFieldRow,\n  useArrayFieldContext,\n  ArrayFieldProvider,\n  ArrayFieldOptions,\n  ArrayFieldRowProvider,\n  useArrayFieldRowContext,\n  useArrayFieldRemoveButton,\n  useArrayFieldAddButton,\n  UseArrayFieldReturn,\n} from './use-array-field'\nimport { FieldPath, FieldValues } from 'react-hook-form'\nimport { isFunction, MaybeRenderProp } from '@chakra-ui/utils'\nimport { useFieldProps } from './form-context'\n\nexport interface ArrayFieldButtonProps extends ButtonProps {}\n\ninterface ArrayField {\n  id: string\n  [key: string]: unknown\n}\n\ninterface ArrayFieldRowProps extends FormLayoutProps {\n  /**\n   * Amount of field columns\n   */\n  columns?: ResponsiveValue<number>\n  /**\n   * Spacing between fields\n   */\n  spacing?: ResponsiveValue<string | number>\n  /**\n   * The array index\n   */\n  index: number\n  /**\n   * The fields\n   */\n  children: React.ReactNode\n}\n/**\n * Render prop component, to get access to the internal fields state. Must be a child of ArrayFieldContainer.\n *\n * @see Docs https://saas-ui.dev/docs/components/forms/array-field\n */\nexport const ArrayFieldRow: React.FC<ArrayFieldRowProps> = ({\n  children,\n  index,\n  ...rowFieldsProps\n}) => {\n  return (\n    <ArrayFieldRowContainer index={index}>\n      <ArrayFieldRowFields {...rowFieldsProps}>{children}</ArrayFieldRowFields>\n      <ArrayFieldRemoveButton />\n    </ArrayFieldRowContainer>\n  )\n}\n\nArrayFieldRow.displayName = 'ArrayFieldRow'\n\nexport interface ArrayFieldRowFieldsProps extends FormLayoutProps {\n  /**\n   * Amount of field columns\n   */\n  columns?: ResponsiveValue<number>\n  /**\n   * Spacing between fields\n   */\n  spacing?: ResponsiveValue<string | number>\n  /**\n   * The fields\n   */\n  children: React.ReactNode\n}\n/**\n * Add the name prefix to the fields and acts as a horizontal form layout by default.\n *\n * @see Docs https://saas-ui.dev/docs/components/forms/array-field\n */\nexport const ArrayFieldRowFields: React.FC<ArrayFieldRowFieldsProps> = ({\n  children,\n  ...layoutProps\n}) => {\n  const { name } = useArrayFieldRowContext()\n  return (\n    <FormLayout flex=\"1\" mr=\"2\" {...layoutProps}>\n      {mapNestedFields(name, children)}\n    </FormLayout>\n  )\n}\n\nArrayFieldRowFields.displayName = 'ArrayFieldRowFields'\n\n/**\n * The row container component providers row context.\n *\n * @see Docs https://saas-ui.dev/docs/components/forms/array-field\n */\nexport const ArrayFieldRowContainer: React.FC<ArrayFieldRowProps> = ({\n  children,\n  index,\n  ...rest\n}) => {\n  const context = useArrayFieldRow({ index })\n\n  const styles = {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'flex-end',\n    width: '100%',\n    mb: 4,\n  }\n\n  return (\n    <ArrayFieldRowProvider value={context}>\n      <chakra.div {...rest} __css={styles}>\n        {children}\n      </chakra.div>\n    </ArrayFieldRowProvider>\n  )\n}\n\nArrayFieldRowContainer.displayName = 'ArrayFieldRowContainer'\n\n/**\n * The default remove button.\n *\n * @see Docs https://saas-ui.dev/docs/components/forms/array-field\n */\nexport const ArrayFieldRemoveButton: React.FC<ArrayFieldButtonProps> = (\n  props\n) => {\n  return (\n    <Button aria-label=\"Remove row\" {...useArrayFieldRemoveButton()} {...props}>\n      {props.children || <MinusIcon />}\n    </Button>\n  )\n}\n\nArrayFieldRemoveButton.displayName = 'ArrayFieldRemoveButton'\n\n/**\n * The default add button.\n *\n * @see Docs https://saas-ui.dev/docs/components/forms/array-field\n */\nexport const ArrayFieldAddButton: React.FC<ArrayFieldButtonProps> = (props) => {\n  return (\n    <Button\n      aria-label=\"Add row\"\n      float=\"right\"\n      {...useArrayFieldAddButton()}\n      {...props}\n    >\n      {props.children || <PlusIcon />}\n    </Button>\n  )\n}\n\nArrayFieldAddButton.displayName = 'ArrayFieldAddButton'\n\nexport interface ArrayFieldProps<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,\n> extends ArrayFieldOptions<TFieldValues, TName>,\n    Omit<\n      BaseFieldProps<TFieldValues, TName>,\n      'name' | 'defaultValue' | 'children'\n    > {\n  children: MaybeRenderProp<ArrayField[]>\n}\n\n/**\n * The wrapper component that composes the default ArrayField functionality.\n *\n * @see Docs https://saas-ui.dev/docs/components/forms/array-field\n */\nexport const ArrayField = forwardRef(\n  (props: ArrayFieldProps, ref: React.ForwardedRef<UseArrayFieldReturn>) => {\n    const { children, ...containerProps } = props\n\n    const rowFn = isFunction(children)\n      ? children\n      : (fields: ArrayField[]) => (\n          <>\n            {fields.map(({ id }, index: number) => (\n              <ArrayFieldRow key={id} index={index}>\n                {children}\n              </ArrayFieldRow>\n            )) || null}\n          </>\n        )\n\n    return (\n      <ArrayFieldContainer ref={ref} {...containerProps}>\n        <ArrayFieldRows>{rowFn as any}</ArrayFieldRows>\n        <ArrayFieldAddButton />\n      </ArrayFieldContainer>\n    )\n  }\n) as ((\n  props: ArrayFieldProps & {\n    ref?: React.ForwardedRef<UseArrayFieldReturn>\n  }\n) => React.ReactElement) & {\n  displayName: string\n}\n\nArrayField.displayName = 'ArrayField'\n\nexport interface ArrayFieldRowsProps {\n  children: (fields: ArrayField[]) => React.ReactElement | null\n}\n\nexport const ArrayFieldRows = ({\n  children,\n}: ArrayFieldRowsProps): React.ReactElement | null => {\n  const { fields } = useArrayFieldContext()\n  return children(fields)\n}\n\nArrayFieldRows.displayName = 'ArrayFieldRows'\n\nexport interface ArrayFieldContainerProps\n  extends Omit<ArrayFieldProps, 'children'> {\n  children: React.ReactNode\n}\n\n/**\n * The container component provides context and state management.\n *\n * @see Docs https://saas-ui.dev/docs/components/forms/array-field\n */\nexport const ArrayFieldContainer = React.forwardRef(\n  (\n    {\n      name,\n      defaultValue,\n      keyName,\n      min,\n      max,\n      children,\n      ...fieldProps\n    }: ArrayFieldContainerProps,\n    ref: React.ForwardedRef<UseArrayFieldReturn>\n  ) => {\n    const overrides = useFieldProps(name)\n\n    const context = useArrayField({\n      name,\n      defaultValue,\n      keyName,\n      min: min || (overrides as any)?.min,\n      max: max || (overrides as any)?.max,\n    })\n\n    // This exposes the useArrayField api through the forwarded ref\n    React.useImperativeHandle(ref, () => context, [ref, context])\n\n    return (\n      <ArrayFieldProvider value={context}>\n        <BaseField name={name} {...fieldProps} {...overrides}>\n          {children}\n        </BaseField>\n      </ArrayFieldProvider>\n    )\n  }\n)\n\nArrayFieldContainer.displayName = 'ArrayFieldContainer'\n","import * as React from 'react'\nimport {\n  useFieldArray,\n  UseFieldArrayReturn,\n  FieldValues,\n  FieldPath,\n} from 'react-hook-form'\n\nimport { useFormContext } from './form-context'\n\nimport { createContext } from '@chakra-ui/utils'\n\nexport interface UseArrayFieldReturn extends UseFieldArrayReturn {\n  /**\n   * The array field name\n   */\n  name: string\n  /**\n   * The default value for new items\n   */\n  defaultValue: Record<string, any>\n  /**\n   * Min amount of items\n   */\n  min?: number\n  /**\n   * Max amount of items\n   */\n  max?: number\n}\n\nexport const [ArrayFieldProvider, useArrayFieldContext] =\n  createContext<UseArrayFieldReturn>({\n    name: 'ArrayFieldContext',\n  })\n\nexport interface UseArrayFieldRowReturn {\n  /**\n   * Name of the array field including the index, eg 'field.0'\n   */\n  name: string\n  /**\n   * The field index\n   */\n  index: number\n  /**\n   * Remove this array item\n   */\n  remove: () => void\n  /**\n   * True if this is the first item\n   */\n  isFirst: boolean\n  /**\n   * True if this is the last item\n   */\n  isLast: boolean\n}\n\nexport const [ArrayFieldRowProvider, useArrayFieldRowContext] =\n  createContext<UseArrayFieldRowReturn>({\n    name: 'ArrayFieldRowContext',\n  })\n\nexport interface ArrayFieldOptions<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,\n> {\n  /**\n   * The field name\n   */\n  name: TName\n  /**\n   * Default value for new values in the array\n   */\n  defaultValue?: Record<string, any>\n  /**\n   * Default key name for rows, change this if your data uses a different 'id' field\n   * @default \"id\"\n   */\n  keyName?: string\n  min?: number\n  max?: number\n}\n\nexport const useArrayField = ({\n  name,\n  defaultValue = {},\n  keyName,\n  min,\n  max,\n}: ArrayFieldOptions) => {\n  const { control } = useFormContext()\n\n  const context = useFieldArray({\n    control,\n    name,\n    keyName,\n  })\n  return {\n    ...context,\n    name,\n    defaultValue,\n    min,\n    max,\n  }\n}\n\nexport interface UseArrayFieldRowProps {\n  index: number\n}\n\nexport const useArrayFieldRow = ({ index }: UseArrayFieldRowProps) => {\n  const { clearErrors } = useFormContext()\n  const { name, remove, fields } = useArrayFieldContext()\n\n  React.useEffect(() => {\n    // reset errors, to make sure min/max errors reset correctly\n    clearErrors(name)\n  }, [])\n\n  return {\n    index,\n    isFirst: index === 0,\n    isLast: index === fields.length - 1,\n    name: `${name}.${index}`,\n    remove: React.useCallback(() => {\n      clearErrors(name)\n      remove(index)\n    }, [index]),\n  }\n}\n\nexport const useArrayFieldRemoveButton = () => {\n  const { isFirst, remove } = useArrayFieldRowContext()\n  const { min, fields } = useArrayFieldContext()\n\n  const isDisabled = isFirst && !!(min && fields.length <= min)\n\n  return {\n    onClick: () => remove(),\n    isDisabled,\n  }\n}\n\nexport const useArrayFieldAddButton = () => {\n  const { append, defaultValue, max, fields } = useArrayFieldContext()\n\n  const isDisabled = !!(max && fields.length >= max)\n\n  return {\n    onClick: () =>\n      append(defaultValue, {\n        shouldFocus: false,\n      }),\n    isDisabled,\n  }\n}\n","import * as React from 'react'\nimport {\n  FormControl,\n  FormLabel,\n  FormLabelProps,\n  ResponsiveValue,\n  useStyleConfig,\n} from '@chakra-ui/react'\n\nimport { FormLayout } from './layout'\nimport { BaseFieldProps } from './types'\n\nimport { mapNestedFields } from './utils'\nimport { FieldPath, FieldValues } from 'react-hook-form'\nimport { useFieldProps } from './form-context'\n\nexport interface ObjectFieldProps<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> extends BaseFieldProps {\n  name: TName\n  children: React.ReactNode\n  columns?: ResponsiveValue<number>\n  spacing?: ResponsiveValue<string | number>\n}\n\nexport const FormLegend = (props: FormLabelProps) => {\n  const styles = useStyleConfig('SuiFormLegend')\n  return <FormLabel as=\"legend\" sx={styles} {...props} />\n}\n/**\n * The object field component.\n *\n * @see Docs https://saas-ui.dev/docs/components/forms/object-field\n */\nexport const ObjectField: React.FC<ObjectFieldProps> = (props) => {\n  const {\n    name,\n    label,\n    hideLabel: hideLabelProp,\n    children,\n    columns: columnsProp,\n    spacing: spacingProp,\n    ...fieldProps\n  } = props\n\n  const { hideLabel, columns, spacing, ...overrides } = useFieldProps(\n    name\n  ) as Omit<ObjectFieldProps, 'name'>\n\n  return (\n    <FormControl name={name} as=\"fieldset\" {...fieldProps} {...overrides}>\n      <FormLegend display={hideLabelProp || hideLabel ? 'none' : 'block'}>\n        {label}\n      </FormLegend>\n      <FormLayout\n        columns={columnsProp || columns}\n        gridGap={spacingProp || spacing}\n      >\n        {mapNestedFields(name, children)}\n      </FormLayout>\n    </FormControl>\n  )\n}\n\nObjectField.displayName = 'ObjectField'\n","import * as React from 'react'\n\nimport { useFormContext } from 'react-hook-form'\n\nimport { Button, ButtonProps, forwardRef } from '@chakra-ui/react'\nimport { useFieldProps } from './form-context'\n\nexport interface SubmitButtonProps extends ButtonProps {\n  /**\n   * Disable the submit button if the form is untouched.\n   */\n  disableIfUntouched?: boolean\n  /**\n   * Disable the submit button if the form is invalid.\n   */\n  disableIfInvalid?: boolean\n}\n/**\n * A button with type submit and default color scheme primary and isLoading state when the form is submitting.\n *\n * @see Docs https://saas-ui.dev/docs/components/forms/form\n */\nexport const SubmitButton = forwardRef<SubmitButtonProps, 'button'>(\n  (props, ref) => {\n    const {\n      variant = 'primary',\n      children = 'Submit',\n      disableIfUntouched: disableIfUntouchedProp = false,\n      disableIfInvalid: disableIfInvalidProp = false,\n      isDisabled: isDisabledProp,\n      isLoading,\n      ...rest\n    } = props\n    const { formState } = useFormContext()\n\n    const field = useFieldProps('submit') as SubmitButtonProps\n\n    const {\n      disableIfUntouched: disableIfUntouchedOverride,\n      disableIfInvalid: disableIfInvalidOverride,\n      ...fieldProps\n    } = field\n\n    const disableIfUntouched =\n      disableIfUntouchedOverride ?? disableIfUntouchedProp\n    const disableIfInvalid = disableIfInvalidOverride ?? disableIfInvalidProp\n\n    const isDisabled =\n      (disableIfUntouched && !formState.isDirty) ||\n      (disableIfInvalid && !formState.isValid) ||\n      isDisabledProp\n\n    return (\n      <Button\n        ref={ref}\n        variant={variant}\n        type=\"submit\"\n        isLoading={formState.isSubmitting || isLoading}\n        isDisabled={isDisabled}\n        children={children}\n        {...rest}\n        {...fieldProps}\n      />\n    )\n  }\n)\n\nSubmitButton.displayName = 'SubmitButton'\n","import * as React from 'react'\nimport {\n  useWatch,\n  FieldValues,\n  UseFormReturn,\n  FieldPath,\n} from 'react-hook-form'\n\nimport { useFormContext } from './form-context'\n\nexport interface DisplayIfProps<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> {\n  children: React.ReactElement\n  name: TName\n  defaultValue?: unknown\n  isDisabled?: boolean\n  isExact?: boolean\n  condition?: (value: unknown, context: UseFormReturn<TFieldValues>) => boolean\n  onToggle?: (\n    conditionMatched: boolean,\n    context: UseFormReturn<TFieldValues>\n  ) => void\n}\n/**\n * Conditionally render parts of a form.\n *\n * @see Docs https://saas-ui.dev/docs/components/forms/form\n */\nexport const DisplayIf = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  children,\n  name,\n  defaultValue,\n  isDisabled,\n  isExact,\n  condition = (value) => !!value,\n  onToggle,\n}: DisplayIfProps<TFieldValues, TName>) => {\n  const initializedRef = React.useRef(false)\n  const matchesRef = React.useRef(false)\n\n  const value = useWatch<TFieldValues>({\n    name,\n    defaultValue: defaultValue as any,\n    disabled: isDisabled,\n    exact: isExact,\n  })\n  const context = useFormContext() as any\n\n  const matches = condition(value, context)\n\n  React.useEffect(() => {\n    if (!initializedRef.current) {\n      initializedRef.current = true\n      return\n    }\n    if (matchesRef.current === matches) return\n    matchesRef.current = matches\n    onToggle?.(matches, context)\n  }, [value])\n\n  return matches ? children : null\n}\n\nDisplayIf.displayName = 'DisplayIf'\n","import * as React from 'react'\n\nimport { FieldValues } from 'react-hook-form'\n\nimport {\n  chakra,\n  Button,\n  ButtonProps,\n  HTMLChakraProps,\n  ThemingProps,\n} from '@chakra-ui/react'\n\nimport { callAllHandlers, cx } from '@chakra-ui/utils'\n\nimport {\n  Steps,\n  StepsItem,\n  StepsItemProps,\n  StepsProps,\n  useStepperContext,\n} from '@saas-ui/core'\n\nimport { SubmitButton } from './submit-button'\n\nimport {\n  useFormStep,\n  UseStepFormProps,\n  FormStepSubmitHandler,\n} from './use-step-form'\n\nexport type StepsOptions<TSchema, TName extends string = string> = {\n  /**\n   * The step name\n   */\n  name: TName\n  /**\n   * Schema\n   */\n  schema?: TSchema\n}[]\n\nexport interface StepFormProps<\n  TSteps extends StepsOptions<any> = StepsOptions<any>,\n  TFieldValues extends FieldValues = FieldValues,\n  TContext extends object = object\n> extends UseStepFormProps<TSteps, TFieldValues, TContext> {}\n\nexport interface FormStepOptions<TName extends string = string> {\n  /**\n   * The step name\n   */\n  name: TName\n  /**\n   * Schema\n   */\n  schema?: any\n  /**\n   * Hook Form Resolver\n   */\n  resolver?: any\n}\n\nexport interface FormStepperProps extends StepsProps, ThemingProps<'Stepper'> {\n  render?: StepsItemProps['render']\n}\n\n/**\n * Renders a stepper that displays progress above the form.\n *\n * @see Docs https://saas-ui.dev/docs/components/forms/step-form\n */\nexport const FormStepper: React.FC<FormStepperProps> = (props) => {\n  const { activeIndex, setIndex } = useStepperContext()\n\n  const {\n    children,\n    orientation,\n    variant,\n    colorScheme,\n    size,\n    onChange: onChangeProp,\n    render,\n    ...rest\n  } = props\n\n  const elements = React.Children.map(children, (child) => {\n    if (\n      React.isValidElement<FormStepProps>(child) &&\n      child?.type === FormStep\n    ) {\n      const { isCompleted } = useFormStep(child.props) // Register this step\n      return (\n        <StepsItem\n          render={render}\n          name={child.props.name}\n          title={child.props.title}\n          isCompleted={isCompleted}\n          {...rest}\n        >\n          {child.props.children}\n        </StepsItem>\n      )\n    }\n    return child\n  })\n\n  const onChange = React.useCallback((i: number) => {\n    setIndex(i)\n    onChangeProp?.(i)\n  }, [])\n\n  return (\n    <Steps\n      orientation={orientation}\n      step={activeIndex}\n      variant={variant}\n      colorScheme={colorScheme}\n      size={size}\n      onChange={onChange}\n    >\n      {elements}\n    </Steps>\n  )\n}\n\nexport interface FormStepProps<TName extends string = string>\n  extends FormStepOptions<TName>,\n    Omit<HTMLChakraProps<'div'>, 'onSubmit'> {\n  onSubmit?: FormStepSubmitHandler\n}\n/**\n * The form step containing fields for a specific step.\n *\n * @see Docs https://saas-ui.dev/docs/components/forms/step-form\n */\nexport const FormStep = <TName extends string = string>(\n  props: FormStepProps<TName>\n) => {\n  const { name, children, className, onSubmit, ...rest } = props\n  const step = useFormStep({ name, onSubmit })\n\n  const { isActive } = step\n\n  return isActive ? (\n    <chakra.div {...rest} className={cx('sui-form__step', className)}>\n      {children}\n    </chakra.div>\n  ) : null\n}\n\nFormStep.displayName = 'FormStep'\n\n/**\n * A button that this opens the previous step when clicked. Disabled on the first step.\n *\n * @see Docs https://saas-ui.dev/docs/components/forms/step-form\n */\nexport const PrevButton: React.FC<ButtonProps> = (props) => {\n  const { isFirstStep, isCompleted, prevStep } = useStepperContext()\n\n  return (\n    <Button\n      isDisabled={isFirstStep || isCompleted}\n      children=\"Back\"\n      {...props}\n      className={cx('sui-form__prev-button', props.className)}\n      onClick={callAllHandlers(props.onClick, prevStep)}\n    />\n  )\n}\n\nPrevButton.displayName = 'PrevButton'\n\nexport interface NextButtonProps extends Omit<ButtonProps, 'children'> {\n  submitLabel?: string\n  label?: string\n}\n\n/**\n * A button that submits the active step.\n *\n * @see Docs https://saas-ui.dev/docs/components/forms/step-form\n */\nexport const NextButton: React.FC<NextButtonProps> = (props) => {\n  const { label = 'Next', submitLabel = 'Complete', ...rest } = props\n  const { isLastStep, isCompleted } = useStepperContext()\n\n  return (\n    <SubmitButton\n      {...rest}\n      isDisabled={isCompleted}\n      className={cx('sui-form__next-button', props.className)}\n    >\n      {isLastStep || isCompleted ? submitLabel : label}\n    </SubmitButton>\n  )\n}\n\nNextButton.displayName = 'NextButton'\n","import * as React from 'react'\nimport { FieldValues, SubmitHandler } from 'react-hook-form'\nimport { createContext } from '@chakra-ui/utils'\nimport {\n  useStepper,\n  useStep,\n  UseStepperProps,\n  UseStepperReturn,\n} from '@saas-ui/core'\n\nexport interface StepState {\n  name: string\n  schema?: any\n  resolver?: any\n  isActive?: boolean\n  isCompleted?: boolean\n  onSubmit?: FormStepSubmitHandler\n}\n\nexport type FormStepSubmitHandler<\n  TFieldValues extends FieldValues = FieldValues,\n> = (data: TFieldValues, stepper: UseStepperReturn) => Promise<void>\n\nexport interface StepFormContext extends UseStepperReturn {\n  updateStep(state: StepState): void\n  steps: Record<string, StepState>\n}\n\nexport const [StepFormProvider, useStepFormContext] =\n  createContext<StepFormContext>({\n    name: 'StepFormContext',\n    errorMessage:\n      'useStepFormContext: `context` is undefined. Seems you forgot to wrap step form components in `<StepForm />`',\n  })\n\nimport { FocusableElement } from '@chakra-ui/utils'\nimport { FormProps } from './form'\nimport { FormStepProps, StepsOptions } from './step-form'\nimport { FieldProps, StepFormChildren } from './types'\nimport { DisplayIfProps } from './display-if'\nimport { ArrayFieldProps } from './array-field'\nimport { UseArrayFieldReturn } from './use-array-field'\nimport { ObjectFieldProps } from './object-field'\n\ntype StepName<T extends { [k: number]: { readonly name: string } }> =\n  T[number]['name']\n\nexport interface StepFormRenderContext<\n  TSteps extends StepsOptions<any> = StepsOptions<any>,\n  TFieldValues extends FieldValues = FieldValues,\n  TContext extends object = object,\n  TFieldTypes = FieldProps<TFieldValues>,\n> extends UseStepFormReturn<TFieldValues> {\n  Field: React.FC<TFieldTypes & React.RefAttributes<FocusableElement>>\n  FormStep: React.FC<FormStepProps<StepName<TSteps>>>\n  DisplayIf: React.FC<DisplayIfProps<TFieldValues>>\n  ArrayField: React.FC<\n    ArrayFieldProps<TFieldValues> & React.RefAttributes<UseArrayFieldReturn>\n  >\n  ObjectField: React.FC<ObjectFieldProps<TFieldValues>>\n}\n\nexport interface UseStepFormProps<\n  TSteps extends StepsOptions<any> = StepsOptions<any>,\n  TFieldValues extends FieldValues = FieldValues,\n  TContext extends object = object,\n> extends Omit<UseStepperProps, 'onChange'>,\n    Omit<FormProps<any, TFieldValues, TContext>, 'children'> {\n  steps?: TSteps\n  children: StepFormChildren<any, TSteps, TFieldValues, TContext>\n}\n\nexport interface UseStepFormReturn<\n  TFieldValues extends FieldValues = FieldValues,\n> extends UseStepperReturn {\n  getFormProps(): {\n    onSubmit: SubmitHandler<TFieldValues>\n    schema?: any\n    resolver?: any\n  }\n  updateStep(step: any): void\n  steps: Record<string, any>\n}\n\nexport function useStepForm<\n  TSteps extends StepsOptions<any> = StepsOptions<any>,\n  TFieldValues extends FieldValues = FieldValues,\n  TContext extends object = object,\n>(\n  props: UseStepFormProps<TSteps, TFieldValues, TContext>\n): UseStepFormReturn<TFieldValues> {\n  const {\n    onChange,\n    steps: stepsOptions,\n    resolver,\n    fieldResolver,\n    ...rest\n  } = props\n  const stepper = useStepper(rest)\n\n  const [options, setOptions] = React.useState<TSteps | undefined>(stepsOptions)\n\n  const { activeStep, isLastStep, nextStep } = stepper\n\n  const [steps, updateSteps] = React.useState<Record<string, StepState>>({})\n\n  const mergedData = React.useRef<TFieldValues>({} as any)\n\n  const onSubmitStep: SubmitHandler<TFieldValues> = React.useCallback(\n    async (data) => {\n      try {\n        const step = steps[activeStep]\n\n        mergedData.current = {\n          ...mergedData.current,\n          ...data,\n        }\n\n        if (isLastStep) {\n          await props.onSubmit?.(mergedData.current)\n\n          updateStep({\n            ...step,\n            isCompleted: true,\n          })\n\n          nextStep() // show completed step\n          return\n        }\n\n        await step.onSubmit?.(data, stepper)\n\n        nextStep()\n      } catch (e) {\n        // Step submission failed.\n      }\n    },\n    [steps, activeStep, isLastStep, mergedData]\n  )\n\n  const getFormProps = React.useCallback(() => {\n    const step = steps[activeStep]\n\n    return {\n      onSubmit: onSubmitStep,\n      schema: step?.schema,\n      resolver: step?.schema\n        ? /* @todo fix resolver type */ (resolver as any)?.(step.schema)\n        : undefined,\n      fieldResolver: step?.schema\n        ? (fieldResolver as any)?.(step.schema)\n        : undefined,\n    }\n  }, [steps, onSubmitStep, activeStep, resolver, fieldResolver])\n\n  const updateStep = React.useCallback(\n    (step: StepState) => {\n      const stepOptions = options?.find((s) => s.name === step.name)\n      updateSteps((steps) => {\n        return {\n          ...steps,\n          [step.name]: {\n            ...step,\n            schema: stepOptions?.schema,\n          },\n        }\n      })\n    },\n    [steps, options]\n  )\n\n  return {\n    getFormProps,\n    updateStep,\n    steps,\n    ...stepper,\n  }\n}\n\nexport interface UseFormStepProps {\n  name: string\n  schema?: any\n  resolver?: any\n  onSubmit?: FormStepSubmitHandler\n}\n\nexport function useFormStep(props: UseFormStepProps): StepState {\n  const { name, schema, resolver, onSubmit } = props\n  const step = useStep({ name })\n\n  const { steps, updateStep } = useStepFormContext()\n\n  React.useEffect(() => {\n    updateStep({ name, schema, resolver, onSubmit })\n  }, [name, schema])\n\n  return {\n    ...step,\n    ...(steps[name] || { name, schema }),\n  }\n}\n","import { BaseFieldProps, ValueOf } from './types'\n\nimport { get } from '@chakra-ui/utils'\nimport { ArrayFieldProps } from './array-field'\nimport { ObjectFieldProps } from './object-field'\nimport { DefaultFields } from './default-fields'\n\nexport type FieldResolver = {\n  getFields(): BaseFieldProps[]\n  getNestedFields(name: string): BaseFieldProps[]\n}\n\nexport type GetFieldResolver<TSchema = any> = (schema: TSchema) => FieldResolver\n\ntype FieldTypes<FieldDefs = DefaultFields> = ValueOf<{\n  [K in keyof FieldDefs]: FieldDefs[K] extends React.FC<infer Props>\n    ? { type?: K } & Omit<Props, 'name'>\n    : never\n}>\n\ntype SchemaField<FieldDefs = DefaultFields> =\n  | FieldTypes<FieldDefs>\n  | (Omit<ObjectFieldProps, 'name' | 'children'> & {\n      type: 'object'\n      properties?: Record<string, SchemaField<FieldDefs>>\n    })\n  | (Omit<ArrayFieldProps, 'name' | 'children'> & {\n      type: 'array'\n      items?: SchemaField<FieldDefs>\n    })\n\nexport type ObjectSchema<FieldDefs = DefaultFields> = Record<\n  string,\n  SchemaField<FieldDefs>\n>\n\nconst mapFields = (schema: ObjectSchema): BaseFieldProps[] =>\n  schema &&\n  Object.entries(schema).map(([name, props]) => {\n    const { items, label, title, ...field } = props as any\n    return {\n      ...field,\n      name,\n      label: label || title || name, // json schema compatibility\n    }\n  })\n\nexport const objectFieldResolver: GetFieldResolver<ObjectSchema> = (schema) => {\n  const getFields = (): BaseFieldProps[] => {\n    return mapFields(schema)\n  }\n  const getNestedFields = (name: string): BaseFieldProps[] => {\n    const field = get(schema, name)\n\n    if (!field) return []\n\n    if (field.items?.type === 'object') {\n      return mapFields(field.items.properties)\n    } else if (field.type === 'object') {\n      return mapFields(field.properties)\n    }\n    return [field.items]\n  }\n\n  return { getFields, getNestedFields }\n}\n","import { FieldValues, useWatch } from 'react-hook-form'\nimport { useFormContext, UseFormReturn } from './form-context'\n\nexport interface WatchFieldProps<\n  Value = unknown,\n  TFieldValues extends FieldValues = FieldValues,\n  TContext extends object = object,\n> {\n  name: string\n  defaultValue?: Value\n  isDisabled?: boolean\n  isExact?: boolean\n  children: (\n    value: Value,\n    form: UseFormReturn<TFieldValues, TContext>\n  ) => React.ReactElement | void\n}\n\nexport const WatchField = <\n  Value = unknown,\n  TFieldValues extends FieldValues = FieldValues,\n  TContext extends object = object,\n>(\n  props: WatchFieldProps<Value, TFieldValues, TContext>\n) => {\n  const { name, defaultValue, isDisabled, isExact } = props\n  const form = useFormContext<TFieldValues, TContext>()\n\n  const field = useWatch({\n    name,\n    defaultValue,\n    disabled: isDisabled,\n    exact: isExact,\n  })\n\n  return props.children(field, form) || null\n}\n","import React, { ForwardedRef, useMemo } from 'react'\nimport { forwardRef } from '@chakra-ui/react'\n\nimport { FieldsProvider } from './fields-context'\nimport { Form, FieldValues, FormProps, GetResolver } from './form'\nimport { GetBaseField, WithFields } from './types'\nimport { objectFieldResolver } from './field-resolver'\nimport { GetFieldResolver } from './field-resolver'\nimport { defaultFieldTypes } from './default-fields'\n\nexport interface CreateFormProps<\n  FieldDefs,\n  TGetBaseField extends GetBaseField = GetBaseField,\n> {\n  resolver?: GetResolver\n  fieldResolver?: GetFieldResolver\n  fields?: FieldDefs extends Record<string, React.FC<any>> ? FieldDefs : never\n  getBaseField?: TGetBaseField\n}\n\nexport type FormType<\n  FieldDefs,\n  ExtraProps = object,\n  ExtraFieldProps extends object = object,\n  ExtraOverrides = object,\n> = (<\n  TSchema = unknown,\n  TFieldValues extends FieldValues = FieldValues,\n  TContext extends object = object,\n>(\n  props: WithFields<\n    FormProps<TSchema, TFieldValues, TContext, ExtraFieldProps>,\n    FieldDefs,\n    ExtraOverrides\n  > & {\n    ref?: React.ForwardedRef<HTMLFormElement>\n  } & ExtraProps\n) => React.ReactElement) & {\n  displayName?: string\n  id?: string\n}\n\nexport function createForm<\n  FieldDefs,\n  TGetBaseField extends GetBaseField<any> = GetBaseField<any>,\n>({\n  resolver,\n  fieldResolver = objectFieldResolver,\n  fields,\n  getBaseField,\n}: CreateFormProps<FieldDefs, TGetBaseField> = {}) {\n  type ExtraFieldProps =\n    TGetBaseField extends GetBaseField<infer ExtraFieldProps>\n      ? ExtraFieldProps\n      : object\n\n  const DefaultForm = forwardRef(\n    <\n      TSchema = any,\n      TFieldValues extends FieldValues = FieldValues,\n      TContext extends object = object,\n    >(\n      props: WithFields<\n        FormProps<TSchema, TFieldValues, TContext, ExtraFieldProps>,\n        FieldDefs\n      >,\n      ref: ForwardedRef<HTMLFormElement>\n    ) => {\n      const {\n        schema,\n        resolver: resolverProp,\n        fieldResolver: fieldResolverProp,\n        ...rest\n      } = props\n\n      const fieldsContext = useMemo(\n        () => ({\n          fields: { ...defaultFieldTypes, ...fields },\n          getBaseField,\n        }),\n        [fields, getBaseField]\n      )\n\n      return (\n        <FieldsProvider value={fieldsContext}>\n          <Form\n            ref={ref}\n            resolver={resolverProp ?? resolver?.(props.schema)}\n            fieldResolver={fieldResolverProp ?? fieldResolver?.(schema)}\n            {...rest}\n          />\n        </FieldsProvider>\n      )\n    }\n  ) as FormType<FieldDefs, object, ExtraFieldProps>\n\n  DefaultForm.displayName = 'Form'\n  DefaultForm.id = 'Form'\n\n  return DefaultForm\n}\n","import * as React from 'react'\n\nimport { chakra, HTMLChakraProps, forwardRef } from '@chakra-ui/react'\nimport {\n  FocusableElement,\n  cx,\n  runIfFn,\n  MaybeRenderProp,\n} from '@chakra-ui/utils'\n\nimport {\n  useForm,\n  UseFormProps,\n  UseFormReturn,\n  FieldValues,\n  SubmitHandler,\n  SubmitErrorHandler,\n  ResolverOptions,\n  ResolverResult,\n  WatchObserver,\n} from 'react-hook-form'\nimport { FormProvider } from './form-context'\nimport { FieldResolver } from './field-resolver'\n\nexport type { UseFormReturn, FieldValues, SubmitHandler }\n\nimport { FieldProps, DefaultFieldOverrides } from './types'\n\nimport { Field as DefaultField } from './field'\nimport { FormLayout } from './layout'\nimport { AutoFields } from './fields'\nimport { SubmitButton } from './submit-button'\nimport { DisplayIf, DisplayIfProps } from './display-if'\nimport { ArrayField, ArrayFieldProps } from './array-field'\nimport { ObjectField, ObjectFieldProps } from './object-field'\nimport { UseArrayFieldReturn } from './use-array-field'\n\nexport interface FormRenderContext<\n  TFieldValues extends FieldValues = FieldValues,\n  TContext extends object = object,\n  TFieldTypes = FieldProps<TFieldValues>,\n> extends UseFormReturn<TFieldValues, TContext> {\n  Field: React.FC<TFieldTypes & React.RefAttributes<FocusableElement>>\n  DisplayIf: React.FC<DisplayIfProps<TFieldValues>>\n  ArrayField: React.FC<\n    ArrayFieldProps<TFieldValues> & React.RefAttributes<UseArrayFieldReturn>\n  >\n  ObjectField: React.FC<ObjectFieldProps<TFieldValues>>\n}\n\ninterface FormOptions<\n  TSchema = unknown,\n  TFieldValues extends FieldValues = FieldValues,\n  TContext extends object = object,\n  TExtraFieldProps extends object = object,\n  TFieldTypes = FieldProps<TFieldValues, TExtraFieldProps>,\n> {\n  /**\n   * The form schema.\n   */\n  schema?: TSchema\n  /**\n   * Triggers when any of the field change.\n   */\n  onChange?: WatchObserver<TFieldValues>\n  /**\n   * The submit handler.\n   */\n  onSubmit: SubmitHandler<TFieldValues>\n  /**\n   * Triggers when there are validation errors.\n   */\n  onError?: SubmitErrorHandler<TFieldValues>\n  /**\n   * The Hook Form state ref.\n   */\n  formRef?: React.Ref<UseFormReturn<TFieldValues, TContext>>\n  /**\n   * The form children, can be a render prop or a ReactNode.\n   */\n  children?: MaybeRenderProp<\n    FormRenderContext<TFieldValues, TContext, TFieldTypes>\n  >\n  /**\n   * The field resolver, used to resolve the fields from schemas.\n   */\n  fieldResolver?: FieldResolver\n  /**\n   * Field overrides\n   */\n  fields?: DefaultFieldOverrides\n}\n\nexport interface FormProps<\n  TSchema = unknown,\n  TFieldValues extends FieldValues = FieldValues,\n  TContext extends object = object,\n  TExtraFieldProps extends object = object,\n  TFieldTypes = FieldProps<TFieldValues, TExtraFieldProps>,\n> extends UseFormProps<TFieldValues, TContext>,\n    Omit<\n      HTMLChakraProps<'form'>,\n      'children' | 'onChange' | 'onSubmit' | 'onError'\n    >,\n    FormOptions<\n      TSchema,\n      TFieldValues,\n      TContext,\n      TExtraFieldProps,\n      TFieldTypes\n    > {}\n\n/**\n * The wrapper component provides context, state, and focus management.\n *\n * @see Docs https://saas-ui.dev/docs/components/forms/form\n */\nexport const Form = forwardRef(\n  <\n    TSchema = any,\n    TFieldValues extends FieldValues = FieldValues,\n    TContext extends object = object,\n    TExtraFieldProps extends object = object,\n    TFieldTypes = FieldProps<TFieldValues>,\n  >(\n    props: FormProps<\n      TSchema,\n      TFieldValues,\n      TContext,\n      TExtraFieldProps,\n      TFieldTypes\n    >,\n    ref: React.ForwardedRef<HTMLFormElement>\n  ) => {\n    const {\n      mode = 'all',\n      resolver,\n      fieldResolver,\n      fields,\n      reValidateMode,\n      shouldFocusError,\n      shouldUnregister,\n      shouldUseNativeValidation,\n      criteriaMode,\n      delayError,\n      schema,\n      defaultValues,\n      values,\n      context,\n      resetOptions,\n      onChange,\n      onSubmit,\n      onError,\n      formRef,\n      children,\n      ...rest\n    } = props\n\n    const form = {\n      mode,\n      resolver,\n      defaultValues,\n      values,\n      reValidateMode,\n      shouldFocusError,\n      shouldUnregister,\n      shouldUseNativeValidation,\n      criteriaMode,\n      delayError,\n      context,\n      resetOptions,\n    }\n\n    const methods = useForm<TFieldValues, TContext>(form)\n    const { handleSubmit } = methods\n\n    // This exposes the useForm api through the forwarded ref\n    React.useImperativeHandle(formRef, () => methods, [formRef, methods])\n\n    React.useEffect(() => {\n      let subscription: any\n      if (onChange) {\n        subscription = methods.watch(onChange)\n      }\n      return () => subscription?.unsubscribe()\n    }, [methods, onChange])\n\n    let _children = children\n    if (!_children && fieldResolver) {\n      _children = (\n        <FormLayout>\n          <AutoFields />\n          <SubmitButton {...fields?.submit} />\n        </FormLayout>\n      )\n    }\n\n    return (\n      <FormProvider\n        {...methods}\n        schema={schema}\n        fieldResolver={fieldResolver}\n        fields={fields}\n      >\n        <chakra.form\n          ref={ref}\n          onSubmit={handleSubmit(onSubmit, onError)}\n          {...rest}\n          className={cx('sui-form', props.className)}\n        >\n          {runIfFn(_children, {\n            Field: DefaultField as any,\n            DisplayIf: DisplayIf as any,\n            ArrayField: ArrayField as any,\n            ObjectField: ObjectField as any,\n            ...methods,\n          })}\n        </chakra.form>\n      </FormProvider>\n    )\n  }\n) as FormComponent\n\nexport type FormComponent = (<\n  TSchema = unknown,\n  TFieldValues extends FieldValues = FieldValues,\n  TContext extends object = object,\n  TExtraFieldProps extends object = object,\n  TFieldTypes = FieldProps<TFieldValues>,\n>(\n  props: FormProps<\n    TSchema,\n    TFieldValues,\n    TContext,\n    TExtraFieldProps,\n    TFieldTypes\n  > & {\n    ref?: React.ForwardedRef<HTMLFormElement>\n  }\n) => React.ReactElement) & {\n  displayName?: string\n}\n\nForm.displayName = 'Form'\n\nexport type GetResolver = <\n  TFieldValues extends FieldValues,\n  TContext extends object,\n>(\n  schema: unknown\n) => (\n  values: TFieldValues,\n  context: TContext | undefined,\n  options: ResolverOptions<TFieldValues>\n) => Promise<ResolverResult<TFieldValues>>\n","import React, { useMemo } from 'react'\nimport { forwardRef } from '@chakra-ui/react'\nimport {\n  ArrayField,\n  DisplayIf,\n  FieldProps,\n  FieldValues,\n  FieldsProvider,\n  GetFieldResolver,\n  ObjectField,\n  defaultFieldTypes,\n} from './'\nimport { Form } from './form'\nimport { Field } from './field'\nimport { FormStep, StepsOptions } from './step-form'\nimport {\n  StepFormProvider,\n  UseStepFormProps,\n  useStepForm,\n} from './use-step-form'\nimport { StepperProvider } from '@saas-ui/core'\nimport { runIfFn } from '@chakra-ui/utils'\nimport { GetResolver } from './form'\nimport { GetBaseField, WithStepFields } from './types'\n\nexport type StepFormType<\n  FieldDefs,\n  ExtraProps = object,\n  ExtraFieldProps extends object = object,\n  ExtraOverrides = object,\n> = (<\n  TSteps extends StepsOptions<any> = StepsOptions<any>,\n  TFieldValues extends FieldValues = FieldValues,\n  TContext extends object = object,\n  TFieldTypes = FieldProps<TFieldValues, ExtraFieldProps>,\n>(\n  props: WithStepFields<\n    UseStepFormProps<TSteps, TFieldValues, TContext>,\n    FieldDefs,\n    ExtraOverrides\n  > & {\n    ref?: React.ForwardedRef<HTMLFormElement>\n  } & ExtraProps\n) => React.ReactElement) & {\n  displayName?: string\n  id?: string\n}\n\nexport interface CreateStepFormProps<\n  FieldDefs,\n  TGetBaseField extends GetBaseField = GetBaseField,\n> {\n  resolver?: GetResolver\n  fieldResolver?: GetFieldResolver\n  fields?: FieldDefs extends Record<string, React.FC<any>> ? FieldDefs : never\n  getBaseField?: TGetBaseField\n}\n\nexport function createStepForm<\n  FieldDefs,\n  TGetBaseField extends GetBaseField<any> = GetBaseField<any>,\n>({\n  fields,\n  resolver,\n  fieldResolver,\n  getBaseField,\n}: CreateStepFormProps<FieldDefs, TGetBaseField> = {}) {\n  type ExtraFieldProps =\n    TGetBaseField extends GetBaseField<infer ExtraFieldProps>\n      ? ExtraFieldProps\n      : object\n\n  const StepForm = forwardRef<any, 'div'>((props, ref) => {\n    const { children, steps, ...rest } = props\n\n    const stepper = useStepForm({\n      resolver,\n      fieldResolver,\n      ...props,\n    })\n\n    const { getFormProps, ...ctx } = stepper\n\n    const context = useMemo(() => ctx, [ctx])\n\n    const fieldsContext = {\n      fields: {\n        ...defaultFieldTypes,\n        ...fields,\n      },\n      getBaseField,\n    }\n\n    return (\n      <StepperProvider value={context}>\n        <StepFormProvider value={context}>\n          <FieldsProvider value={fieldsContext}>\n            <Form ref={ref} {...rest} {...getFormProps()}>\n              {runIfFn(children, {\n                ...stepper,\n                Field: Field as any,\n                FormStep: FormStep as any,\n                DisplayIf: DisplayIf as any,\n                ArrayField: ArrayField as any,\n                ObjectField: ObjectField as any,\n              })}\n            </Form>\n          </FieldsProvider>\n        </StepFormProvider>\n      </StepperProvider>\n    )\n  }) as StepFormType<FieldDefs, object, ExtraFieldProps>\n\n  StepForm.displayName = `Step${Form.displayName || Form.name}`\n\n  return StepForm\n}\n","// Exporting from './display-field'\nexport { DisplayField } from './display-field'\nexport type { DisplayFieldProps } from './display-field'\nexport { FormValue } from './display-field'\n\n// Exporting from './field'\nexport { Field } from './field'\nexport type { FieldRules, Option } from './field'\n\n// Exporting from './fields'\nexport { AutoFields } from './fields'\nexport type { FieldsProps } from './fields'\n\n// Exporting from './fields-context'\nexport { FieldsProvider, useField } from './fields-context'\n\n// Exporting from './layout'\nexport { FormLayout } from './layout'\nexport type { FormLayoutProps } from './layout'\n\n// Exporting from './submit-button'\nexport { SubmitButton } from './submit-button'\nexport type { SubmitButtonProps } from './submit-button'\n\n// Exporting from './array-field'\nexport {\n  ArrayField,\n  ArrayFieldAddButton,\n  ArrayFieldContainer,\n  ArrayFieldRemoveButton,\n  ArrayFieldRow,\n  ArrayFieldRowContainer,\n  ArrayFieldRowFields,\n  ArrayFieldRows,\n} from './array-field'\n\nexport type {\n  ArrayFieldButtonProps,\n  ArrayFieldContainerProps,\n  ArrayFieldProps,\n  ArrayFieldRowFieldsProps,\n  ArrayFieldRowsProps,\n} from './array-field'\n\n// Exporting from './use-array-field'\nexport {\n  ArrayFieldProvider,\n  ArrayFieldRowProvider,\n  useArrayField,\n  useArrayFieldAddButton,\n  useArrayFieldContext,\n  useArrayFieldRemoveButton,\n  useArrayFieldRow,\n  useArrayFieldRowContext,\n} from './use-array-field'\n\nexport type {\n  ArrayFieldOptions,\n  UseArrayFieldReturn,\n  UseArrayFieldRowProps,\n  UseArrayFieldRowReturn,\n} from './use-array-field'\n\n// Exporting from './object-field'\nexport { FormLegend, ObjectField } from './object-field'\nexport type { ObjectFieldProps } from './object-field'\n\n// Exporting from './display-if'\nexport { DisplayIf } from './display-if'\nexport type { DisplayIfProps } from './display-if'\n\n// Exporting from './step-form'\nexport { FormStep, FormStepper, NextButton, PrevButton } from './step-form'\n\nexport type {\n  FormStepOptions,\n  FormStepProps,\n  FormStepperProps,\n  NextButtonProps,\n  StepFormProps,\n  StepsOptions,\n} from './step-form'\n\n// Exporting from './use-step-form'\nexport {\n  StepFormProvider,\n  useFormStep,\n  useStepForm,\n  useStepFormContext,\n} from './use-step-form'\n\nexport type {\n  FormStepSubmitHandler,\n  StepFormContext,\n  StepFormRenderContext,\n  StepState,\n  UseFormStepProps,\n  UseStepFormProps,\n  UseStepFormReturn,\n} from './use-step-form'\n\n// Exporting from './field-resolver'\nexport { objectFieldResolver } from './field-resolver'\nexport type {\n  FieldResolver,\n  GetFieldResolver,\n  ObjectSchema,\n} from './field-resolver'\n\n// Exporting from './watch-field'\nexport { WatchField } from './watch-field'\nexport type { WatchFieldProps } from './watch-field'\n\n// Exporting from './input-right-button'\nexport { InputRightButton } from './input-right-button'\nexport type { InputRightButtonProps } from './input-right-button'\n\n// Exporting from './select'\nexport {\n  NativeSelect,\n  Select,\n  SelectButton,\n  SelectList,\n  SelectOption,\n} from './select'\n\nexport type {\n  NativeSelectProps,\n  SelectButtonProps,\n  SelectListProps,\n  SelectProps,\n} from './select'\n\n// Exporting from './password-input'\nexport { PasswordInput } from './password-input'\nexport type { PasswordInputProps } from './password-input'\n\n// Exporting from './radio'\nexport { RadioInput } from './radio'\nexport type { RadioInputProps, RadioOption, RadioOptions } from './radio'\n\n// Exporting BaseField from './base-field'\nexport { BaseField, useBaseField } from './base-field'\n\n// Exporting from './default-fields'\nexport {\n  CheckboxField,\n  InputField,\n  NativeSelectField,\n  NumberInputField,\n  PasswordInputField,\n  PinField,\n  RadioField,\n  SelectField,\n  SwitchField,\n  TextareaField,\n  defaultFieldTypes,\n} from './default-fields'\n\nexport type {\n  DefaultFields,\n  InputFieldProps,\n  NumberInputFieldProps,\n  PinFieldProps,\n  SelectFieldProps,\n  SwitchFieldProps,\n  TextareaFieldProps,\n  CheckboxFieldProps,\n  NativeSelectFieldProps,\n  RadioFieldProps,\n} from './default-fields'\n\n// Exporting types from './types'\nexport type {\n  FieldProps,\n  WithFields,\n  BaseFieldProps,\n  FieldOptions,\n  DefaultFieldOverrides,\n  WithStepFields,\n  GetBaseField,\n  ArrayFieldPath,\n  MergeFieldProps,\n  FieldOption,\n  FieldOverrides,\n  FormChildren,\n  ShallowMerge,\n  StepFormChildren,\n  ValueOf,\n} from './types'\n\n// Exporting from './create-form'\nexport { createForm } from './create-form'\nexport type { CreateFormProps, FormType } from './create-form'\n\n// Exporting from './create-field'\nexport { createField } from './create-field'\nexport type { CreateFieldOptions } from './create-field'\n\n// Exporting from './form'\nexport { Form as BaseForm } from './form'\nexport type { FormProps, FormRenderContext, FormComponent } from './form'\n\n// Exporting from './form-context'\nexport { FormProvider, useFormContext } from './form-context'\n\nexport { createStepForm } from './create-step-form'\nexport type { CreateStepFormProps } from './create-step-form'\n\n// Import and export Form and StepForm\nimport { createForm } from './create-form'\nimport { createStepForm } from './create-step-form'\n\n/**\n * Form component.\n *\n * @see Docs https://saas-ui.dev/docs/components/forms/form\n */\nexport const Form = createForm()\n\n/**\n * Multi-step form component.\n *\n * @see Docs https://saas-ui.dev/docs/components/forms/step-form\n */\nexport const StepForm = createStepForm()\n\nexport type {\n  BatchFieldArrayUpdate,\n  ChangeHandler,\n  Control,\n  ControllerFieldState,\n  ControllerProps,\n  ControllerRenderProps,\n  CriteriaMode,\n  CustomElement,\n  DeepMap,\n  DeepPartial,\n  DeepPartialSkipArrayKey,\n  DefaultValues,\n  DelayCallback,\n  EmptyObject,\n  ErrorOption,\n  EventType,\n  Field as FieldDef,\n  FieldArray,\n  FieldArrayMethodProps,\n  FieldArrayWithId,\n  FieldElement,\n  FieldError,\n  FieldErrors,\n  FieldName,\n  FieldNamesMarkedBoolean,\n  FieldRefs,\n  FieldValue,\n  FieldValues,\n  FormProviderProps,\n  FormState,\n  FormStateProxy,\n  FormStateSubjectRef,\n  GetIsDirty,\n  InternalFieldErrors,\n  InternalFieldName,\n  InternalNameSet,\n  IsAny,\n  IsFlatObject,\n  KeepStateOptions,\n  LiteralUnion,\n  Message,\n  Mode,\n  MultipleFieldErrors,\n  Names,\n  NativeFieldValue,\n  NestedValue,\n  NonUndefined,\n  Noop,\n  Primitive,\n  ReadFormState,\n  Ref,\n  RefCallBack,\n  RegisterOptions,\n  Resolver,\n  ResolverError,\n  ResolverOptions,\n  ResolverResult,\n  ResolverSuccess,\n  SetFieldValue,\n  SetValueConfig,\n  Subjects,\n  SubmitErrorHandler,\n  SubmitHandler,\n  TriggerConfig,\n  UnpackNestedValue,\n  UseControllerProps,\n  UseControllerReturn,\n  UseFieldArrayProps,\n  UseFieldArrayReturn,\n  UseFormClearErrors,\n  UseFormGetValues,\n  UseFormHandleSubmit,\n  UseFormProps,\n  UseFormRegister,\n  UseFormRegisterReturn,\n  UseFormReset,\n  UseFormResetField,\n  UseFormReturn,\n  UseFormSetError,\n  UseFormSetFocus,\n  UseFormSetValue,\n  UseFormStateProps,\n  UseFormStateReturn,\n  UseFormTrigger,\n  UseFormUnregister,\n  UseFormWatch,\n  UseWatchProps,\n  Validate,\n  ValidateResult,\n  ValidationMode,\n  ValidationRule,\n  ValidationValue,\n  ValidationValueMessage,\n  WatchInternal,\n  WatchObserver,\n} from 'react-hook-form'\n\nexport {\n  appendErrors,\n  useController,\n  useFieldArray,\n  useForm,\n  useFormState,\n  useWatch,\n  Controller,\n} from 'react-hook-form'\n"],"names":["jsx","React","React","jsx","forwardRef","Input","InputGroup","jsx","jsxs","forwardRef","InputGroup","Input","forwardRef","InputRightElement","jsx","jsx","jsxs","forwardRef","InputGroup","Input","forwardRef","React","jsx","forwardRef","forwardRef","Button","ChevronDownIcon","createContext","React","createContext","value","React","jsx","jsxs","forwardRef","ChevronDownIcon","Button","value","forwardRef","jsx","React","forwardRef","splitProps","FormControl","FormLabel","jsx","jsxs","FormControl","FormLabel","jsx","Field","forwardRef","BaseField","splitProps","jsx","jsxs","forwardRef","Input","InputGroup","NumberInputField","jsx","React","chakra","omitThemingProps","cx","jsx","React","chakra","forwardRef","Button","React","createContext","jsx","jsxs","chakra","Button","forwardRef","FormControl","FormLabel","useStyleConfig","jsx","jsxs","useStyleConfig","FormLabel","FormControl","jsx","mapNestedFields","name","useFormContext","Button","forwardRef","jsx","forwardRef","useFormContext","Button","React","React","chakra","Button","callAllHandlers","cx","React","createContext","steps","jsx","chakra","cx","Button","callAllHandlers","get","useWatch","useWatch","useMemo","forwardRef","React","chakra","forwardRef","cx","jsx","jsxs","forwardRef","chakra","cx","jsx","forwardRef","useMemo","useMemo","forwardRef","runIfFn","jsx","StepForm","forwardRef","useMemo","useFieldArray","useForm","useWatch","Controller","Form"],"mappings":"","debugId":null}},
    {"offset": {"line": 2768, "column": 0}, "map": {"version":3,"sources":["file:///home/joeagharib/My-Github/taskhive/client/node_modules/next/dist/src/server/route-modules/app-page/module.compiled.js"],"sourcesContent":["if (process.env.NEXT_RUNTIME === 'edge') {\n  module.exports = require('next/dist/server/route-modules/app-page/module.js')\n} else {\n  if (process.env.__NEXT_EXPERIMENTAL_REACT) {\n    if (process.env.NODE_ENV === 'development') {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.dev.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.dev.js')\n      }\n    } else {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.prod.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.prod.js')\n      }\n    }\n  } else {\n    if (process.env.NODE_ENV === 'development') {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.dev.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page.runtime.dev.js')\n      }\n    } else {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.prod.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page.runtime.prod.js')\n      }\n    }\n  }\n}\n"],"names":["process","env","NEXT_RUNTIME","module","exports","require","__NEXT_EXPERIMENTAL_REACT","NODE_ENV","TURBOPACK"],"mappings":"AAAA,IAAIA,QAAQC,GAAG,CAACC,YAAY,KAAK,QAAQ;;KAElC;IACL,IAAIF,QAAQC,GAAG,CAACK,yBAAyB,EAAE;;SAcpC;QACL,IAAIN,QAAQC,GAAG,CAACM,QAAQ,KAAK,WAAe;YAC1C,IAAIP,QAAQC,GAAG,CAACO,SAAS,eAAE;gBACzBL,OAAOC,OAAO,GAAGC,QAAQ;YAC3B,OAAO;;QAGT,OAAO;;IAOT;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2790, "column": 0}, "map": {"version":3,"sources":["file:///home/joeagharib/My-Github/taskhive/client/node_modules/next/dist/src/server/instrumentation/utils.ts"],"sourcesContent":["export function getRevalidateReason(params: {\n  isOnDemandRevalidate?: boolean\n  isRevalidate?: boolean\n}): 'on-demand' | 'stale' | undefined {\n  if (params.isOnDemandRevalidate) {\n    return 'on-demand'\n  }\n  if (params.isRevalidate) {\n    return 'stale'\n  }\n  return undefined\n}\n"],"names":["getRevalidateReason","params","isOnDemandRevalidate","isRevalidate","undefined"],"mappings":";;;;AAAO,SAASA,oBAAoBC,MAGnC;IACC,IAAIA,OAAOC,oBAAoB,EAAE;QAC/B,OAAO;IACT;IACA,IAAID,OAAOE,YAAY,EAAE;QACvB,OAAO;IACT;IACA,OAAOC;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2807, "column": 0}, "map": {"version":3,"sources":["file:///home/joeagharib/My-Github/taskhive/client/node_modules/next/dist/src/server/app-render/interop-default.ts"],"sourcesContent":["/**\n * Interop between \"export default\" and \"module.exports\".\n */\nexport function interopDefault(mod: any) {\n  return mod.default || mod\n}\n"],"names":["interopDefault","mod","default"],"mappings":"AAAA;;CAEC,GACD;;;;AAAO,SAASA,eAAeC,GAAQ;IACrC,OAAOA,IAAIC,OAAO,IAAID;AACxB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2820, "column": 0}, "map": {"version":3,"sources":["file:///home/joeagharib/My-Github/taskhive/client/node_modules/next/dist/src/server/app-render/strip-flight-headers.ts"],"sourcesContent":["import type { IncomingHttpHeaders } from 'node:http'\n\nimport { FLIGHT_HEADERS } from '../../client/components/app-router-headers'\n\n/**\n * Removes the flight headers from the request.\n *\n * @param req the request to strip the headers from\n */\nexport function stripFlightHeaders(headers: IncomingHttpHeaders) {\n  for (const header of FLIGHT_HEADERS) {\n    delete headers[header]\n  }\n}\n"],"names":["FLIGHT_HEADERS","stripFlightHeaders","headers","header"],"mappings":";;;;AAEA,SAASA,cAAc,QAAQ,6CAA4C;;AAOpE,SAASC,mBAAmBC,OAA4B;IAC7D,KAAK,MAAMC,UAAUH,yMAAAA,CAAgB;QACnC,OAAOE,OAAO,CAACC,OAAO;IACxB;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2835, "column": 0}, "map": {"version":3,"sources":["file:///home/joeagharib/My-Github/taskhive/client/node_modules/next/dist/src/server/web/spec-extension/adapters/headers.ts"],"sourcesContent":["import type { IncomingHttpHeaders } from 'http'\n\nimport { ReflectAdapter } from './reflect'\n\n/**\n * @internal\n */\nexport class ReadonlyHeadersError extends Error {\n  constructor() {\n    super(\n      'Headers cannot be modified. Read more: https://nextjs.org/docs/app/api-reference/functions/headers'\n    )\n  }\n\n  public static callable() {\n    throw new ReadonlyHeadersError()\n  }\n}\n\nexport type ReadonlyHeaders = Headers & {\n  /** @deprecated Method unavailable on `ReadonlyHeaders`. Read more: https://nextjs.org/docs/app/api-reference/functions/headers */\n  append(...args: any[]): void\n  /** @deprecated Method unavailable on `ReadonlyHeaders`. Read more: https://nextjs.org/docs/app/api-reference/functions/headers */\n  set(...args: any[]): void\n  /** @deprecated Method unavailable on `ReadonlyHeaders`. Read more: https://nextjs.org/docs/app/api-reference/functions/headers */\n  delete(...args: any[]): void\n}\nexport class HeadersAdapter extends Headers {\n  private readonly headers: IncomingHttpHeaders\n\n  constructor(headers: IncomingHttpHeaders) {\n    // We've already overridden the methods that would be called, so we're just\n    // calling the super constructor to ensure that the instanceof check works.\n    super()\n\n    this.headers = new Proxy(headers, {\n      get(target, prop, receiver) {\n        // Because this is just an object, we expect that all \"get\" operations\n        // are for properties. If it's a \"get\" for a symbol, we'll just return\n        // the symbol.\n        if (typeof prop === 'symbol') {\n          return ReflectAdapter.get(target, prop, receiver)\n        }\n\n        const lowercased = prop.toLowerCase()\n\n        // Let's find the original casing of the key. This assumes that there is\n        // no mixed case keys (e.g. \"Content-Type\" and \"content-type\") in the\n        // headers object.\n        const original = Object.keys(headers).find(\n          (o) => o.toLowerCase() === lowercased\n        )\n\n        // If the original casing doesn't exist, return undefined.\n        if (typeof original === 'undefined') return\n\n        // If the original casing exists, return the value.\n        return ReflectAdapter.get(target, original, receiver)\n      },\n      set(target, prop, value, receiver) {\n        if (typeof prop === 'symbol') {\n          return ReflectAdapter.set(target, prop, value, receiver)\n        }\n\n        const lowercased = prop.toLowerCase()\n\n        // Let's find the original casing of the key. This assumes that there is\n        // no mixed case keys (e.g. \"Content-Type\" and \"content-type\") in the\n        // headers object.\n        const original = Object.keys(headers).find(\n          (o) => o.toLowerCase() === lowercased\n        )\n\n        // If the original casing doesn't exist, use the prop as the key.\n        return ReflectAdapter.set(target, original ?? prop, value, receiver)\n      },\n      has(target, prop) {\n        if (typeof prop === 'symbol') return ReflectAdapter.has(target, prop)\n\n        const lowercased = prop.toLowerCase()\n\n        // Let's find the original casing of the key. This assumes that there is\n        // no mixed case keys (e.g. \"Content-Type\" and \"content-type\") in the\n        // headers object.\n        const original = Object.keys(headers).find(\n          (o) => o.toLowerCase() === lowercased\n        )\n\n        // If the original casing doesn't exist, return false.\n        if (typeof original === 'undefined') return false\n\n        // If the original casing exists, return true.\n        return ReflectAdapter.has(target, original)\n      },\n      deleteProperty(target, prop) {\n        if (typeof prop === 'symbol')\n          return ReflectAdapter.deleteProperty(target, prop)\n\n        const lowercased = prop.toLowerCase()\n\n        // Let's find the original casing of the key. This assumes that there is\n        // no mixed case keys (e.g. \"Content-Type\" and \"content-type\") in the\n        // headers object.\n        const original = Object.keys(headers).find(\n          (o) => o.toLowerCase() === lowercased\n        )\n\n        // If the original casing doesn't exist, return true.\n        if (typeof original === 'undefined') return true\n\n        // If the original casing exists, delete the property.\n        return ReflectAdapter.deleteProperty(target, original)\n      },\n    })\n  }\n\n  /**\n   * Seals a Headers instance to prevent modification by throwing an error when\n   * any mutating method is called.\n   */\n  public static seal(headers: Headers): ReadonlyHeaders {\n    return new Proxy<ReadonlyHeaders>(headers, {\n      get(target, prop, receiver) {\n        switch (prop) {\n          case 'append':\n          case 'delete':\n          case 'set':\n            return ReadonlyHeadersError.callable\n          default:\n            return ReflectAdapter.get(target, prop, receiver)\n        }\n      },\n    })\n  }\n\n  /**\n   * Merges a header value into a string. This stores multiple values as an\n   * array, so we need to merge them into a string.\n   *\n   * @param value a header value\n   * @returns a merged header value (a string)\n   */\n  private merge(value: string | string[]): string {\n    if (Array.isArray(value)) return value.join(', ')\n\n    return value\n  }\n\n  /**\n   * Creates a Headers instance from a plain object or a Headers instance.\n   *\n   * @param headers a plain object or a Headers instance\n   * @returns a headers instance\n   */\n  public static from(headers: IncomingHttpHeaders | Headers): Headers {\n    if (headers instanceof Headers) return headers\n\n    return new HeadersAdapter(headers)\n  }\n\n  public append(name: string, value: string): void {\n    const existing = this.headers[name]\n    if (typeof existing === 'string') {\n      this.headers[name] = [existing, value]\n    } else if (Array.isArray(existing)) {\n      existing.push(value)\n    } else {\n      this.headers[name] = value\n    }\n  }\n\n  public delete(name: string): void {\n    delete this.headers[name]\n  }\n\n  public get(name: string): string | null {\n    const value = this.headers[name]\n    if (typeof value !== 'undefined') return this.merge(value)\n\n    return null\n  }\n\n  public has(name: string): boolean {\n    return typeof this.headers[name] !== 'undefined'\n  }\n\n  public set(name: string, value: string): void {\n    this.headers[name] = value\n  }\n\n  public forEach(\n    callbackfn: (value: string, name: string, parent: Headers) => void,\n    thisArg?: any\n  ): void {\n    for (const [name, value] of this.entries()) {\n      callbackfn.call(thisArg, value, name, this)\n    }\n  }\n\n  public *entries(): HeadersIterator<[string, string]> {\n    for (const key of Object.keys(this.headers)) {\n      const name = key.toLowerCase()\n      // We assert here that this is a string because we got it from the\n      // Object.keys() call above.\n      const value = this.get(name) as string\n\n      yield [name, value] as [string, string]\n    }\n  }\n\n  public *keys(): HeadersIterator<string> {\n    for (const key of Object.keys(this.headers)) {\n      const name = key.toLowerCase()\n      yield name\n    }\n  }\n\n  public *values(): HeadersIterator<string> {\n    for (const key of Object.keys(this.headers)) {\n      // We assert here that this is a string because we got it from the\n      // Object.keys() call above.\n      const value = this.get(key) as string\n\n      yield value\n    }\n  }\n\n  public [Symbol.iterator](): HeadersIterator<[string, string]> {\n    return this.entries()\n  }\n}\n"],"names":["ReflectAdapter","ReadonlyHeadersError","Error","constructor","callable","HeadersAdapter","Headers","headers","Proxy","get","target","prop","receiver","lowercased","toLowerCase","original","Object","keys","find","o","set","value","has","deleteProperty","seal","merge","Array","isArray","join","from","append","name","existing","push","delete","forEach","callbackfn","thisArg","entries","call","key","values","Symbol","iterator"],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3014, "column": 0}, "map": {"version":3,"sources":["file:///home/joeagharib/My-Github/taskhive/client/node_modules/next/dist/src/server/api-utils/index.ts"],"sourcesContent":["import type { IncomingMessage } from 'http'\nimport type { BaseNextRequest } from '../base-http'\nimport type { CookieSerializeOptions } from 'next/dist/compiled/cookie'\nimport type { NextApiResponse } from '../../shared/lib/utils'\n\nimport { HeadersAdapter } from '../web/spec-extension/adapters/headers'\nimport {\n  PRERENDER_REVALIDATE_HEADER,\n  PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER,\n} from '../../lib/constants'\nimport { getTracer } from '../lib/trace/tracer'\nimport { NodeSpan } from '../lib/trace/constants'\n\nexport type NextApiRequestCookies = Partial<{ [key: string]: string }>\nexport type NextApiRequestQuery = Partial<{ [key: string]: string | string[] }>\n\nexport type __ApiPreviewProps = {\n  previewModeId: string\n  previewModeEncryptionKey: string\n  previewModeSigningKey: string\n}\n\nexport function wrapApiHandler<T extends (...args: any[]) => any>(\n  page: string,\n  handler: T\n): T {\n  return ((...args) => {\n    getTracer().setRootSpanAttribute('next.route', page)\n    // Call API route method\n    return getTracer().trace(\n      NodeSpan.runHandler,\n      {\n        spanName: `executing api route (pages) ${page}`,\n      },\n      () => handler(...args)\n    )\n  }) as T\n}\n\n/**\n *\n * @param res response object\n * @param statusCode `HTTP` status code of response\n */\nexport function sendStatusCode(\n  res: NextApiResponse,\n  statusCode: number\n): NextApiResponse<any> {\n  res.statusCode = statusCode\n  return res\n}\n\n/**\n *\n * @param res response object\n * @param [statusOrUrl] `HTTP` status code of redirect\n * @param url URL of redirect\n */\nexport function redirect(\n  res: NextApiResponse,\n  statusOrUrl: string | number,\n  url?: string\n): NextApiResponse<any> {\n  if (typeof statusOrUrl === 'string') {\n    url = statusOrUrl\n    statusOrUrl = 307\n  }\n  if (typeof statusOrUrl !== 'number' || typeof url !== 'string') {\n    throw new Error(\n      `Invalid redirect arguments. Please use a single argument URL, e.g. res.redirect('/destination') or use a status code and URL, e.g. res.redirect(307, '/destination').`\n    )\n  }\n  res.writeHead(statusOrUrl, { Location: url })\n  res.write(url)\n  res.end()\n  return res\n}\n\nexport function checkIsOnDemandRevalidate(\n  req: Request | IncomingMessage | BaseNextRequest,\n  previewProps: __ApiPreviewProps\n): {\n  isOnDemandRevalidate: boolean\n  revalidateOnlyGenerated: boolean\n} {\n  const headers = HeadersAdapter.from(req.headers)\n\n  const previewModeId = headers.get(PRERENDER_REVALIDATE_HEADER)\n  const isOnDemandRevalidate = previewModeId === previewProps.previewModeId\n\n  const revalidateOnlyGenerated = headers.has(\n    PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER\n  )\n\n  return { isOnDemandRevalidate, revalidateOnlyGenerated }\n}\n\nexport const COOKIE_NAME_PRERENDER_BYPASS = `__prerender_bypass`\nexport const COOKIE_NAME_PRERENDER_DATA = `__next_preview_data`\n\nexport const RESPONSE_LIMIT_DEFAULT = 4 * 1024 * 1024\n\nexport const SYMBOL_PREVIEW_DATA = Symbol(COOKIE_NAME_PRERENDER_DATA)\nexport const SYMBOL_CLEARED_COOKIES = Symbol(COOKIE_NAME_PRERENDER_BYPASS)\n\nexport function clearPreviewData<T>(\n  res: NextApiResponse<T>,\n  options: {\n    path?: string\n  } = {}\n): NextApiResponse<T> {\n  if (SYMBOL_CLEARED_COOKIES in res) {\n    return res\n  }\n\n  const { serialize } =\n    require('next/dist/compiled/cookie') as typeof import('next/dist/compiled/cookie')\n  const previous = res.getHeader('Set-Cookie')\n  res.setHeader(`Set-Cookie`, [\n    ...(typeof previous === 'string'\n      ? [previous]\n      : Array.isArray(previous)\n        ? previous\n        : []),\n    serialize(COOKIE_NAME_PRERENDER_BYPASS, '', {\n      // To delete a cookie, set `expires` to a date in the past:\n      // https://tools.ietf.org/html/rfc6265#section-4.1.1\n      // `Max-Age: 0` is not valid, thus ignored, and the cookie is persisted.\n      expires: new Date(0),\n      httpOnly: true,\n      sameSite: process.env.NODE_ENV !== 'development' ? 'none' : 'lax',\n      secure: process.env.NODE_ENV !== 'development',\n      path: '/',\n      ...(options.path !== undefined\n        ? ({ path: options.path } as CookieSerializeOptions)\n        : undefined),\n    }),\n    serialize(COOKIE_NAME_PRERENDER_DATA, '', {\n      // To delete a cookie, set `expires` to a date in the past:\n      // https://tools.ietf.org/html/rfc6265#section-4.1.1\n      // `Max-Age: 0` is not valid, thus ignored, and the cookie is persisted.\n      expires: new Date(0),\n      httpOnly: true,\n      sameSite: process.env.NODE_ENV !== 'development' ? 'none' : 'lax',\n      secure: process.env.NODE_ENV !== 'development',\n      path: '/',\n      ...(options.path !== undefined\n        ? ({ path: options.path } as CookieSerializeOptions)\n        : undefined),\n    }),\n  ])\n\n  Object.defineProperty(res, SYMBOL_CLEARED_COOKIES, {\n    value: true,\n    enumerable: false,\n  })\n  return res\n}\n\n/**\n * Custom error class\n */\nexport class ApiError extends Error {\n  readonly statusCode: number\n\n  constructor(statusCode: number, message: string) {\n    super(message)\n    this.statusCode = statusCode\n  }\n}\n\n/**\n * Sends error in `response`\n * @param res response object\n * @param statusCode of response\n * @param message of response\n */\nexport function sendError(\n  res: NextApiResponse,\n  statusCode: number,\n  message: string\n): void {\n  res.statusCode = statusCode\n  res.statusMessage = message\n  res.end(message)\n}\n\ninterface LazyProps {\n  req: IncomingMessage\n}\n\n/**\n * Execute getter function only if its needed\n * @param LazyProps `req` and `params` for lazyProp\n * @param prop name of property\n * @param getter function to get data\n */\nexport function setLazyProp<T>(\n  { req }: LazyProps,\n  prop: string,\n  getter: () => T\n): void {\n  const opts = { configurable: true, enumerable: true }\n  const optsReset = { ...opts, writable: true }\n\n  Object.defineProperty(req, prop, {\n    ...opts,\n    get: () => {\n      const value = getter()\n      // we set the property on the object to avoid recalculating it\n      Object.defineProperty(req, prop, { ...optsReset, value })\n      return value\n    },\n    set: (value) => {\n      Object.defineProperty(req, prop, { ...optsReset, value })\n    },\n  })\n}\n"],"names":["HeadersAdapter","PRERENDER_REVALIDATE_HEADER","PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER","getTracer","NodeSpan","wrapApiHandler","page","handler","args","setRootSpanAttribute","trace","runHandler","spanName","sendStatusCode","res","statusCode","redirect","statusOrUrl","url","Error","writeHead","Location","write","end","checkIsOnDemandRevalidate","req","previewProps","headers","from","previewModeId","get","isOnDemandRevalidate","revalidateOnlyGenerated","has","COOKIE_NAME_PRERENDER_BYPASS","COOKIE_NAME_PRERENDER_DATA","RESPONSE_LIMIT_DEFAULT","SYMBOL_PREVIEW_DATA","Symbol","SYMBOL_CLEARED_COOKIES","clearPreviewData","options","serialize","require","previous","getHeader","setHeader","Array","isArray","expires","Date","httpOnly","sameSite","process","env","NODE_ENV","secure","path","undefined","Object","defineProperty","value","enumerable","ApiError","constructor","message","sendError","statusMessage","setLazyProp","prop","getter","opts","configurable","optsReset","writable","set"],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3183, "column": 0}, "map": {"version":3,"sources":["file:///home/joeagharib/My-Github/taskhive/client/node_modules/next/dist/src/server/api-utils/get-cookie-parser.ts"],"sourcesContent":["import type { NextApiRequestCookies } from '.'\n\n/**\n * Parse cookies from the `headers` of request\n * @param req request object\n */\n\nexport function getCookieParser(headers: {\n  [key: string]: string | string[] | null | undefined\n}): () => NextApiRequestCookies {\n  return function parseCookie(): NextApiRequestCookies {\n    const { cookie } = headers\n\n    if (!cookie) {\n      return {}\n    }\n\n    const { parse: parseCookieFn } =\n      require('next/dist/compiled/cookie') as typeof import('next/dist/compiled/cookie')\n    return parseCookieFn(Array.isArray(cookie) ? cookie.join('; ') : cookie)\n  }\n}\n"],"names":["getCookieParser","headers","parseCookie","cookie","parse","parseCookieFn","require","Array","isArray","join"],"mappings":"AAEA;;;CAGC,GAED;;;;AAAO,SAASA,gBAAgBC,OAE/B;IACC,OAAO,SAASC;QACd,MAAM,EAAEC,MAAM,EAAE,GAAGF;QAEnB,IAAI,CAACE,QAAQ;YACX,OAAO,CAAC;QACV;QAEA,MAAM,EAAEC,OAAOC,aAAa,EAAE,GAC5BC,QAAQ;QACV,OAAOD,cAAcE,MAAMC,OAAO,CAACL,UAAUA,OAAOM,IAAI,CAAC,QAAQN;IACnE;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3204, "column": 0}, "map": {"version":3,"sources":["file:///home/joeagharib/My-Github/taskhive/client/node_modules/next/dist/src/server/base-http/index.ts"],"sourcesContent":["import type { IncomingHttpHeaders, OutgoingHttpHeaders } from 'http'\nimport type { I18NConfig } from '../config-shared'\n\nimport { RedirectStatusCode } from '../../client/components/redirect-status-code'\nimport type { NextApiRequestCookies } from '../api-utils'\nimport { getCookieParser } from '../api-utils/get-cookie-parser'\n\nexport interface BaseNextRequestConfig {\n  basePath: string | undefined\n  i18n?: I18NConfig\n  trailingSlash?: boolean | undefined\n}\n\nexport type FetchMetric = {\n  url: string\n  idx: number\n  end: number\n  start: number\n  method: string\n  status: number\n  cacheReason: string\n  cacheStatus: 'hit' | 'miss' | 'skip' | 'hmr'\n  cacheWarning?: string\n}\n\nexport type FetchMetrics = Array<FetchMetric>\n\nexport abstract class BaseNextRequest<Body = any> {\n  protected _cookies: NextApiRequestCookies | undefined\n  public abstract headers: IncomingHttpHeaders\n  public abstract fetchMetrics: FetchMetric[] | undefined\n\n  constructor(\n    public method: string,\n    public url: string,\n    public body: Body\n  ) {}\n\n  // Utils implemented using the abstract methods above\n\n  public get cookies() {\n    if (this._cookies) return this._cookies\n    return (this._cookies = getCookieParser(this.headers)())\n  }\n}\n\nexport abstract class BaseNextResponse<Destination = any> {\n  abstract statusCode: number | undefined\n  abstract statusMessage: string | undefined\n  abstract get sent(): boolean\n\n  constructor(public destination: Destination) {}\n\n  /**\n   * Sets a value for the header overwriting existing values\n   */\n  abstract setHeader(name: string, value: string | string[]): this\n\n  /**\n   * Removes a header\n   */\n  abstract removeHeader(name: string): this\n\n  /**\n   * Appends value for the given header name\n   */\n  abstract appendHeader(name: string, value: string): this\n\n  /**\n   * Get all values for a header as an array or undefined if no value is present\n   */\n  abstract getHeaderValues(name: string): string[] | undefined\n\n  abstract hasHeader(name: string): boolean\n\n  /**\n   * Get values for a header concatenated using `,` or undefined if no value is present\n   */\n  abstract getHeader(name: string): string | undefined\n\n  abstract getHeaders(): OutgoingHttpHeaders\n\n  abstract body(value: string): this\n\n  abstract send(): void\n\n  abstract onClose(callback: () => void): void\n\n  // Utils implemented using the abstract methods above\n\n  public redirect(destination: string, statusCode: number) {\n    this.setHeader('Location', destination)\n    this.statusCode = statusCode\n\n    // Since IE11 doesn't support the 308 header add backwards\n    // compatibility using refresh header\n    if (statusCode === RedirectStatusCode.PermanentRedirect) {\n      this.setHeader('Refresh', `0;url=${destination}`)\n    }\n\n    return this\n  }\n}\n"],"names":["RedirectStatusCode","getCookieParser","BaseNextRequest","constructor","method","url","body","cookies","_cookies","headers","BaseNextResponse","destination","redirect","statusCode","setHeader","PermanentRedirect"],"mappings":";;;;;;AAGA,SAASA,kBAAkB,QAAQ,+CAA8C;AAEjF,SAASC,eAAe,QAAQ,iCAAgC;;;AAsBzD,MAAeC;IAKpBC,YACSC,MAAc,EACdC,GAAW,EACXC,IAAU,CACjB;aAHOF,MAAAA,GAAAA;aACAC,GAAAA,GAAAA;aACAC,IAAAA,GAAAA;IACN;IAEH,qDAAqD;IAErD,IAAWC,UAAU;QACnB,IAAI,IAAI,CAACC,QAAQ,EAAE,OAAO,IAAI,CAACA,QAAQ;QACvC,OAAQ,IAAI,CAACA,QAAQ,OAAGP,2MAAAA,EAAgB,IAAI,CAACQ,OAAO;IACtD;AACF;AAEO,MAAeC;IAKpBP,YAAmBQ,WAAwB,CAAE;aAA1BA,WAAAA,GAAAA;IAA2B;IAqC9C,qDAAqD;IAE9CC,SAASD,WAAmB,EAAEE,UAAkB,EAAE;QACvD,IAAI,CAACC,SAAS,CAAC,YAAYH;QAC3B,IAAI,CAACE,UAAU,GAAGA;QAElB,0DAA0D;QAC1D,qCAAqC;QACrC,IAAIA,eAAeb,+MAAAA,CAAmBe,iBAAiB,EAAE;YACvD,IAAI,CAACD,SAAS,CAAC,WAAW,CAAC,MAAM,EAAEH,aAAa;QAClD;QAEA,OAAO,IAAI;IACb;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3246, "column": 0}, "map": {"version":3,"sources":["file:///home/joeagharib/My-Github/taskhive/client/node_modules/next/dist/src/server/base-http/node.ts"],"sourcesContent":["import type { ServerResponse, IncomingMessage } from 'http'\nimport type { Writable, Readable } from 'stream'\n\nimport { SYMBOL_CLEARED_COOKIES } from '../api-utils'\nimport type { NextApiRequestCookies } from '../api-utils'\n\nimport { NEXT_REQUEST_META } from '../request-meta'\nimport type { RequestMeta } from '../request-meta'\n\nimport { BaseNextRequest, BaseNextResponse, type FetchMetric } from './index'\nimport type { OutgoingHttpHeaders } from 'node:http'\n\ntype Req = IncomingMessage & {\n  [NEXT_REQUEST_META]?: RequestMeta\n  cookies?: NextApiRequestCookies\n  fetchMetrics?: FetchMetric[]\n}\n\nexport class NodeNextRequest extends BaseNextRequest<Readable> {\n  public headers = this._req.headers\n  public fetchMetrics: FetchMetric[] | undefined = this._req?.fetchMetrics;\n\n  [NEXT_REQUEST_META]: RequestMeta = this._req[NEXT_REQUEST_META] || {}\n\n  constructor(private _req: Req) {\n    super(_req.method!.toUpperCase(), _req.url!, _req)\n  }\n\n  get originalRequest() {\n    // Need to mimic these changes to the original req object for places where we use it:\n    // render.tsx, api/ssg requests\n    this._req[NEXT_REQUEST_META] = this[NEXT_REQUEST_META]\n    this._req.url = this.url\n    this._req.cookies = this.cookies\n    return this._req\n  }\n\n  set originalRequest(value: Req) {\n    this._req = value\n  }\n\n  private streaming = false\n\n  /**\n   * Returns the request body as a Web Readable Stream. The body here can only\n   * be read once as the body will start flowing as soon as the data handler\n   * is attached.\n   *\n   * @internal\n   */\n  public stream() {\n    if (this.streaming) {\n      throw new Error(\n        'Invariant: NodeNextRequest.stream() can only be called once'\n      )\n    }\n    this.streaming = true\n\n    return new ReadableStream({\n      start: (controller) => {\n        this._req.on('data', (chunk) => {\n          controller.enqueue(new Uint8Array(chunk))\n        })\n        this._req.on('end', () => {\n          controller.close()\n        })\n        this._req.on('error', (err) => {\n          controller.error(err)\n        })\n      },\n    })\n  }\n}\n\nexport class NodeNextResponse extends BaseNextResponse<Writable> {\n  private textBody: string | undefined = undefined\n\n  public [SYMBOL_CLEARED_COOKIES]?: boolean\n\n  get originalResponse() {\n    if (SYMBOL_CLEARED_COOKIES in this) {\n      this._res[SYMBOL_CLEARED_COOKIES] = this[SYMBOL_CLEARED_COOKIES]\n    }\n\n    return this._res\n  }\n\n  constructor(\n    private _res: ServerResponse & { [SYMBOL_CLEARED_COOKIES]?: boolean }\n  ) {\n    super(_res)\n  }\n\n  get sent() {\n    return this._res.finished || this._res.headersSent\n  }\n\n  get statusCode() {\n    return this._res.statusCode\n  }\n\n  set statusCode(value: number) {\n    this._res.statusCode = value\n  }\n\n  get statusMessage() {\n    return this._res.statusMessage\n  }\n\n  set statusMessage(value: string) {\n    this._res.statusMessage = value\n  }\n\n  setHeader(name: string, value: string | string[]): this {\n    this._res.setHeader(name, value)\n    return this\n  }\n\n  removeHeader(name: string): this {\n    this._res.removeHeader(name)\n    return this\n  }\n\n  getHeaderValues(name: string): string[] | undefined {\n    const values = this._res.getHeader(name)\n\n    if (values === undefined) return undefined\n\n    return (Array.isArray(values) ? values : [values]).map((value) =>\n      value.toString()\n    )\n  }\n\n  hasHeader(name: string): boolean {\n    return this._res.hasHeader(name)\n  }\n\n  getHeader(name: string): string | undefined {\n    const values = this.getHeaderValues(name)\n    return Array.isArray(values) ? values.join(',') : undefined\n  }\n\n  getHeaders(): OutgoingHttpHeaders {\n    return this._res.getHeaders()\n  }\n\n  appendHeader(name: string, value: string): this {\n    const currentValues = this.getHeaderValues(name) ?? []\n\n    if (!currentValues.includes(value)) {\n      this._res.setHeader(name, [...currentValues, value])\n    }\n\n    return this\n  }\n\n  body(value: string) {\n    this.textBody = value\n    return this\n  }\n\n  send() {\n    this._res.end(this.textBody)\n  }\n\n  public onClose(callback: () => void) {\n    this.originalResponse.on('close', callback)\n  }\n}\n"],"names":["SYMBOL_CLEARED_COOKIES","NEXT_REQUEST_META","BaseNextRequest","BaseNextResponse","NodeNextRequest","constructor","_req","method","toUpperCase","url","headers","fetchMetrics","streaming","originalRequest","cookies","value","stream","Error","ReadableStream","start","controller","on","chunk","enqueue","Uint8Array","close","err","error","NodeNextResponse","originalResponse","_res","textBody","undefined","sent","finished","headersSent","statusCode","statusMessage","setHeader","name","removeHeader","getHeaderValues","values","getHeader","Array","isArray","map","toString","hasHeader","join","getHeaders","appendHeader","currentValues","includes","body","send","end","onClose","callback"],"mappings":";;;;;;AAGA,SAASA,sBAAsB,QAAQ,eAAc;AAGrD,SAASC,iBAAiB,QAAQ,kBAAiB;AAGnD,SAASC,eAAe,EAAEC,gBAAgB,QAA0B,UAAS;;;;;AAStE,MAAMC,wBAAwBF,yLAAAA;uBAIlCD,qBAAAA,qLAAAA,CAAAA;IAEDI,YAAoBC,IAAS,CAAE;YAJkB;QAK/C,KAAK,CAACA,KAAKC,MAAM,CAAEC,WAAW,IAAIF,KAAKG,GAAG,EAAGH,OAAAA,IAAAA,CAD3BA,IAAAA,GAAAA,MAAAA,IAAAA,CALbI,OAAAA,GAAU,IAAI,CAACJ,IAAI,CAACI,OAAO,EAAA,IAAA,CAC3BC,YAAAA,GAAAA,CAA0C,aAAA,IAAI,CAACL,IAAI,KAAA,OAAA,KAAA,IAAT,WAAWK,YAAY,EAAA,IAExE,CAACV,mBAAkB,GAAgB,IAAI,CAACK,IAAI,CAACL,qLAAAA,CAAkB,IAAI,CAAC,GAAA,IAAA,CAmB5DW,SAAAA,GAAY;IAfpB;IAEA,IAAIC,kBAAkB;QACpB,qFAAqF;QACrF,+BAA+B;QAC/B,IAAI,CAACP,IAAI,CAACL,qLAAAA,CAAkB,GAAG,IAAI,CAACA,qLAAAA,CAAkB;QACtD,IAAI,CAACK,IAAI,CAACG,GAAG,GAAG,IAAI,CAACA,GAAG;QACxB,IAAI,CAACH,IAAI,CAACQ,OAAO,GAAG,IAAI,CAACA,OAAO;QAChC,OAAO,IAAI,CAACR,IAAI;IAClB;IAEA,IAAIO,gBAAgBE,KAAU,EAAE;QAC9B,IAAI,CAACT,IAAI,GAAGS;IACd;IAIA;;;;;;GAMC,GACMC,SAAS;QACd,IAAI,IAAI,CAACJ,SAAS,EAAE;YAClB,MAAM,OAAA,cAEL,CAFK,IAAIK,MACR,gEADI,qBAAA;uBAAA;4BAAA;8BAAA;YAEN;QACF;QACA,IAAI,CAACL,SAAS,GAAG;QAEjB,OAAO,IAAIM,eAAe;YACxBC,OAAO,CAACC;gBACN,IAAI,CAACd,IAAI,CAACe,EAAE,CAAC,QAAQ,CAACC;oBACpBF,WAAWG,OAAO,CAAC,IAAIC,WAAWF;gBACpC;gBACA,IAAI,CAAChB,IAAI,CAACe,EAAE,CAAC,OAAO;oBAClBD,WAAWK,KAAK;gBAClB;gBACA,IAAI,CAACnB,IAAI,CAACe,EAAE,CAAC,SAAS,CAACK;oBACrBN,WAAWO,KAAK,CAACD;gBACnB;YACF;QACF;IACF;AACF;AAEO,MAAME,yBAAyBzB,0LAAAA;IAKpC,IAAI0B,mBAAmB;QACrB,IAAI7B,gMAAAA,IAA0B,IAAI,EAAE;YAClC,IAAI,CAAC8B,IAAI,CAAC9B,gMAAAA,CAAuB,GAAG,IAAI,CAACA,gMAAAA,CAAuB;QAClE;QAEA,OAAO,IAAI,CAAC8B,IAAI;IAClB;IAEAzB,YACUyB,IAA6D,CACrE;QACA,KAAK,CAACA,OAAAA,IAAAA,CAFEA,IAAAA,GAAAA,MAAAA,IAAAA,CAbFC,QAAAA,GAA+BC;IAgBvC;IAEA,IAAIC,OAAO;QACT,OAAO,IAAI,CAACH,IAAI,CAACI,QAAQ,IAAI,IAAI,CAACJ,IAAI,CAACK,WAAW;IACpD;IAEA,IAAIC,aAAa;QACf,OAAO,IAAI,CAACN,IAAI,CAACM,UAAU;IAC7B;IAEA,IAAIA,WAAWrB,KAAa,EAAE;QAC5B,IAAI,CAACe,IAAI,CAACM,UAAU,GAAGrB;IACzB;IAEA,IAAIsB,gBAAgB;QAClB,OAAO,IAAI,CAACP,IAAI,CAACO,aAAa;IAChC;IAEA,IAAIA,cAActB,KAAa,EAAE;QAC/B,IAAI,CAACe,IAAI,CAACO,aAAa,GAAGtB;IAC5B;IAEAuB,UAAUC,IAAY,EAAExB,KAAwB,EAAQ;QACtD,IAAI,CAACe,IAAI,CAACQ,SAAS,CAACC,MAAMxB;QAC1B,OAAO,IAAI;IACb;IAEAyB,aAAaD,IAAY,EAAQ;QAC/B,IAAI,CAACT,IAAI,CAACU,YAAY,CAACD;QACvB,OAAO,IAAI;IACb;IAEAE,gBAAgBF,IAAY,EAAwB;QAClD,MAAMG,SAAS,IAAI,CAACZ,IAAI,CAACa,SAAS,CAACJ;QAEnC,IAAIG,WAAWV,WAAW,OAAOA;QAEjC,OAAQY,CAAAA,MAAMC,OAAO,CAACH,UAAUA,SAAS;YAACA;SAAM,EAAGI,GAAG,CAAC,CAAC/B,QACtDA,MAAMgC,QAAQ;IAElB;IAEAC,UAAUT,IAAY,EAAW;QAC/B,OAAO,IAAI,CAACT,IAAI,CAACkB,SAAS,CAACT;IAC7B;IAEAI,UAAUJ,IAAY,EAAsB;QAC1C,MAAMG,SAAS,IAAI,CAACD,eAAe,CAACF;QACpC,OAAOK,MAAMC,OAAO,CAACH,UAAUA,OAAOO,IAAI,CAAC,OAAOjB;IACpD;IAEAkB,aAAkC;QAChC,OAAO,IAAI,CAACpB,IAAI,CAACoB,UAAU;IAC7B;IAEAC,aAAaZ,IAAY,EAAExB,KAAa,EAAQ;QAC9C,MAAMqC,gBAAgB,IAAI,CAACX,eAAe,CAACF,SAAS,EAAE;QAEtD,IAAI,CAACa,cAAcC,QAAQ,CAACtC,QAAQ;YAClC,IAAI,CAACe,IAAI,CAACQ,SAAS,CAACC,MAAM;mBAAIa;gBAAerC;aAAM;QACrD;QAEA,OAAO,IAAI;IACb;IAEAuC,KAAKvC,KAAa,EAAE;QAClB,IAAI,CAACgB,QAAQ,GAAGhB;QAChB,OAAO,IAAI;IACb;IAEAwC,OAAO;QACL,IAAI,CAACzB,IAAI,CAAC0B,GAAG,CAAC,IAAI,CAACzB,QAAQ;IAC7B;IAEO0B,QAAQC,QAAoB,EAAE;QACnC,IAAI,CAAC7B,gBAAgB,CAACR,EAAE,CAAC,SAASqC;IACpC;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3382, "column": 0}, "map": {"version":3,"sources":["file:///home/joeagharib/My-Github/taskhive/client/node_modules/next/dist/src/server/lib/experimental/ppr.ts"],"sourcesContent":["/**\n * If set to `incremental`, only those leaf pages that export\n * `experimental_ppr = true` will have partial prerendering enabled. If any\n * page exports this value as `false` or does not export it at all will not\n * have partial prerendering enabled. If set to a boolean, the options for\n * `experimental_ppr` will be ignored.\n */\n\nexport type ExperimentalPPRConfig = boolean | 'incremental'\n\n/**\n * Returns true if partial prerendering is enabled for the application. It does\n * not tell you if a given route has PPR enabled, as that requires analysis of\n * the route's configuration.\n *\n * @see {@link checkIsRoutePPREnabled} - for checking if a specific route has PPR enabled.\n */\nexport function checkIsAppPPREnabled(\n  config: ExperimentalPPRConfig | undefined\n): boolean {\n  // If the config is undefined, partial prerendering is disabled.\n  if (typeof config === 'undefined') return false\n\n  // If the config is a boolean, use it directly.\n  if (typeof config === 'boolean') return config\n\n  // If the config is a string, it must be 'incremental' to enable partial\n  // prerendering.\n  if (config === 'incremental') return true\n\n  return false\n}\n\n/**\n * Returns true if partial prerendering is supported for the current page with\n * the provided app configuration. If the application doesn't have partial\n * prerendering enabled, this function will always return false. If you want to\n * check if the application has partial prerendering enabled\n *\n * @see {@link checkIsAppPPREnabled} for checking if the application has PPR enabled.\n */\nexport function checkIsRoutePPREnabled(\n  config: ExperimentalPPRConfig | undefined,\n  appConfig: {\n    experimental_ppr?: boolean\n  }\n): boolean {\n  // If the config is undefined, partial prerendering is disabled.\n  if (typeof config === 'undefined') return false\n\n  // If the config is a boolean, use it directly.\n  if (typeof config === 'boolean') return config\n\n  // If the config is a string, it must be 'incremental' to enable partial\n  // prerendering.\n  if (config === 'incremental' && appConfig.experimental_ppr === true) {\n    return true\n  }\n\n  return false\n}\n"],"names":["checkIsAppPPREnabled","config","checkIsRoutePPREnabled","appConfig","experimental_ppr"],"mappings":"AAAA;;;;;;CAMC,GAID;;;;;;CAMC,GACD;;;;;;AAAO,SAASA,qBACdC,MAAyC;IAEzC,gEAAgE;IAChE,IAAI,OAAOA,WAAW,aAAa,OAAO;IAE1C,+CAA+C;IAC/C,IAAI,OAAOA,WAAW,WAAW,OAAOA;IAExC,wEAAwE;IACxE,gBAAgB;IAChB,IAAIA,WAAW,eAAe,OAAO;IAErC,OAAO;AACT;AAUO,SAASC,uBACdD,MAAyC,EACzCE,SAEC;IAED,gEAAgE;IAChE,IAAI,OAAOF,WAAW,aAAa,OAAO;IAE1C,+CAA+C;IAC/C,IAAI,OAAOA,WAAW,WAAW,OAAOA;IAExC,wEAAwE;IACxE,gBAAgB;IAChB,IAAIA,WAAW,iBAAiBE,UAAUC,gBAAgB,KAAK,MAAM;QACnE,OAAO;IACT;IAEA,OAAO;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3426, "column": 0}, "map": {"version":3,"sources":["file:///home/joeagharib/My-Github/taskhive/client/node_modules/next/dist/src/shared/lib/utils.ts"],"sourcesContent":["import type { HtmlProps } from './html-context.shared-runtime'\nimport type { ComponentType, JSX } from 'react'\nimport type { DomainLocale } from '../../server/config'\nimport type { Env } from '@next/env'\nimport type { IncomingMessage, ServerResponse } from 'http'\nimport type { NextRouter } from './router/router'\nimport type { ParsedUrlQuery } from 'querystring'\nimport type { PreviewData } from '../../types'\nimport type { COMPILER_NAMES } from './constants'\nimport type fs from 'fs'\n\nexport type NextComponentType<\n  Context extends BaseContext = NextPageContext,\n  InitialProps = {},\n  Props = {},\n> = ComponentType<Props> & {\n  /**\n   * Used for initial page load data population. Data returned from `getInitialProps` is serialized when server rendered.\n   * Make sure to return plain `Object` without using `Date`, `Map`, `Set`.\n   * @param context Context of `page`\n   */\n  getInitialProps?(context: Context): InitialProps | Promise<InitialProps>\n}\n\nexport type DocumentType = NextComponentType<\n  DocumentContext,\n  DocumentInitialProps,\n  DocumentProps\n>\n\nexport type AppType<P = {}> = NextComponentType<\n  AppContextType,\n  P,\n  AppPropsType<any, P>\n>\n\nexport type AppTreeType = ComponentType<\n  AppInitialProps & { [name: string]: any }\n>\n\n/**\n * Web vitals provided to _app.reportWebVitals by Core Web Vitals plugin developed by Google Chrome team.\n * https://nextjs.org/blog/next-9-4#integrated-web-vitals-reporting\n */\nexport const WEB_VITALS = ['CLS', 'FCP', 'FID', 'INP', 'LCP', 'TTFB'] as const\nexport type NextWebVitalsMetric = {\n  id: string\n  startTime: number\n  value: number\n  attribution?: { [key: string]: unknown }\n} & (\n  | {\n      label: 'web-vital'\n      name: (typeof WEB_VITALS)[number]\n    }\n  | {\n      label: 'custom'\n      name:\n        | 'Next.js-hydration'\n        | 'Next.js-route-change-to-render'\n        | 'Next.js-render'\n    }\n)\n\nexport type Enhancer<C> = (Component: C) => C\n\nexport type ComponentsEnhancer =\n  | {\n      enhanceApp?: Enhancer<AppType>\n      enhanceComponent?: Enhancer<NextComponentType>\n    }\n  | Enhancer<NextComponentType>\n\nexport type RenderPageResult = {\n  html: string\n  head?: Array<JSX.Element | null>\n}\n\nexport type RenderPage = (\n  options?: ComponentsEnhancer\n) => DocumentInitialProps | Promise<DocumentInitialProps>\n\nexport type BaseContext = {\n  res?: ServerResponse\n  [k: string]: any\n}\n\nexport type NEXT_DATA = {\n  props: Record<string, any>\n  page: string\n  query: ParsedUrlQuery\n  buildId: string\n  assetPrefix?: string\n  runtimeConfig?: { [key: string]: any }\n  nextExport?: boolean\n  autoExport?: boolean\n  isFallback?: boolean\n  isExperimentalCompile?: boolean\n  dynamicIds?: (string | number)[]\n  err?: Error & {\n    statusCode?: number\n    source?: typeof COMPILER_NAMES.server | typeof COMPILER_NAMES.edgeServer\n  }\n  gsp?: boolean\n  gssp?: boolean\n  customServer?: boolean\n  gip?: boolean\n  appGip?: boolean\n  locale?: string\n  locales?: readonly string[]\n  defaultLocale?: string\n  domainLocales?: readonly DomainLocale[]\n  scriptLoader?: any[]\n  isPreview?: boolean\n  notFoundSrcPage?: string\n}\n\n/**\n * `Next` context\n */\nexport interface NextPageContext {\n  /**\n   * Error object if encountered during rendering\n   */\n  err?: (Error & { statusCode?: number }) | null\n  /**\n   * `HTTP` request object.\n   */\n  req?: IncomingMessage\n  /**\n   * `HTTP` response object.\n   */\n  res?: ServerResponse\n  /**\n   * Path section of `URL`.\n   */\n  pathname: string\n  /**\n   * Query string section of `URL` parsed as an object.\n   */\n  query: ParsedUrlQuery\n  /**\n   * `String` of the actual path including query.\n   */\n  asPath?: string\n  /**\n   * The currently active locale\n   */\n  locale?: string\n  /**\n   * All configured locales\n   */\n  locales?: readonly string[]\n  /**\n   * The configured default locale\n   */\n  defaultLocale?: string\n  /**\n   * `Component` the tree of the App to use if needing to render separately\n   */\n  AppTree: AppTreeType\n}\n\nexport type AppContextType<Router extends NextRouter = NextRouter> = {\n  Component: NextComponentType<NextPageContext>\n  AppTree: AppTreeType\n  ctx: NextPageContext\n  router: Router\n}\n\nexport type AppInitialProps<PageProps = any> = {\n  pageProps: PageProps\n}\n\nexport type AppPropsType<\n  Router extends NextRouter = NextRouter,\n  PageProps = {},\n> = AppInitialProps<PageProps> & {\n  Component: NextComponentType<NextPageContext, any, any>\n  router: Router\n  __N_SSG?: boolean\n  __N_SSP?: boolean\n}\n\nexport type DocumentContext = NextPageContext & {\n  renderPage: RenderPage\n  defaultGetInitialProps(\n    ctx: DocumentContext,\n    options?: { nonce?: string }\n  ): Promise<DocumentInitialProps>\n}\n\nexport type DocumentInitialProps = RenderPageResult & {\n  styles?: React.ReactElement[] | Iterable<React.ReactNode> | JSX.Element\n}\n\nexport type DocumentProps = DocumentInitialProps & HtmlProps\n\n/**\n * Next `API` route request\n */\nexport interface NextApiRequest extends IncomingMessage {\n  /**\n   * Object of `query` values from url\n   */\n  query: Partial<{\n    [key: string]: string | string[]\n  }>\n  /**\n   * Object of `cookies` from header\n   */\n  cookies: Partial<{\n    [key: string]: string\n  }>\n\n  body: any\n\n  env: Env\n\n  draftMode?: boolean\n\n  preview?: boolean\n  /**\n   * Preview data set on the request, if any\n   * */\n  previewData?: PreviewData\n}\n\n/**\n * Send body of response\n */\ntype Send<T> = (body: T) => void\n\n/**\n * Next `API` route response\n */\nexport type NextApiResponse<Data = any> = ServerResponse & {\n  /**\n   * Send data `any` data in response\n   */\n  send: Send<Data>\n  /**\n   * Send data `json` data in response\n   */\n  json: Send<Data>\n  status: (statusCode: number) => NextApiResponse<Data>\n  redirect(url: string): NextApiResponse<Data>\n  redirect(status: number, url: string): NextApiResponse<Data>\n\n  /**\n   * Set draft mode\n   */\n  setDraftMode: (options: { enable: boolean }) => NextApiResponse<Data>\n\n  /**\n   * Set preview data for Next.js' prerender mode\n   */\n  setPreviewData: (\n    data: object | string,\n    options?: {\n      /**\n       * Specifies the number (in seconds) for the preview session to last for.\n       * The given number will be converted to an integer by rounding down.\n       * By default, no maximum age is set and the preview session finishes\n       * when the client shuts down (browser is closed).\n       */\n      maxAge?: number\n      /**\n       * Specifies the path for the preview session to work under. By default,\n       * the path is considered the \"default path\", i.e., any pages under \"/\".\n       */\n      path?: string\n    }\n  ) => NextApiResponse<Data>\n\n  /**\n   * Clear preview data for Next.js' prerender mode\n   */\n  clearPreviewData: (options?: { path?: string }) => NextApiResponse<Data>\n\n  /**\n   * Revalidate a specific page and regenerate it using On-Demand Incremental\n   * Static Regeneration.\n   * The path should be an actual path, not a rewritten path. E.g. for\n   * \"/blog/[slug]\" this should be \"/blog/post-1\".\n   * @link https://nextjs.org/docs/app/building-your-application/data-fetching/incremental-static-regeneration#on-demand-revalidation-with-revalidatepath\n   */\n  revalidate: (\n    urlPath: string,\n    opts?: {\n      unstable_onlyGenerated?: boolean\n    }\n  ) => Promise<void>\n}\n\n/**\n * Next `API` route handler\n */\nexport type NextApiHandler<T = any> = (\n  req: NextApiRequest,\n  res: NextApiResponse<T>\n) => unknown | Promise<unknown>\n\n/**\n * Utils\n */\nexport function execOnce<T extends (...args: any[]) => ReturnType<T>>(\n  fn: T\n): T {\n  let used = false\n  let result: ReturnType<T>\n\n  return ((...args: any[]) => {\n    if (!used) {\n      used = true\n      result = fn(...args)\n    }\n    return result\n  }) as T\n}\n\n// Scheme: https://tools.ietf.org/html/rfc3986#section-3.1\n// Absolute URL: https://tools.ietf.org/html/rfc3986#section-4.3\nconst ABSOLUTE_URL_REGEX = /^[a-zA-Z][a-zA-Z\\d+\\-.]*?:/\nexport const isAbsoluteUrl = (url: string) => ABSOLUTE_URL_REGEX.test(url)\n\nexport function getLocationOrigin() {\n  const { protocol, hostname, port } = window.location\n  return `${protocol}//${hostname}${port ? ':' + port : ''}`\n}\n\nexport function getURL() {\n  const { href } = window.location\n  const origin = getLocationOrigin()\n  return href.substring(origin.length)\n}\n\nexport function getDisplayName<P>(Component: ComponentType<P>) {\n  return typeof Component === 'string'\n    ? Component\n    : Component.displayName || Component.name || 'Unknown'\n}\n\nexport function isResSent(res: ServerResponse) {\n  return res.finished || res.headersSent\n}\n\nexport function normalizeRepeatedSlashes(url: string) {\n  const urlParts = url.split('?')\n  const urlNoQuery = urlParts[0]\n\n  return (\n    urlNoQuery\n      // first we replace any non-encoded backslashes with forward\n      // then normalize repeated forward slashes\n      .replace(/\\\\/g, '/')\n      .replace(/\\/\\/+/g, '/') +\n    (urlParts[1] ? `?${urlParts.slice(1).join('?')}` : '')\n  )\n}\n\nexport async function loadGetInitialProps<\n  C extends BaseContext,\n  IP = {},\n  P = {},\n>(App: NextComponentType<C, IP, P>, ctx: C): Promise<IP> {\n  if (process.env.NODE_ENV !== 'production') {\n    if (App.prototype?.getInitialProps) {\n      const message = `\"${getDisplayName(\n        App\n      )}.getInitialProps()\" is defined as an instance method - visit https://nextjs.org/docs/messages/get-initial-props-as-an-instance-method for more information.`\n      throw new Error(message)\n    }\n  }\n  // when called from _app `ctx` is nested in `ctx`\n  const res = ctx.res || (ctx.ctx && ctx.ctx.res)\n\n  if (!App.getInitialProps) {\n    if (ctx.ctx && ctx.Component) {\n      // @ts-ignore pageProps default\n      return {\n        pageProps: await loadGetInitialProps(ctx.Component, ctx.ctx),\n      }\n    }\n    return {} as IP\n  }\n\n  const props = await App.getInitialProps(ctx)\n\n  if (res && isResSent(res)) {\n    return props\n  }\n\n  if (!props) {\n    const message = `\"${getDisplayName(\n      App\n    )}.getInitialProps()\" should resolve to an object. But found \"${props}\" instead.`\n    throw new Error(message)\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (Object.keys(props).length === 0 && !ctx.ctx) {\n      console.warn(\n        `${getDisplayName(\n          App\n        )} returned an empty object from \\`getInitialProps\\`. This de-optimizes and prevents automatic static optimization. https://nextjs.org/docs/messages/empty-object-getInitialProps`\n      )\n    }\n  }\n\n  return props\n}\n\nexport const SP = typeof performance !== 'undefined'\nexport const ST =\n  SP &&\n  (['mark', 'measure', 'getEntriesByName'] as const).every(\n    (method) => typeof performance[method] === 'function'\n  )\n\nexport class DecodeError extends Error {}\nexport class NormalizeError extends Error {}\nexport class PageNotFoundError extends Error {\n  code: string\n\n  constructor(page: string) {\n    super()\n    this.code = 'ENOENT'\n    this.name = 'PageNotFoundError'\n    this.message = `Cannot find module for page: ${page}`\n  }\n}\n\nexport class MissingStaticPage extends Error {\n  constructor(page: string, message: string) {\n    super()\n    this.message = `Failed to load static file for page: ${page} ${message}`\n  }\n}\n\nexport class MiddlewareNotFoundError extends Error {\n  code: string\n  constructor() {\n    super()\n    this.code = 'ENOENT'\n    this.message = `Cannot find the middleware module`\n  }\n}\n\nexport interface CacheFs {\n  existsSync: typeof fs.existsSync\n  readFile: typeof fs.promises.readFile\n  readFileSync: typeof fs.readFileSync\n  writeFile(f: string, d: any): Promise<void>\n  mkdir(dir: string): Promise<void | string>\n  stat(f: string): Promise<{ mtime: Date }>\n}\n\nexport function stringifyError(error: Error) {\n  return JSON.stringify({ message: error.message, stack: error.stack })\n}\n"],"names":["WEB_VITALS","execOnce","fn","used","result","args","ABSOLUTE_URL_REGEX","isAbsoluteUrl","url","test","getLocationOrigin","protocol","hostname","port","window","location","getURL","href","origin","substring","length","getDisplayName","Component","displayName","name","isResSent","res","finished","headersSent","normalizeRepeatedSlashes","urlParts","split","urlNoQuery","replace","slice","join","loadGetInitialProps","App","ctx","process","env","NODE_ENV","prototype","getInitialProps","message","Error","pageProps","props","Object","keys","console","warn","SP","performance","ST","every","method","DecodeError","NormalizeError","PageNotFoundError","constructor","page","code","MissingStaticPage","MiddlewareNotFoundError","stringifyError","error","JSON","stringify","stack"],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3596, "column": 0}, "map": {"version":3,"sources":["file:///home/joeagharib/My-Github/taskhive/client/node_modules/next/dist/src/lib/route-pattern-normalizer.ts"],"sourcesContent":["import type { Token } from 'next/dist/compiled/path-to-regexp'\n\n/**\n * Route pattern normalization utilities for path-to-regexp compatibility.\n *\n * path-to-regexp 6.3.0+ introduced stricter validation that rejects certain\n * patterns commonly used in Next.js interception routes. This module provides\n * normalization functions to make Next.js route patterns compatible with the\n * updated library while preserving all functionality.\n */\n\n/**\n * Internal separator used to normalize adjacent parameter patterns.\n * This unique marker is inserted between adjacent parameters and stripped out\n * during parameter extraction to avoid conflicts with real URL content.\n */\nconst PARAM_SEPARATOR = '_NEXTSEP_'\n\n/**\n * Detects if a route pattern needs normalization for path-to-regexp compatibility.\n */\nexport function hasAdjacentParameterIssues(route: string): boolean {\n  if (typeof route !== 'string') return false\n\n  // Check for interception route markers followed immediately by parameters\n  // Pattern: /(.):param, /(..):param, /(...):param, /(.)(.):param etc.\n  // These patterns cause \"Must have text between two parameters\" errors\n  if (/\\/\\(\\.{1,3}\\):[^/\\s]+/.test(route)) {\n    return true\n  }\n\n  // Check for basic adjacent parameters without separators\n  // Pattern: :param1:param2 (but not :param* or other URL patterns)\n  if (/:[a-zA-Z_][a-zA-Z0-9_]*:[a-zA-Z_][a-zA-Z0-9_]*/.test(route)) {\n    return true\n  }\n\n  return false\n}\n\n/**\n * Normalizes route patterns that have adjacent parameters without text between them.\n * Inserts a unique separator that can be safely stripped out later.\n */\nexport function normalizeAdjacentParameters(route: string): string {\n  let normalized = route\n\n  // Handle interception route patterns: (.):param -> (.)_NEXTSEP_:param\n  normalized = normalized.replace(\n    /(\\([^)]*\\)):([^/\\s]+)/g,\n    `$1${PARAM_SEPARATOR}:$2`\n  )\n\n  // Handle other adjacent parameter patterns: :param1:param2 -> :param1_NEXTSEP_:param2\n  normalized = normalized.replace(/:([^:/\\s)]+)(?=:)/g, `:$1${PARAM_SEPARATOR}`)\n\n  return normalized\n}\n\n/**\n * Normalizes tokens that have repeating modifiers (* or +) but empty prefix and suffix.\n *\n * path-to-regexp 6.3.0+ introduced validation that throws:\n * \"Can not repeat without prefix/suffix\"\n *\n * This occurs when a token has modifier: '*' or '+' with both prefix: '' and suffix: ''\n */\nexport function normalizeTokensForRegexp(tokens: Token[]): Token[] {\n  return tokens.map((token) => {\n    // Token union type: Token = string | TokenObject\n    // Literal path segments are strings, parameters/wildcards are objects\n    if (\n      typeof token === 'object' &&\n      token !== null &&\n      // Not all token objects have 'modifier' property (e.g., simple text tokens)\n      'modifier' in token &&\n      // Only repeating modifiers (* or +) cause the validation error\n      // Other modifiers like '?' (optional) are fine\n      (token.modifier === '*' || token.modifier === '+') &&\n      // Token objects can have different shapes depending on route pattern\n      'prefix' in token &&\n      'suffix' in token &&\n      // Both prefix and suffix must be empty strings\n      // This is what causes the validation error in path-to-regexp\n      token.prefix === '' &&\n      token.suffix === ''\n    ) {\n      // Add minimal prefix to satisfy path-to-regexp validation\n      // We use '/' as it's the most common path delimiter and won't break route matching\n      // The prefix gets used in regex generation but doesn't affect parameter extraction\n      return {\n        ...token,\n        prefix: '/',\n      }\n    }\n    return token\n  })\n}\n\n/**\n * Strips normalization separators from extracted route parameters.\n * Used by both server and client code to clean up parameters after route matching.\n */\nexport function stripParameterSeparators(\n  params: Record<string, any>\n): Record<string, any> {\n  const cleaned: Record<string, any> = {}\n\n  for (const [key, value] of Object.entries(params)) {\n    if (typeof value === 'string') {\n      // Remove the separator if it appears at the start of parameter values\n      cleaned[key] = value.replace(new RegExp(`^${PARAM_SEPARATOR}`), '')\n    } else if (Array.isArray(value)) {\n      // Handle array parameters (from repeated route segments)\n      cleaned[key] = value.map((item) =>\n        typeof item === 'string'\n          ? item.replace(new RegExp(`^${PARAM_SEPARATOR}`), '')\n          : item\n      )\n    } else {\n      cleaned[key] = value\n    }\n  }\n\n  return cleaned\n}\n"],"names":["PARAM_SEPARATOR","hasAdjacentParameterIssues","route","test","normalizeAdjacentParameters","normalized","replace","normalizeTokensForRegexp","tokens","map","token","modifier","prefix","suffix","stripParameterSeparators","params","cleaned","key","value","Object","entries","RegExp","Array","isArray","item"],"mappings":"AAEA;;;;;;;CAOC,GAED;;;;CAIC;;;;;;;;;;AACD,MAAMA,kBAAkB;AAKjB,SAASC,2BAA2BC,KAAa;IACtD,IAAI,OAAOA,UAAU,UAAU,OAAO;IAEtC,0EAA0E;IAC1E,qEAAqE;IACrE,sEAAsE;IACtE,IAAI,wBAAwBC,IAAI,CAACD,QAAQ;QACvC,OAAO;IACT;IAEA,yDAAyD;IACzD,kEAAkE;IAClE,IAAI,iDAAiDC,IAAI,CAACD,QAAQ;QAChE,OAAO;IACT;IAEA,OAAO;AACT;AAMO,SAASE,4BAA4BF,KAAa;IACvD,IAAIG,aAAaH;IAEjB,sEAAsE;IACtEG,aAAaA,WAAWC,OAAO,CAC7B,0BACA,CAAC,EAAE,EAAEN,gBAAgB,GAAG,CAAC;IAG3B,sFAAsF;IACtFK,aAAaA,WAAWC,OAAO,CAAC,sBAAsB,CAAC,GAAG,EAAEN,iBAAiB;IAE7E,OAAOK;AACT;AAUO,SAASE,yBAAyBC,MAAe;IACtD,OAAOA,OAAOC,GAAG,CAAC,CAACC;QACjB,iDAAiD;QACjD,sEAAsE;QACtE,IACE,OAAOA,UAAU,YACjBA,UAAU,QACV,4EAA4E;QAC5E,cAAcA,SACd,+DAA+D;QAC/D,+CAA+C;QAC9CA,CAAAA,MAAMC,QAAQ,KAAK,OAAOD,MAAMC,QAAQ,KAAK,GAAE,KAChD,qEAAqE;QACrE,YAAYD,SACZ,YAAYA,SACZ,+CAA+C;QAC/C,6DAA6D;QAC7DA,MAAME,MAAM,KAAK,MACjBF,MAAMG,MAAM,KAAK,IACjB;YACA,0DAA0D;YAC1D,mFAAmF;YACnF,mFAAmF;YACnF,OAAO;gBACL,GAAGH,KAAK;gBACRE,QAAQ;YACV;QACF;QACA,OAAOF;IACT;AACF;AAMO,SAASI,yBACdC,MAA2B;IAE3B,MAAMC,UAA+B,CAAC;IAEtC,KAAK,MAAM,CAACC,KAAKC,MAAM,IAAIC,OAAOC,OAAO,CAACL,QAAS;QACjD,IAAI,OAAOG,UAAU,UAAU;YAC7B,sEAAsE;YACtEF,OAAO,CAACC,IAAI,GAAGC,MAAMZ,OAAO,CAAC,IAAIe,OAAO,CAAC,CAAC,EAAErB,iBAAiB,GAAG;QAClE,OAAO,IAAIsB,MAAMC,OAAO,CAACL,QAAQ;YAC/B,yDAAyD;YACzDF,OAAO,CAACC,IAAI,GAAGC,MAAMT,GAAG,CAAC,CAACe,OACxB,OAAOA,SAAS,WACZA,KAAKlB,OAAO,CAAC,IAAIe,OAAO,CAAC,CAAC,EAAErB,iBAAiB,GAAG,MAChDwB;QAER,OAAO;YACLR,OAAO,CAACC,IAAI,GAAGC;QACjB;IACF;IAEA,OAAOF;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3682, "column": 0}, "map": {"version":3,"sources":["file:///home/joeagharib/My-Github/taskhive/client/node_modules/next/dist/src/shared/lib/router/utils/route-match-utils.ts"],"sourcesContent":["/**\n * Client-safe utilities for route matching that don't import server-side\n * utilities to avoid bundling issues with Turbopack\n */\n\nimport type {\n  Key,\n  TokensToRegexpOptions,\n  ParseOptions,\n  TokensToFunctionOptions,\n} from 'next/dist/compiled/path-to-regexp'\nimport {\n  pathToRegexp,\n  compile,\n  regexpToFunction,\n} from 'next/dist/compiled/path-to-regexp'\nimport {\n  hasAdjacentParameterIssues,\n  normalizeAdjacentParameters,\n  stripParameterSeparators,\n} from '../../../../lib/route-pattern-normalizer'\n\n/**\n * Client-safe wrapper around pathToRegexp that handles path-to-regexp 6.3.0+ validation errors.\n * This includes both \"Can not repeat without prefix/suffix\" and \"Must have text between parameters\" errors.\n */\nexport function safePathToRegexp(\n  route: string | RegExp | Array<string | RegExp>,\n  keys?: Key[],\n  options?: TokensToRegexpOptions & ParseOptions\n): RegExp {\n  if (typeof route !== 'string') {\n    return pathToRegexp(route, keys, options)\n  }\n\n  // Check if normalization is needed and cache the result\n  const needsNormalization = hasAdjacentParameterIssues(route)\n  const routeToUse = needsNormalization\n    ? normalizeAdjacentParameters(route)\n    : route\n\n  try {\n    return pathToRegexp(routeToUse, keys, options)\n  } catch (error) {\n    // Only try normalization if we haven't already normalized\n    if (!needsNormalization) {\n      try {\n        const normalizedRoute = normalizeAdjacentParameters(route)\n        return pathToRegexp(normalizedRoute, keys, options)\n      } catch (retryError) {\n        // If that doesn't work, fall back to original error\n        throw error\n      }\n    }\n    throw error\n  }\n}\n\n/**\n * Client-safe wrapper around compile that handles path-to-regexp 6.3.0+ validation errors.\n * No server-side error reporting to avoid bundling issues.\n */\nexport function safeCompile(\n  route: string,\n  options?: TokensToFunctionOptions & ParseOptions\n) {\n  // Check if normalization is needed and cache the result\n  const needsNormalization = hasAdjacentParameterIssues(route)\n  const routeToUse = needsNormalization\n    ? normalizeAdjacentParameters(route)\n    : route\n\n  try {\n    return compile(routeToUse, options)\n  } catch (error) {\n    // Only try normalization if we haven't already normalized\n    if (!needsNormalization) {\n      try {\n        const normalizedRoute = normalizeAdjacentParameters(route)\n        return compile(normalizedRoute, options)\n      } catch (retryError) {\n        // If that doesn't work, fall back to original error\n        throw error\n      }\n    }\n    throw error\n  }\n}\n\n/**\n * Client-safe wrapper around regexpToFunction that automatically cleans parameters.\n */\nexport function safeRegexpToFunction<\n  T extends Record<string, any> = Record<string, any>,\n>(regexp: RegExp, keys?: Key[]): (pathname: string) => { params: T } | false {\n  const originalMatcher = regexpToFunction<T>(regexp, keys || [])\n\n  return (pathname: string) => {\n    const result = originalMatcher(pathname)\n    if (!result) return false\n\n    // Clean parameters before returning\n    return {\n      ...result,\n      params: stripParameterSeparators(result.params as any) as T,\n    }\n  }\n}\n\n/**\n * Safe wrapper for route matcher functions that automatically cleans parameters.\n * This is client-safe and doesn't import path-to-regexp.\n */\nexport function safeRouteMatcher<T extends Record<string, any>>(\n  matcherFn: (pathname: string) => false | T\n): (pathname: string) => false | T {\n  return (pathname: string) => {\n    const result = matcherFn(pathname)\n    if (!result) return false\n\n    // Clean parameters before returning\n    return stripParameterSeparators(result) as T\n  }\n}\n"],"names":["pathToRegexp","compile","regexpToFunction","hasAdjacentParameterIssues","normalizeAdjacentParameters","stripParameterSeparators","safePathToRegexp","route","keys","options","needsNormalization","routeToUse","error","normalizedRoute","retryError","safeCompile","safeRegexpToFunction","regexp","originalMatcher","pathname","result","params","safeRouteMatcher","matcherFn"],"mappings":"AAAA;;;CAGC;;;;;;;;;;AAQD,SACEA,YAAY,EACZC,OAAO,EACPC,gBAAgB,QACX,oCAAmC;AAC1C,SACEC,0BAA0B,EAC1BC,2BAA2B,EAC3BC,wBAAwB,QACnB,2CAA0C;;;AAM1C,SAASC,iBACdC,KAA+C,EAC/CC,IAAY,EACZC,OAA8C;IAE9C,IAAI,OAAOF,UAAU,UAAU;QAC7B,WAAOP,yLAAAA,EAAaO,OAAOC,MAAMC;IACnC;IAEA,wDAAwD;IACxD,MAAMC,yBAAqBP,0MAAAA,EAA2BI;IACtD,MAAMI,aAAaD,yBACfN,2MAAAA,EAA4BG,SAC5BA;IAEJ,IAAI;QACF,WAAOP,yLAAAA,EAAaW,YAAYH,MAAMC;IACxC,EAAE,OAAOG,OAAO;QACd,0DAA0D;QAC1D,IAAI,CAACF,oBAAoB;YACvB,IAAI;gBACF,MAAMG,sBAAkBT,2MAAAA,EAA4BG;gBACpD,WAAOP,yLAAAA,EAAaa,iBAAiBL,MAAMC;YAC7C,EAAE,OAAOK,YAAY;gBACnB,oDAAoD;gBACpD,MAAMF;YACR;QACF;QACA,MAAMA;IACR;AACF;AAMO,SAASG,YACdR,KAAa,EACbE,OAAgD;IAEhD,wDAAwD;IACxD,MAAMC,yBAAqBP,0MAAAA,EAA2BI;IACtD,MAAMI,aAAaD,yBACfN,2MAAAA,EAA4BG,SAC5BA;IAEJ,IAAI;QACF,WAAON,oLAAAA,EAAQU,YAAYF;IAC7B,EAAE,OAAOG,OAAO;QACd,0DAA0D;QAC1D,IAAI,CAACF,oBAAoB;YACvB,IAAI;gBACF,MAAMG,sBAAkBT,2MAAAA,EAA4BG;gBACpD,WAAON,oLAAAA,EAAQY,iBAAiBJ;YAClC,EAAE,OAAOK,YAAY;gBACnB,oDAAoD;gBACpD,MAAMF;YACR;QACF;QACA,MAAMA;IACR;AACF;AAKO,SAASI,qBAEdC,MAAc,EAAET,IAAY;IAC5B,MAAMU,sBAAkBhB,6LAAAA,EAAoBe,QAAQT,QAAQ,EAAE;IAE9D,OAAO,CAACW;QACN,MAAMC,SAASF,gBAAgBC;QAC/B,IAAI,CAACC,QAAQ,OAAO;QAEpB,oCAAoC;QACpC,OAAO;YACL,GAAGA,MAAM;YACTC,YAAQhB,wMAAAA,EAAyBe,OAAOC,MAAM;QAChD;IACF;AACF;AAMO,SAASC,iBACdC,SAA0C;IAE1C,OAAO,CAACJ;QACN,MAAMC,SAASG,UAAUJ;QACzB,IAAI,CAACC,QAAQ,OAAO;QAEpB,oCAAoC;QACpC,WAAOf,wMAAAA,EAAyBe;IAClC;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3766, "column": 0}, "map": {"version":3,"sources":["file:///home/joeagharib/My-Github/taskhive/client/node_modules/next/dist/src/shared/lib/router/utils/route-matcher.ts"],"sourcesContent":["import type { Group } from './route-regex'\nimport { DecodeError } from '../../utils'\nimport type { Params } from '../../../../server/request/params'\nimport { safeRouteMatcher } from './route-match-utils'\n\nexport interface RouteMatchFn {\n  (pathname: string): false | Params\n}\n\ntype RouteMatcherOptions = {\n  // We only use the exec method of the RegExp object. This helps us avoid using\n  // type assertions that the passed in properties are of the correct type.\n  re: Pick<RegExp, 'exec'>\n  groups: Record<string, Group>\n}\n\nexport function getRouteMatcher({\n  re,\n  groups,\n}: RouteMatcherOptions): RouteMatchFn {\n  const rawMatcher = (pathname: string) => {\n    const routeMatch = re.exec(pathname)\n    if (!routeMatch) return false\n\n    const decode = (param: string) => {\n      try {\n        return decodeURIComponent(param)\n      } catch {\n        throw new DecodeError('failed to decode param')\n      }\n    }\n\n    const params: Params = {}\n    for (const [key, group] of Object.entries(groups)) {\n      const match = routeMatch[group.pos]\n      if (match !== undefined) {\n        if (group.repeat) {\n          params[key] = match.split('/').map((entry) => decode(entry))\n        } else {\n          params[key] = decode(match)\n        }\n      }\n    }\n\n    return params\n  }\n\n  // Wrap with safe matcher to handle parameter cleaning\n  return safeRouteMatcher(rawMatcher)\n}\n"],"names":["DecodeError","safeRouteMatcher","getRouteMatcher","re","groups","rawMatcher","pathname","routeMatch","exec","decode","param","decodeURIComponent","params","key","group","Object","entries","match","pos","undefined","repeat","split","map","entry"],"mappings":";;;;AACA,SAASA,WAAW,QAAQ,cAAa;AAEzC,SAASC,gBAAgB,QAAQ,sBAAqB;;;AAa/C,SAASC,gBAAgB,KAGV;IAHU,IAAA,EAC9BC,EAAE,EACFC,MAAM,EACc,GAHU;IAI9B,MAAMC,aAAa,CAACC;QAClB,MAAMC,aAAaJ,GAAGK,IAAI,CAACF;QAC3B,IAAI,CAACC,YAAY,OAAO;QAExB,MAAME,SAAS,CAACC;YACd,IAAI;gBACF,OAAOC,mBAAmBD;YAC5B,EAAE,OAAA,GAAM;gBACN,MAAM,OAAA,cAAyC,CAAzC,IAAIV,4KAAAA,CAAY,2BAAhB,qBAAA;2BAAA;gCAAA;kCAAA;gBAAwC;YAChD;QACF;QAEA,MAAMY,SAAiB,CAAC;QACxB,KAAK,MAAM,CAACC,KAAKC,MAAM,IAAIC,OAAOC,OAAO,CAACZ,QAAS;YACjD,MAAMa,QAAQV,UAAU,CAACO,MAAMI,GAAG,CAAC;YACnC,IAAID,UAAUE,WAAW;gBACvB,IAAIL,MAAMM,MAAM,EAAE;oBAChBR,MAAM,CAACC,IAAI,GAAGI,MAAMI,KAAK,CAAC,KAAKC,GAAG,CAAC,CAACC,QAAUd,OAAOc;gBACvD,OAAO;oBACLX,MAAM,CAACC,IAAI,GAAGJ,OAAOQ;gBACvB;YACF;QACF;QAEA,OAAOL;IACT;IAEA,sDAAsD;IACtD,WAAOX,sNAAAA,EAAiBI;AAC1B","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3810, "column": 0}, "map": {"version":3,"sources":["file:///home/joeagharib/My-Github/taskhive/client/node_modules/next/dist/src/shared/lib/page-path/ensure-leading-slash.ts"],"sourcesContent":["/**\n * For a given page path, this function ensures that there is a leading slash.\n * If there is not a leading slash, one is added, otherwise it is noop.\n */\nexport function ensureLeadingSlash(path: string) {\n  return path.startsWith('/') ? path : `/${path}`\n}\n"],"names":["ensureLeadingSlash","path","startsWith"],"mappings":"AAAA;;;CAGC,GACD;;;;AAAO,SAASA,mBAAmBC,IAAY;IAC7C,OAAOA,KAAKC,UAAU,CAAC,OAAOD,OAAQ,MAAGA;AAC3C","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3824, "column": 0}, "map": {"version":3,"sources":["file:///home/joeagharib/My-Github/taskhive/client/node_modules/next/dist/src/shared/lib/router/utils/app-paths.ts"],"sourcesContent":["import { ensureLeadingSlash } from '../../page-path/ensure-leading-slash'\nimport { isGroupSegment } from '../../segment'\n\n/**\n * Normalizes an app route so it represents the actual request path. Essentially\n * performing the following transformations:\n *\n * - `/(dashboard)/user/[id]/page` to `/user/[id]`\n * - `/(dashboard)/account/page` to `/account`\n * - `/user/[id]/page` to `/user/[id]`\n * - `/account/page` to `/account`\n * - `/page` to `/`\n * - `/(dashboard)/user/[id]/route` to `/user/[id]`\n * - `/(dashboard)/account/route` to `/account`\n * - `/user/[id]/route` to `/user/[id]`\n * - `/account/route` to `/account`\n * - `/route` to `/`\n * - `/` to `/`\n *\n * @param route the app route to normalize\n * @returns the normalized pathname\n */\nexport function normalizeAppPath(route: string) {\n  return ensureLeadingSlash(\n    route.split('/').reduce((pathname, segment, index, segments) => {\n      // Empty segments are ignored.\n      if (!segment) {\n        return pathname\n      }\n\n      // Groups are ignored.\n      if (isGroupSegment(segment)) {\n        return pathname\n      }\n\n      // Parallel segments are ignored.\n      if (segment[0] === '@') {\n        return pathname\n      }\n\n      // The last segment (if it's a leaf) should be ignored.\n      if (\n        (segment === 'page' || segment === 'route') &&\n        index === segments.length - 1\n      ) {\n        return pathname\n      }\n\n      return `${pathname}/${segment}`\n    }, '')\n  )\n}\n\n/**\n * Strips the `.rsc` extension if it's in the pathname.\n * Since this function is used on full urls it checks `?` for searchParams handling.\n */\nexport function normalizeRscURL(url: string) {\n  return url.replace(\n    /\\.rsc($|\\?)/,\n    // $1 ensures `?` is preserved\n    '$1'\n  )\n}\n"],"names":["ensureLeadingSlash","isGroupSegment","normalizeAppPath","route","split","reduce","pathname","segment","index","segments","length","normalizeRscURL","url","replace"],"mappings":";;;;;;AAAA,SAASA,kBAAkB,QAAQ,uCAAsC;AACzE,SAASC,cAAc,QAAQ,gBAAe;;;AAqBvC,SAASC,iBAAiBC,KAAa;IAC5C,WAAOH,wNAAAA,EACLG,MAAMC,KAAK,CAAC,KAAKC,MAAM,CAAC,CAACC,UAAUC,SAASC,OAAOC;QACjD,8BAA8B;QAC9B,IAAI,CAACF,SAAS;YACZ,OAAOD;QACT;QAEA,sBAAsB;QACtB,QAAIL,iLAAAA,EAAeM,UAAU;YAC3B,OAAOD;QACT;QAEA,iCAAiC;QACjC,IAAIC,OAAO,CAAC,EAAE,KAAK,KAAK;YACtB,OAAOD;QACT;QAEA,uDAAuD;QACvD,IACGC,CAAAA,YAAY,UAAUA,YAAY,OAAM,KACzCC,UAAUC,SAASC,MAAM,GAAG,GAC5B;YACA,OAAOJ;QACT;QAEA,OAAUA,WAAS,MAAGC;IACxB,GAAG;AAEP;AAMO,SAASI,gBAAgBC,GAAW;IACzC,OAAOA,IAAIC,OAAO,CAChB,eACA,AACA,8BAD8B;AAGlC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3862, "column": 0}, "map": {"version":3,"sources":["file:///home/joeagharib/My-Github/taskhive/client/node_modules/next/dist/src/shared/lib/router/utils/interception-routes.ts"],"sourcesContent":["import { normalizeAppPath } from './app-paths'\n\n// order matters here, the first match will be used\nexport const INTERCEPTION_ROUTE_MARKERS = [\n  '(..)(..)',\n  '(.)',\n  '(..)',\n  '(...)',\n] as const\n\nexport function isInterceptionRouteAppPath(path: string): boolean {\n  // TODO-APP: add more serious validation\n  return (\n    path\n      .split('/')\n      .find((segment) =>\n        INTERCEPTION_ROUTE_MARKERS.find((m) => segment.startsWith(m))\n      ) !== undefined\n  )\n}\n\nexport function extractInterceptionRouteInformation(path: string) {\n  let interceptingRoute: string | undefined,\n    marker: (typeof INTERCEPTION_ROUTE_MARKERS)[number] | undefined,\n    interceptedRoute: string | undefined\n\n  for (const segment of path.split('/')) {\n    marker = INTERCEPTION_ROUTE_MARKERS.find((m) => segment.startsWith(m))\n    if (marker) {\n      ;[interceptingRoute, interceptedRoute] = path.split(marker, 2)\n      break\n    }\n  }\n\n  if (!interceptingRoute || !marker || !interceptedRoute) {\n    throw new Error(\n      `Invalid interception route: ${path}. Must be in the format /<intercepting route>/(..|...|..)(..)/<intercepted route>`\n    )\n  }\n\n  interceptingRoute = normalizeAppPath(interceptingRoute) // normalize the path, e.g. /(blog)/feed -> /feed\n\n  switch (marker) {\n    case '(.)':\n      // (.) indicates that we should match with sibling routes, so we just need to append the intercepted route to the intercepting route\n      if (interceptingRoute === '/') {\n        interceptedRoute = `/${interceptedRoute}`\n      } else {\n        interceptedRoute = interceptingRoute + '/' + interceptedRoute\n      }\n      break\n    case '(..)':\n      // (..) indicates that we should match at one level up, so we need to remove the last segment of the intercepting route\n      if (interceptingRoute === '/') {\n        throw new Error(\n          `Invalid interception route: ${path}. Cannot use (..) marker at the root level, use (.) instead.`\n        )\n      }\n      interceptedRoute = interceptingRoute\n        .split('/')\n        .slice(0, -1)\n        .concat(interceptedRoute)\n        .join('/')\n      break\n    case '(...)':\n      // (...) will match the route segment in the root directory, so we need to use the root directory to prepend the intercepted route\n      interceptedRoute = '/' + interceptedRoute\n      break\n    case '(..)(..)':\n      // (..)(..) indicates that we should match at two levels up, so we need to remove the last two segments of the intercepting route\n\n      const splitInterceptingRoute = interceptingRoute.split('/')\n      if (splitInterceptingRoute.length <= 2) {\n        throw new Error(\n          `Invalid interception route: ${path}. Cannot use (..)(..) marker at the root level or one level up.`\n        )\n      }\n\n      interceptedRoute = splitInterceptingRoute\n        .slice(0, -2)\n        .concat(interceptedRoute)\n        .join('/')\n      break\n    default:\n      throw new Error('Invariant: unexpected marker')\n  }\n\n  return { interceptingRoute, interceptedRoute }\n}\n"],"names":["normalizeAppPath","INTERCEPTION_ROUTE_MARKERS","isInterceptionRouteAppPath","path","split","find","segment","m","startsWith","undefined","extractInterceptionRouteInformation","interceptingRoute","marker","interceptedRoute","Error","slice","concat","join","splitInterceptingRoute","length"],"mappings":";;;;;;;;AAAA,SAASA,gBAAgB,QAAQ,cAAa;;AAGvC,MAAMC,6BAA6B;IACxC;IACA;IACA;IACA;CACD,CAAS;AAEH,SAASC,2BAA2BC,IAAY;IACrD,wCAAwC;IACxC,OACEA,KACGC,KAAK,CAAC,KACNC,IAAI,CAAC,CAACC,UACLL,2BAA2BI,IAAI,CAAC,CAACE,IAAMD,QAAQE,UAAU,CAACD,SACtDE;AAEZ;AAEO,SAASC,oCAAoCP,IAAY;IAC9D,IAAIQ,mBACFC,QACAC;IAEF,KAAK,MAAMP,WAAWH,KAAKC,KAAK,CAAC,KAAM;QACrCQ,SAASX,2BAA2BI,IAAI,CAAC,CAACE,IAAMD,QAAQE,UAAU,CAACD;QACnE,IAAIK,QAAQ;;YACT,CAACD,mBAAmBE,iBAAiB,GAAGV,KAAKC,KAAK,CAACQ,QAAQ;YAC5D;QACF;IACF;IAEA,IAAI,CAACD,qBAAqB,CAACC,UAAU,CAACC,kBAAkB;QACtD,MAAM,OAAA,cAEL,CAFK,IAAIC,MACP,iCAA8BX,OAAK,sFADhC,qBAAA;mBAAA;wBAAA;0BAAA;QAEN;IACF;IAEAQ,wBAAoBX,2MAAAA,EAAiBW,mBAAmB,iDAAiD;;IAEzG,OAAQC;QACN,KAAK;YACH,oIAAoI;YACpI,IAAID,sBAAsB,KAAK;gBAC7BE,mBAAoB,MAAGA;YACzB,OAAO;gBACLA,mBAAmBF,oBAAoB,MAAME;YAC/C;YACA;QACF,KAAK;YACH,uHAAuH;YACvH,IAAIF,sBAAsB,KAAK;gBAC7B,MAAM,OAAA,cAEL,CAFK,IAAIG,MACP,iCAA8BX,OAAK,iEADhC,qBAAA;2BAAA;gCAAA;kCAAA;gBAEN;YACF;YACAU,mBAAmBF,kBAChBP,KAAK,CAAC,KACNW,KAAK,CAAC,GAAG,CAAC,GACVC,MAAM,CAACH,kBACPI,IAAI,CAAC;YACR;QACF,KAAK;YACH,kIAAkI;YAClIJ,mBAAmB,MAAMA;YACzB;QACF,KAAK;YACH,iIAAiI;YAEjI,MAAMK,yBAAyBP,kBAAkBP,KAAK,CAAC;YACvD,IAAIc,uBAAuBC,MAAM,IAAI,GAAG;gBACtC,MAAM,OAAA,cAEL,CAFK,IAAIL,MACP,iCAA8BX,OAAK,oEADhC,qBAAA;2BAAA;gCAAA;kCAAA;gBAEN;YACF;YAEAU,mBAAmBK,uBAChBH,KAAK,CAAC,GAAG,CAAC,GACVC,MAAM,CAACH,kBACPI,IAAI,CAAC;YACR;QACF;YACE,MAAM,OAAA,cAAyC,CAAzC,IAAIH,MAAM,iCAAV,qBAAA;uBAAA;4BAAA;8BAAA;YAAwC;IAClD;IAEA,OAAO;QAAEH;QAAmBE;IAAiB;AAC/C","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3953, "column": 0}, "map": {"version":3,"sources":["file:///home/joeagharib/My-Github/taskhive/client/node_modules/next/dist/src/shared/lib/escape-regexp.ts"],"sourcesContent":["// regexp is based on https://github.com/sindresorhus/escape-string-regexp\nconst reHasRegExp = /[|\\\\{}()[\\]^$+*?.-]/\nconst reReplaceRegExp = /[|\\\\{}()[\\]^$+*?.-]/g\n\nexport function escapeStringRegexp(str: string) {\n  // see also: https://github.com/lodash/lodash/blob/2da024c3b4f9947a48517639de7560457cd4ec6c/escapeRegExp.js#L23\n  if (reHasRegExp.test(str)) {\n    return str.replace(reReplaceRegExp, '\\\\$&')\n  }\n  return str\n}\n"],"names":["reHasRegExp","reReplaceRegExp","escapeStringRegexp","str","test","replace"],"mappings":"AAAA,0EAA0E;;;;;AAC1E,MAAMA,cAAc;AACpB,MAAMC,kBAAkB;AAEjB,SAASC,mBAAmBC,GAAW;IAC5C,+GAA+G;IAC/G,IAAIH,YAAYI,IAAI,CAACD,MAAM;QACzB,OAAOA,IAAIE,OAAO,CAACJ,iBAAiB;IACtC;IACA,OAAOE;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3971, "column": 0}, "map": {"version":3,"sources":["file:///home/joeagharib/My-Github/taskhive/client/node_modules/next/dist/src/shared/lib/router/utils/get-dynamic-param.ts"],"sourcesContent":["import type { DynamicParam } from '../../../../server/app-render/app-render'\nimport type { DynamicParamTypesShort } from '../../../../server/app-render/types'\nimport type { FallbackRouteParams } from '../../../../server/request/fallback-params'\n\n/**\n *\n * Shared logic on client and server for creating a dynamic param value.\n *\n * This code needs to be shared with the client so it can extract dynamic route\n * params from the URL without a server request.\n *\n * Because everything in this module is sent to the client, we should aim to\n * keep this code as simple as possible. The special case handling for catchall\n * and optional is, alas, unfortunate.\n */\nexport function getDynamicParam(\n  params: { [key: string]: any },\n  segmentKey: string,\n  dynamicParamType: DynamicParamTypesShort,\n  pagePath: string,\n  fallbackRouteParams: FallbackRouteParams | null\n): DynamicParam {\n  let value = params[segmentKey]\n\n  if (fallbackRouteParams && fallbackRouteParams.has(segmentKey)) {\n    value = fallbackRouteParams.get(segmentKey)\n  } else if (Array.isArray(value)) {\n    value = value.map((i) => encodeURIComponent(i))\n  } else if (typeof value === 'string') {\n    value = encodeURIComponent(value)\n  }\n\n  if (!value) {\n    const isCatchall = dynamicParamType === 'c'\n    const isOptionalCatchall = dynamicParamType === 'oc'\n\n    if (isCatchall || isOptionalCatchall) {\n      // handle the case where an optional catchall does not have a value,\n      // e.g. `/dashboard/[[...slug]]` when requesting `/dashboard`\n      if (isOptionalCatchall) {\n        return {\n          param: segmentKey,\n          value: null,\n          type: dynamicParamType,\n          treeSegment: [segmentKey, '', dynamicParamType],\n        }\n      }\n\n      // handle the case where a catchall or optional catchall does not have a value,\n      // e.g. `/foo/bar/hello` and `@slot/[...catchall]` or `@slot/[[...catchall]]` is matched\n      value = pagePath\n        .split('/')\n        // remove the first empty string\n        .slice(1)\n        // replace any dynamic params with the actual values\n        .flatMap((pathSegment) => {\n          const param = parseParameter(pathSegment)\n          // if the segment matches a param, return the param value\n          // otherwise, it's a static segment, so just return that\n          return params[param.key] ?? param.key\n        })\n\n      return {\n        param: segmentKey,\n        value,\n        type: dynamicParamType,\n        // This value always has to be a string.\n        treeSegment: [segmentKey, value.join('/'), dynamicParamType],\n      }\n    }\n  }\n\n  return {\n    param: segmentKey,\n    // The value that is passed to user code.\n    value: value,\n    // The value that is rendered in the router tree.\n    treeSegment: [\n      segmentKey,\n      Array.isArray(value) ? value.join('/') : value,\n      dynamicParamType,\n    ],\n    type: dynamicParamType,\n  }\n}\n\n/**\n * Regular expression pattern used to match route parameters.\n * Matches both single parameters and parameter groups.\n * Examples:\n *   - `[[...slug]]` matches parameter group with key 'slug', repeat: true, optional: true\n *   - `[...slug]` matches parameter group with key 'slug', repeat: true, optional: false\n *   - `[[foo]]` matches parameter with key 'foo', repeat: false, optional: true\n *   - `[bar]` matches parameter with key 'bar', repeat: false, optional: false\n */\nexport const PARAMETER_PATTERN = /^([^[]*)\\[((?:\\[[^\\]]*\\])|[^\\]]+)\\](.*)$/\n\n/**\n * Parses a given parameter from a route to a data structure that can be used\n * to generate the parametrized route.\n * Examples:\n *   - `[[...slug]]` -> `{ key: 'slug', repeat: true, optional: true }`\n *   - `[...slug]` -> `{ key: 'slug', repeat: true, optional: false }`\n *   - `[[foo]]` -> `{ key: 'foo', repeat: false, optional: true }`\n *   - `[bar]` -> `{ key: 'bar', repeat: false, optional: false }`\n *   - `fizz` -> `{ key: 'fizz', repeat: false, optional: false }`\n * @param param - The parameter to parse.\n * @returns The parsed parameter as a data structure.\n */\nexport function parseParameter(param: string) {\n  const match = param.match(PARAMETER_PATTERN)\n\n  if (!match) {\n    return parseMatchedParameter(param)\n  }\n\n  return parseMatchedParameter(match[2])\n}\n\n/**\n * Parses a matched parameter from the PARAMETER_PATTERN regex to a data structure that can be used\n * to generate the parametrized route.\n * Examples:\n *   - `[...slug]` -> `{ key: 'slug', repeat: true, optional: true }`\n *   - `...slug` -> `{ key: 'slug', repeat: true, optional: false }`\n *   - `[foo]` -> `{ key: 'foo', repeat: false, optional: true }`\n *   - `bar` -> `{ key: 'bar', repeat: false, optional: false }`\n * @param param - The matched parameter to parse.\n * @returns The parsed parameter as a data structure.\n */\nexport function parseMatchedParameter(param: string) {\n  const optional = param.startsWith('[') && param.endsWith(']')\n  if (optional) {\n    param = param.slice(1, -1)\n  }\n  const repeat = param.startsWith('...')\n  if (repeat) {\n    param = param.slice(3)\n  }\n  return { key: param, repeat, optional }\n}\n"],"names":["getDynamicParam","params","segmentKey","dynamicParamType","pagePath","fallbackRouteParams","value","has","get","Array","isArray","map","i","encodeURIComponent","isCatchall","isOptionalCatchall","param","type","treeSegment","split","slice","flatMap","pathSegment","parseParameter","key","join","PARAMETER_PATTERN","match","parseMatchedParameter","optional","startsWith","endsWith","repeat"],"mappings":"AAIA;;;;;;;;;;CAUC,GACD;;;;;;;;;;AAAO,SAASA,gBACdC,MAA8B,EAC9BC,UAAkB,EAClBC,gBAAwC,EACxCC,QAAgB,EAChBC,mBAA+C;IAE/C,IAAIC,QAAQL,MAAM,CAACC,WAAW;IAE9B,IAAIG,uBAAuBA,oBAAoBE,GAAG,CAACL,aAAa;QAC9DI,QAAQD,oBAAoBG,GAAG,CAACN;IAClC,OAAO,IAAIO,MAAMC,OAAO,CAACJ,QAAQ;QAC/BA,QAAQA,MAAMK,GAAG,CAAC,CAACC,IAAMC,mBAAmBD;IAC9C,OAAO,IAAI,OAAON,UAAU,UAAU;QACpCA,QAAQO,mBAAmBP;IAC7B;IAEA,IAAI,CAACA,OAAO;QACV,MAAMQ,aAAaX,qBAAqB;QACxC,MAAMY,qBAAqBZ,qBAAqB;QAEhD,IAAIW,cAAcC,oBAAoB;YACpC,oEAAoE;YACpE,6DAA6D;YAC7D,IAAIA,oBAAoB;gBACtB,OAAO;oBACLC,OAAOd;oBACPI,OAAO;oBACPW,MAAMd;oBACNe,aAAa;wBAAChB;wBAAY;wBAAIC;qBAAiB;gBACjD;YACF;YAEA,+EAA+E;YAC/E,wFAAwF;YACxFG,QAAQF,SACLe,KAAK,CAAC,KACP,gCAAgC;aAC/BC,KAAK,CAAC,GACP,oDAAoD;aACnDC,OAAO,CAAC,CAACC;gBACR,MAAMN,QAAQO,eAAeD;oBAGtBrB;gBAFP,yDAAyD;gBACzD,wDAAwD;gBACxD,OAAOA,CAAAA,oBAAAA,MAAM,CAACe,MAAMQ,GAAG,CAAC,KAAA,OAAjBvB,oBAAqBe,MAAMQ,GAAG;YACvC;YAEF,OAAO;gBACLR,OAAOd;gBACPI;gBACAW,MAAMd;gBACN,wCAAwC;gBACxCe,aAAa;oBAAChB;oBAAYI,MAAMmB,IAAI,CAAC;oBAAMtB;iBAAiB;YAC9D;QACF;IACF;IAEA,OAAO;QACLa,OAAOd;QACP,yCAAyC;QACzCI,OAAOA;QACP,iDAAiD;QACjDY,aAAa;YACXhB;YACAO,MAAMC,OAAO,CAACJ,SAASA,MAAMmB,IAAI,CAAC,OAAOnB;YACzCH;SACD;QACDc,MAAMd;IACR;AACF;AAWO,MAAMuB,oBAAoB,2CAA0C;AAcpE,SAASH,eAAeP,KAAa;IAC1C,MAAMW,QAAQX,MAAMW,KAAK,CAACD;IAE1B,IAAI,CAACC,OAAO;QACV,OAAOC,sBAAsBZ;IAC/B;IAEA,OAAOY,sBAAsBD,KAAK,CAAC,EAAE;AACvC;AAaO,SAASC,sBAAsBZ,KAAa;IACjD,MAAMa,WAAWb,MAAMc,UAAU,CAAC,QAAQd,MAAMe,QAAQ,CAAC;IACzD,IAAIF,UAAU;QACZb,QAAQA,MAAMI,KAAK,CAAC,GAAG,CAAC;IAC1B;IACA,MAAMY,SAAShB,MAAMc,UAAU,CAAC;IAChC,IAAIE,QAAQ;QACVhB,QAAQA,MAAMI,KAAK,CAAC;IACtB;IACA,OAAO;QAAEI,KAAKR;QAAOgB;QAAQH;IAAS;AACxC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4082, "column": 0}, "map": {"version":3,"sources":["file:///home/joeagharib/My-Github/taskhive/client/node_modules/next/dist/src/shared/lib/router/utils/route-regex.ts"],"sourcesContent":["import {\n  NEXT_INTERCEPTION_MARKER_PREFIX,\n  NEXT_QUERY_PARAM_PREFIX,\n} from '../../../../lib/constants'\nimport { INTERCEPTION_ROUTE_MARKERS } from './interception-routes'\nimport { escapeStringRegexp } from '../../escape-regexp'\nimport { removeTrailingSlash } from './remove-trailing-slash'\nimport { PARAMETER_PATTERN, parseMatchedParameter } from './get-dynamic-param'\n\nexport interface Group {\n  pos: number\n  repeat: boolean\n  optional: boolean\n}\n\nexport interface RouteRegex {\n  groups: { [groupName: string]: Group }\n  re: RegExp\n}\n\ntype GetNamedRouteRegexOptions = {\n  /**\n   * Whether to prefix the route keys with the NEXT_INTERCEPTION_MARKER_PREFIX\n   * or NEXT_QUERY_PARAM_PREFIX. This is only relevant when creating the\n   * routes-manifest during the build.\n   */\n  prefixRouteKeys: boolean\n\n  /**\n   * Whether to include the suffix in the route regex. This means that when you\n   * have something like `/[...slug].json` the `.json` part will be included\n   * in the regex, yielding `/(.*).json` as the regex.\n   */\n  includeSuffix?: boolean\n\n  /**\n   * Whether to include the prefix in the route regex. This means that when you\n   * have something like `/[...slug].json` the `/` part will be included\n   * in the regex, yielding `^/(.*).json$` as the regex.\n   *\n   * Note that interception markers will already be included without the need\n   */\n  includePrefix?: boolean\n\n  /**\n   * Whether to exclude the optional trailing slash from the route regex.\n   */\n  excludeOptionalTrailingSlash?: boolean\n\n  /**\n   * Whether to backtrack duplicate keys. This is only relevant when creating\n   * the routes-manifest during the build.\n   */\n  backreferenceDuplicateKeys?: boolean\n}\n\ntype GetRouteRegexOptions = {\n  /**\n   * Whether to include extra parts in the route regex. This means that when you\n   * have something like `/[...slug].json` the `.json` part will be included\n   * in the regex, yielding `/(.*).json` as the regex.\n   */\n  includeSuffix?: boolean\n\n  /**\n   * Whether to include the prefix in the route regex. This means that when you\n   * have something like `/[...slug].json` the `/` part will be included\n   * in the regex, yielding `^/(.*).json$` as the regex.\n   *\n   * Note that interception markers will already be included without the need\n   * of adding this option.\n   */\n  includePrefix?: boolean\n\n  /**\n   * Whether to exclude the optional trailing slash from the route regex.\n   */\n  excludeOptionalTrailingSlash?: boolean\n}\n\nfunction getParametrizedRoute(\n  route: string,\n  includeSuffix: boolean,\n  includePrefix: boolean\n) {\n  const groups: { [groupName: string]: Group } = {}\n  let groupIndex = 1\n\n  const segments: string[] = []\n  for (const segment of removeTrailingSlash(route).slice(1).split('/')) {\n    const markerMatch = INTERCEPTION_ROUTE_MARKERS.find((m) =>\n      segment.startsWith(m)\n    )\n    const paramMatches = segment.match(PARAMETER_PATTERN) // Check for parameters\n\n    if (markerMatch && paramMatches && paramMatches[2]) {\n      const { key, optional, repeat } = parseMatchedParameter(paramMatches[2])\n      groups[key] = { pos: groupIndex++, repeat, optional }\n      segments.push(`/${escapeStringRegexp(markerMatch)}([^/]+?)`)\n    } else if (paramMatches && paramMatches[2]) {\n      const { key, repeat, optional } = parseMatchedParameter(paramMatches[2])\n      groups[key] = { pos: groupIndex++, repeat, optional }\n\n      if (includePrefix && paramMatches[1]) {\n        segments.push(`/${escapeStringRegexp(paramMatches[1])}`)\n      }\n\n      let s = repeat ? (optional ? '(?:/(.+?))?' : '/(.+?)') : '/([^/]+?)'\n\n      // Remove the leading slash if includePrefix already added it.\n      if (includePrefix && paramMatches[1]) {\n        s = s.substring(1)\n      }\n\n      segments.push(s)\n    } else {\n      segments.push(`/${escapeStringRegexp(segment)}`)\n    }\n\n    // If there's a suffix, add it to the segments if it's enabled.\n    if (includeSuffix && paramMatches && paramMatches[3]) {\n      segments.push(escapeStringRegexp(paramMatches[3]))\n    }\n  }\n\n  return {\n    parameterizedRoute: segments.join(''),\n    groups,\n  }\n}\n\n/**\n * From a normalized route this function generates a regular expression and\n * a corresponding groups object intended to be used to store matching groups\n * from the regular expression.\n */\nexport function getRouteRegex(\n  normalizedRoute: string,\n  {\n    includeSuffix = false,\n    includePrefix = false,\n    excludeOptionalTrailingSlash = false,\n  }: GetRouteRegexOptions = {}\n): RouteRegex {\n  const { parameterizedRoute, groups } = getParametrizedRoute(\n    normalizedRoute,\n    includeSuffix,\n    includePrefix\n  )\n\n  let re = parameterizedRoute\n  if (!excludeOptionalTrailingSlash) {\n    re += '(?:/)?'\n  }\n\n  return {\n    re: new RegExp(`^${re}$`),\n    groups: groups,\n  }\n}\n\n/**\n * Builds a function to generate a minimal routeKey using only a-z and minimal\n * number of characters.\n */\nfunction buildGetSafeRouteKey() {\n  let i = 0\n\n  return () => {\n    let routeKey = ''\n    let j = ++i\n    while (j > 0) {\n      routeKey += String.fromCharCode(97 + ((j - 1) % 26))\n      j = Math.floor((j - 1) / 26)\n    }\n    return routeKey\n  }\n}\n\nfunction getSafeKeyFromSegment({\n  interceptionMarker,\n  getSafeRouteKey,\n  segment,\n  routeKeys,\n  keyPrefix,\n  backreferenceDuplicateKeys,\n}: {\n  interceptionMarker?: string\n  getSafeRouteKey: () => string\n  segment: string\n  routeKeys: Record<string, string>\n  keyPrefix?: string\n  backreferenceDuplicateKeys: boolean\n}) {\n  const { key, optional, repeat } = parseMatchedParameter(segment)\n\n  // replace any non-word characters since they can break\n  // the named regex\n  let cleanedKey = key.replace(/\\W/g, '')\n\n  if (keyPrefix) {\n    cleanedKey = `${keyPrefix}${cleanedKey}`\n  }\n  let invalidKey = false\n\n  // check if the key is still invalid and fallback to using a known\n  // safe key\n  if (cleanedKey.length === 0 || cleanedKey.length > 30) {\n    invalidKey = true\n  }\n  if (!isNaN(parseInt(cleanedKey.slice(0, 1)))) {\n    invalidKey = true\n  }\n\n  if (invalidKey) {\n    cleanedKey = getSafeRouteKey()\n  }\n\n  const duplicateKey = cleanedKey in routeKeys\n\n  if (keyPrefix) {\n    routeKeys[cleanedKey] = `${keyPrefix}${key}`\n  } else {\n    routeKeys[cleanedKey] = key\n  }\n\n  // if the segment has an interception marker, make sure that's part of the regex pattern\n  // this is to ensure that the route with the interception marker doesn't incorrectly match\n  // the non-intercepted route (ie /app/(.)[username] should not match /app/[username])\n  const interceptionPrefix = interceptionMarker\n    ? escapeStringRegexp(interceptionMarker)\n    : ''\n\n  let pattern: string\n  if (duplicateKey && backreferenceDuplicateKeys) {\n    // Use a backreference to the key to ensure that the key is the same value\n    // in each of the placeholders.\n    pattern = `\\\\k<${cleanedKey}>`\n  } else if (repeat) {\n    pattern = `(?<${cleanedKey}>.+?)`\n  } else {\n    pattern = `(?<${cleanedKey}>[^/]+?)`\n  }\n\n  return optional\n    ? `(?:/${interceptionPrefix}${pattern})?`\n    : `/${interceptionPrefix}${pattern}`\n}\n\nfunction getNamedParametrizedRoute(\n  route: string,\n  prefixRouteKeys: boolean,\n  includeSuffix: boolean,\n  includePrefix: boolean,\n  backreferenceDuplicateKeys: boolean\n) {\n  const getSafeRouteKey = buildGetSafeRouteKey()\n  const routeKeys: { [named: string]: string } = {}\n\n  const segments: string[] = []\n  for (const segment of removeTrailingSlash(route).slice(1).split('/')) {\n    const hasInterceptionMarker = INTERCEPTION_ROUTE_MARKERS.some((m) =>\n      segment.startsWith(m)\n    )\n\n    const paramMatches = segment.match(PARAMETER_PATTERN) // Check for parameters\n\n    if (hasInterceptionMarker && paramMatches && paramMatches[2]) {\n      // If there's an interception marker, add it to the segments.\n      segments.push(\n        getSafeKeyFromSegment({\n          getSafeRouteKey,\n          interceptionMarker: paramMatches[1],\n          segment: paramMatches[2],\n          routeKeys,\n          keyPrefix: prefixRouteKeys\n            ? NEXT_INTERCEPTION_MARKER_PREFIX\n            : undefined,\n          backreferenceDuplicateKeys,\n        })\n      )\n    } else if (paramMatches && paramMatches[2]) {\n      // If there's a prefix, add it to the segments if it's enabled.\n      if (includePrefix && paramMatches[1]) {\n        segments.push(`/${escapeStringRegexp(paramMatches[1])}`)\n      }\n\n      let s = getSafeKeyFromSegment({\n        getSafeRouteKey,\n        segment: paramMatches[2],\n        routeKeys,\n        keyPrefix: prefixRouteKeys ? NEXT_QUERY_PARAM_PREFIX : undefined,\n        backreferenceDuplicateKeys,\n      })\n\n      // Remove the leading slash if includePrefix already added it.\n      if (includePrefix && paramMatches[1]) {\n        s = s.substring(1)\n      }\n\n      segments.push(s)\n    } else {\n      segments.push(`/${escapeStringRegexp(segment)}`)\n    }\n\n    // If there's a suffix, add it to the segments if it's enabled.\n    if (includeSuffix && paramMatches && paramMatches[3]) {\n      segments.push(escapeStringRegexp(paramMatches[3]))\n    }\n  }\n\n  return {\n    namedParameterizedRoute: segments.join(''),\n    routeKeys,\n  }\n}\n\n/**\n * This function extends `getRouteRegex` generating also a named regexp where\n * each group is named along with a routeKeys object that indexes the assigned\n * named group with its corresponding key. When the routeKeys need to be\n * prefixed to uniquely identify internally the \"prefixRouteKey\" arg should\n * be \"true\" currently this is only the case when creating the routes-manifest\n * during the build\n */\nexport function getNamedRouteRegex(\n  normalizedRoute: string,\n  options: GetNamedRouteRegexOptions\n) {\n  const result = getNamedParametrizedRoute(\n    normalizedRoute,\n    options.prefixRouteKeys,\n    options.includeSuffix ?? false,\n    options.includePrefix ?? false,\n    options.backreferenceDuplicateKeys ?? false\n  )\n\n  let namedRegex = result.namedParameterizedRoute\n  if (!options.excludeOptionalTrailingSlash) {\n    namedRegex += '(?:/)?'\n  }\n\n  return {\n    ...getRouteRegex(normalizedRoute, options),\n    namedRegex: `^${namedRegex}$`,\n    routeKeys: result.routeKeys,\n  }\n}\n\n/**\n * Generates a named regexp.\n * This is intended to be using for build time only.\n */\nexport function getNamedMiddlewareRegex(\n  normalizedRoute: string,\n  options: {\n    catchAll?: boolean\n  }\n) {\n  const { parameterizedRoute } = getParametrizedRoute(\n    normalizedRoute,\n    false,\n    false\n  )\n  const { catchAll = true } = options\n  if (parameterizedRoute === '/') {\n    let catchAllRegex = catchAll ? '.*' : ''\n    return {\n      namedRegex: `^/${catchAllRegex}$`,\n    }\n  }\n\n  const { namedParameterizedRoute } = getNamedParametrizedRoute(\n    normalizedRoute,\n    false,\n    false,\n    false,\n    false\n  )\n  let catchAllGroupedRegex = catchAll ? '(?:(/.*)?)' : ''\n  return {\n    namedRegex: `^${namedParameterizedRoute}${catchAllGroupedRegex}$`,\n  }\n}\n"],"names":["NEXT_INTERCEPTION_MARKER_PREFIX","NEXT_QUERY_PARAM_PREFIX","INTERCEPTION_ROUTE_MARKERS","escapeStringRegexp","removeTrailingSlash","PARAMETER_PATTERN","parseMatchedParameter","getParametrizedRoute","route","includeSuffix","includePrefix","groups","groupIndex","segments","segment","slice","split","markerMatch","find","m","startsWith","paramMatches","match","key","optional","repeat","pos","push","s","substring","parameterizedRoute","join","getRouteRegex","normalizedRoute","excludeOptionalTrailingSlash","re","RegExp","buildGetSafeRouteKey","i","routeKey","j","String","fromCharCode","Math","floor","getSafeKeyFromSegment","interceptionMarker","getSafeRouteKey","routeKeys","keyPrefix","backreferenceDuplicateKeys","cleanedKey","replace","invalidKey","length","isNaN","parseInt","duplicateKey","interceptionPrefix","pattern","getNamedParametrizedRoute","prefixRouteKeys","hasInterceptionMarker","some","undefined","namedParameterizedRoute","getNamedRouteRegex","options","result","namedRegex","getNamedMiddlewareRegex","catchAll","catchAllRegex","catchAllGroupedRegex"],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4295, "column": 0}, "map": {"version":3,"sources":["file:///home/joeagharib/My-Github/taskhive/client/node_modules/next/dist/src/server/request/fallback-params.ts"],"sourcesContent":["import { getRouteMatcher } from '../../shared/lib/router/utils/route-matcher'\nimport { getRouteRegex } from '../../shared/lib/router/utils/route-regex'\n\nexport type FallbackRouteParams = ReadonlyMap<string, string>\n\nfunction getParamKeys(page: string) {\n  const pattern = getRouteRegex(page)\n  const matcher = getRouteMatcher(pattern)\n\n  // Get the default list of allowed params.\n  return Object.keys(matcher(page))\n}\n\nexport function getFallbackRouteParams(\n  pageOrKeys: string | readonly string[]\n): FallbackRouteParams | null {\n  let keys: readonly string[]\n  if (typeof pageOrKeys === 'string') {\n    keys = getParamKeys(pageOrKeys)\n  } else {\n    keys = pageOrKeys\n  }\n\n  // If there are no keys, we can return early.\n  if (keys.length === 0) return null\n\n  const params = new Map<string, string>()\n\n  // As we're creating unique keys for each of the dynamic route params, we only\n  // need to generate a unique ID once per request because each of the keys will\n  // be also be unique.\n  const uniqueID = Math.random().toString(16).slice(2)\n\n  for (const key of keys) {\n    params.set(key, `%%drp:${key}:${uniqueID}%%`)\n  }\n\n  return params\n}\n"],"names":["getRouteMatcher","getRouteRegex","getParamKeys","page","pattern","matcher","Object","keys","getFallbackRouteParams","pageOrKeys","length","params","Map","uniqueID","Math","random","toString","slice","key","set"],"mappings":";;;;AAAA,SAASA,eAAe,QAAQ,8CAA6C;AAC7E,SAASC,aAAa,QAAQ,4CAA2C;;;AAIzE,SAASC,aAAaC,IAAY;IAChC,MAAMC,cAAUH,0MAAAA,EAAcE;IAC9B,MAAME,cAAUL,8MAAAA,EAAgBI;IAEhC,0CAA0C;IAC1C,OAAOE,OAAOC,IAAI,CAACF,QAAQF;AAC7B;AAEO,SAASK,uBACdC,UAAsC;IAEtC,IAAIF;IACJ,IAAI,OAAOE,eAAe,UAAU;QAClCF,OAAOL,aAAaO;IACtB,OAAO;QACLF,OAAOE;IACT;IAEA,6CAA6C;IAC7C,IAAIF,KAAKG,MAAM,KAAK,GAAG,OAAO;IAE9B,MAAMC,SAAS,IAAIC;IAEnB,8EAA8E;IAC9E,8EAA8E;IAC9E,qBAAqB;IACrB,MAAMC,WAAWC,KAAKC,MAAM,GAAGC,QAAQ,CAAC,IAAIC,KAAK,CAAC;IAElD,KAAK,MAAMC,OAAOX,KAAM;QACtBI,OAAOQ,GAAG,CAACD,KAAK,CAAC,MAAM,EAAEA,IAAI,CAAC,EAAEL,SAAS,EAAE,CAAC;IAC9C;IAEA,OAAOF;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4332, "column": 0}, "map": {"version":3,"sources":["file:///home/joeagharib/My-Github/taskhive/client/node_modules/next/dist/src/server/app-render/encryption-utils.ts"],"sourcesContent":["import type { ActionManifest } from '../../build/webpack/plugins/flight-client-entry-plugin'\nimport type {\n  ClientReferenceManifest,\n  ClientReferenceManifestForRsc,\n} from '../../build/webpack/plugins/flight-manifest-plugin'\nimport type { DeepReadonly } from '../../shared/lib/deep-readonly'\nimport { InvariantError } from '../../shared/lib/invariant-error'\nimport { normalizeAppPath } from '../../shared/lib/router/utils/app-paths'\nimport { workAsyncStorage } from './work-async-storage.external'\n\nlet __next_loaded_action_key: CryptoKey\n\nexport function arrayBufferToString(\n  buffer: ArrayBuffer | Uint8Array<ArrayBufferLike>\n) {\n  const bytes = new Uint8Array(buffer)\n  const len = bytes.byteLength\n\n  // @anonrig: V8 has a limit of 65535 arguments in a function.\n  // For len < 65535, this is faster.\n  // https://github.com/vercel/next.js/pull/56377#pullrequestreview-1656181623\n  if (len < 65535) {\n    return String.fromCharCode.apply(null, bytes as unknown as number[])\n  }\n\n  let binary = ''\n  for (let i = 0; i < len; i++) {\n    binary += String.fromCharCode(bytes[i])\n  }\n  return binary\n}\n\nexport function stringToUint8Array(binary: string) {\n  const len = binary.length\n  const arr = new Uint8Array(len)\n\n  for (let i = 0; i < len; i++) {\n    arr[i] = binary.charCodeAt(i)\n  }\n\n  return arr\n}\n\nexport function encrypt(key: CryptoKey, iv: Uint8Array, data: Uint8Array) {\n  return crypto.subtle.encrypt(\n    {\n      name: 'AES-GCM',\n      iv,\n    },\n    key,\n    data\n  )\n}\n\nexport function decrypt(key: CryptoKey, iv: Uint8Array, data: Uint8Array) {\n  return crypto.subtle.decrypt(\n    {\n      name: 'AES-GCM',\n      iv,\n    },\n    key,\n    data\n  )\n}\n\n// This is a global singleton that is used to encode/decode the action bound args from\n// the closure. This can't be using a AsyncLocalStorage as it might happen on the module\n// level. Since the client reference manifest won't be mutated, let's use a global singleton\n// to keep it.\nconst SERVER_ACTION_MANIFESTS_SINGLETON = Symbol.for(\n  'next.server.action-manifests'\n)\n\nexport function setReferenceManifestsSingleton({\n  page,\n  clientReferenceManifest,\n  serverActionsManifest,\n  serverModuleMap,\n}: {\n  page: string\n  clientReferenceManifest: DeepReadonly<ClientReferenceManifest>\n  serverActionsManifest: DeepReadonly<ActionManifest>\n  serverModuleMap: {\n    [id: string]: {\n      id: string\n      chunks: string[]\n      name: string\n    }\n  }\n}) {\n  // @ts-expect-error\n  const clientReferenceManifestsPerPage = globalThis[\n    SERVER_ACTION_MANIFESTS_SINGLETON\n  ]?.clientReferenceManifestsPerPage as\n    | undefined\n    | DeepReadonly<Record<string, ClientReferenceManifest>>\n\n  // @ts-expect-error\n  globalThis[SERVER_ACTION_MANIFESTS_SINGLETON] = {\n    clientReferenceManifestsPerPage: {\n      ...clientReferenceManifestsPerPage,\n      [normalizeAppPath(page)]: clientReferenceManifest,\n    },\n    serverActionsManifest,\n    serverModuleMap,\n  }\n}\n\nexport function getServerModuleMap() {\n  const serverActionsManifestSingleton = (globalThis as any)[\n    SERVER_ACTION_MANIFESTS_SINGLETON\n  ] as {\n    serverModuleMap: {\n      [id: string]: {\n        id: string\n        chunks: string[]\n        name: string\n      }\n    }\n  }\n\n  if (!serverActionsManifestSingleton) {\n    throw new InvariantError('Missing manifest for Server Actions.')\n  }\n\n  return serverActionsManifestSingleton.serverModuleMap\n}\n\nexport function getClientReferenceManifestForRsc(): DeepReadonly<ClientReferenceManifestForRsc> {\n  const serverActionsManifestSingleton = (globalThis as any)[\n    SERVER_ACTION_MANIFESTS_SINGLETON\n  ] as {\n    clientReferenceManifestsPerPage: DeepReadonly<\n      Record<string, ClientReferenceManifest>\n    >\n  }\n\n  if (!serverActionsManifestSingleton) {\n    throw new InvariantError('Missing manifest for Server Actions.')\n  }\n\n  const { clientReferenceManifestsPerPage } = serverActionsManifestSingleton\n  const workStore = workAsyncStorage.getStore()\n\n  if (!workStore) {\n    // If there's no work store defined, we can assume that a client reference\n    // manifest is needed during module evaluation, e.g. to create a server\n    // action using a higher-order function. This might also use client\n    // components which need to be serialized by Flight, and therefore client\n    // references need to be resolvable. To make this work, we're returning a\n    // merged manifest across all pages. This is fine as long as the module IDs\n    // are not page specific, which they are not for Webpack. TODO: Fix this in\n    // Turbopack.\n    return mergeClientReferenceManifests(clientReferenceManifestsPerPage)\n  }\n\n  const clientReferenceManifest =\n    clientReferenceManifestsPerPage[workStore.route]\n\n  if (!clientReferenceManifest) {\n    throw new InvariantError(\n      `Missing Client Reference Manifest for ${workStore.route}.`\n    )\n  }\n\n  return clientReferenceManifest\n}\n\nexport async function getActionEncryptionKey() {\n  if (__next_loaded_action_key) {\n    return __next_loaded_action_key\n  }\n\n  const serverActionsManifestSingleton = (globalThis as any)[\n    SERVER_ACTION_MANIFESTS_SINGLETON\n  ] as {\n    serverActionsManifest: DeepReadonly<ActionManifest>\n  }\n\n  if (!serverActionsManifestSingleton) {\n    throw new InvariantError('Missing manifest for Server Actions.')\n  }\n\n  const rawKey =\n    process.env.NEXT_SERVER_ACTIONS_ENCRYPTION_KEY ||\n    serverActionsManifestSingleton.serverActionsManifest.encryptionKey\n\n  if (rawKey === undefined) {\n    throw new InvariantError('Missing encryption key for Server Actions')\n  }\n\n  __next_loaded_action_key = await crypto.subtle.importKey(\n    'raw',\n    stringToUint8Array(atob(rawKey)),\n    'AES-GCM',\n    true,\n    ['encrypt', 'decrypt']\n  )\n\n  return __next_loaded_action_key\n}\n\nfunction mergeClientReferenceManifests(\n  clientReferenceManifestsPerPage: DeepReadonly<\n    Record<string, ClientReferenceManifest>\n  >\n): ClientReferenceManifestForRsc {\n  const clientReferenceManifests = Object.values(\n    clientReferenceManifestsPerPage as Record<string, ClientReferenceManifest>\n  )\n\n  const mergedClientReferenceManifest: ClientReferenceManifestForRsc = {\n    clientModules: {},\n    edgeRscModuleMapping: {},\n    rscModuleMapping: {},\n  }\n\n  for (const clientReferenceManifest of clientReferenceManifests) {\n    mergedClientReferenceManifest.clientModules = {\n      ...mergedClientReferenceManifest.clientModules,\n      ...clientReferenceManifest.clientModules,\n    }\n    mergedClientReferenceManifest.edgeRscModuleMapping = {\n      ...mergedClientReferenceManifest.edgeRscModuleMapping,\n      ...clientReferenceManifest.edgeRscModuleMapping,\n    }\n    mergedClientReferenceManifest.rscModuleMapping = {\n      ...mergedClientReferenceManifest.rscModuleMapping,\n      ...clientReferenceManifest.rscModuleMapping,\n    }\n  }\n\n  return mergedClientReferenceManifest\n}\n"],"names":["InvariantError","normalizeAppPath","workAsyncStorage","__next_loaded_action_key","arrayBufferToString","buffer","bytes","Uint8Array","len","byteLength","String","fromCharCode","apply","binary","i","stringToUint8Array","length","arr","charCodeAt","encrypt","key","iv","data","crypto","subtle","name","decrypt","SERVER_ACTION_MANIFESTS_SINGLETON","Symbol","for","setReferenceManifestsSingleton","page","clientReferenceManifest","serverActionsManifest","serverModuleMap","globalThis","clientReferenceManifestsPerPage","getServerModuleMap","serverActionsManifestSingleton","getClientReferenceManifestForRsc","workStore","getStore","mergeClientReferenceManifests","route","getActionEncryptionKey","rawKey","process","env","NEXT_SERVER_ACTIONS_ENCRYPTION_KEY","encryptionKey","undefined","importKey","atob","clientReferenceManifests","Object","values","mergedClientReferenceManifest","clientModules","edgeRscModuleMapping","rscModuleMapping"],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4507, "column": 0}, "map": {"version":3,"sources":["file:///home/joeagharib/My-Github/taskhive/client/node_modules/next/dist/src/shared/lib/router/utils/html-bots.ts"],"sourcesContent":["// This regex contains the bots that we need to do a blocking render for and can't safely stream the response\n// due to how they parse the DOM. For example, they might explicitly check for metadata in the `head` tag, so we can't stream metadata tags after the `head` was sent.\n// Note: The pattern [\\w-]+-Google captures all Google crawlers with \"-Google\" suffix (e.g., Mediapartners-Google, AdsBot-Google, Storebot-Google)\n// as well as crawlers starting with \"Google-\" (e.g., Google-PageRenderer, Google-InspectionTool)\nexport const HTML_LIMITED_BOT_UA_RE =\n  /[\\w-]+-Google|Google-[\\w-]+|Chrome-Lighthouse|Slurp|DuckDuckBot|baiduspider|yandex|sogou|bitlybot|tumblr|vkShare|quora link preview|redditbot|ia_archiver|Bingbot|BingPreview|applebot|facebookexternalhit|facebookcatalog|Twitterbot|LinkedInBot|Slackbot|Discordbot|WhatsApp|SkypeUriPreview|Yeti|googleweblight/i\n"],"names":["HTML_LIMITED_BOT_UA_RE"],"mappings":"AAAA,6GAA6G;AAC7G,sKAAsK;AACtK,kJAAkJ;AAClJ,iGAAiG;;;;;AAC1F,MAAMA,yBACX,sTAAqT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4520, "column": 0}, "map": {"version":3,"sources":["file:///home/joeagharib/My-Github/taskhive/client/node_modules/next/dist/src/shared/lib/router/utils/is-bot.ts"],"sourcesContent":["import { HTML_LIMITED_BOT_UA_RE } from './html-bots'\n\n// Bot crawler that will spin up a headless browser and execute JS.\n// Only the main Googlebot search crawler executes JavaScript, not other Google crawlers.\n// x-ref: https://developers.google.com/search/docs/crawling-indexing/google-common-crawlers\n// This regex specifically matches \"Googlebot\" but NOT \"Mediapartners-Google\", \"AdsBot-Google\", etc.\nconst HEADLESS_BROWSER_BOT_UA_RE = /Googlebot(?!-)|Googlebot$/i\n\nexport const HTML_LIMITED_BOT_UA_RE_STRING = HTML_LIMITED_BOT_UA_RE.source\n\nexport { HTML_LIMITED_BOT_UA_RE }\n\nfunction isDomBotUA(userAgent: string) {\n  return HEADLESS_BROWSER_BOT_UA_RE.test(userAgent)\n}\n\nfunction isHtmlLimitedBotUA(userAgent: string) {\n  return HTML_LIMITED_BOT_UA_RE.test(userAgent)\n}\n\nexport function isBot(userAgent: string): boolean {\n  return isDomBotUA(userAgent) || isHtmlLimitedBotUA(userAgent)\n}\n\nexport function getBotType(userAgent: string): 'dom' | 'html' | undefined {\n  if (isDomBotUA(userAgent)) {\n    return 'dom'\n  }\n  if (isHtmlLimitedBotUA(userAgent)) {\n    return 'html'\n  }\n  return undefined\n}\n"],"names":["HTML_LIMITED_BOT_UA_RE","HEADLESS_BROWSER_BOT_UA_RE","HTML_LIMITED_BOT_UA_RE_STRING","source","isDomBotUA","userAgent","test","isHtmlLimitedBotUA","isBot","getBotType","undefined"],"mappings":";;;;;;;;AAAA,SAASA,sBAAsB,QAAQ,cAAa;;AAEpD,mEAAmE;AACnE,yFAAyF;AACzF,4FAA4F;AAC5F,oGAAoG;AACpG,MAAMC,6BAA6B;AAE5B,MAAMC,gCAAgCF,iNAAAA,CAAuBG,MAAM,CAAA;;AAI1E,SAASC,WAAWC,SAAiB;IACnC,OAAOJ,2BAA2BK,IAAI,CAACD;AACzC;AAEA,SAASE,mBAAmBF,SAAiB;IAC3C,OAAOL,iNAAAA,CAAuBM,IAAI,CAACD;AACrC;AAEO,SAASG,MAAMH,SAAiB;IACrC,OAAOD,WAAWC,cAAcE,mBAAmBF;AACrD;AAEO,SAASI,WAAWJ,SAAiB;IAC1C,IAAID,WAAWC,YAAY;QACzB,OAAO;IACT;IACA,IAAIE,mBAAmBF,YAAY;QACjC,OAAO;IACT;IACA,OAAOK;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4559, "column": 0}, "map": {"version":3,"sources":["file:///home/joeagharib/My-Github/taskhive/client/node_modules/next/dist/src/server/lib/streaming-metadata.ts"],"sourcesContent":["import {\n  getBotType,\n  HTML_LIMITED_BOT_UA_RE_STRING,\n} from '../../shared/lib/router/utils/is-bot'\nimport type { BaseNextRequest } from '../base-http'\n\nexport function shouldServeStreamingMetadata(\n  userAgent: string,\n  htmlLimitedBots: string | undefined\n): boolean {\n  const blockingMetadataUARegex = new RegExp(\n    htmlLimitedBots || HTML_LIMITED_BOT_UA_RE_STRING,\n    'i'\n  )\n  // Only block metadata for HTML-limited bots\n  if (userAgent && blockingMetadataUARegex.test(userAgent)) {\n    return false\n  }\n  return true\n}\n\n// When the request UA is a html-limited bot, we should do a dynamic render.\n// In this case, postpone state is not sent.\nexport function isHtmlBotRequest(req: {\n  headers: BaseNextRequest['headers']\n}): boolean {\n  const ua = req.headers['user-agent'] || ''\n  const botType = getBotType(ua)\n\n  return botType === 'html'\n}\n"],"names":["getBotType","HTML_LIMITED_BOT_UA_RE_STRING","shouldServeStreamingMetadata","userAgent","htmlLimitedBots","blockingMetadataUARegex","RegExp","test","isHtmlBotRequest","req","ua","headers","botType"],"mappings":";;;;;;AAAA,SACEA,UAAU,EACVC,6BAA6B,QACxB,uCAAsC;;AAGtC,SAASC,6BACdC,SAAiB,EACjBC,eAAmC;IAEnC,MAAMC,0BAA0B,IAAIC,OAClCF,mBAAmBH,qOAAAA,EACnB;IAEF,4CAA4C;IAC5C,IAAIE,aAAaE,wBAAwBE,IAAI,CAACJ,YAAY;QACxD,OAAO;IACT;IACA,OAAO;AACT;AAIO,SAASK,iBAAiBC,GAEhC;IACC,MAAMC,KAAKD,IAAIE,OAAO,CAAC,aAAa,IAAI;IACxC,MAAMC,cAAUZ,kNAAAA,EAAWU;IAE3B,OAAOE,YAAY;AACrB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4584, "column": 0}, "map": {"version":3,"sources":["file:///home/joeagharib/My-Github/taskhive/client/node_modules/next/dist/src/server/app-render/action-utils.ts"],"sourcesContent":["import type { ActionManifest } from '../../build/webpack/plugins/flight-client-entry-plugin'\nimport { normalizeAppPath } from '../../shared/lib/router/utils/app-paths'\nimport { pathHasPrefix } from '../../shared/lib/router/utils/path-has-prefix'\nimport { removePathPrefix } from '../../shared/lib/router/utils/remove-path-prefix'\nimport { workAsyncStorage } from './work-async-storage.external'\n\n// This function creates a Flight-acceptable server module map proxy from our\n// Server Reference Manifest similar to our client module map.\n// This is because our manifest contains a lot of internal Next.js data that\n// are relevant to the runtime, workers, etc. that React doesn't need to know.\nexport function createServerModuleMap({\n  serverActionsManifest,\n}: {\n  serverActionsManifest: ActionManifest\n}) {\n  return new Proxy(\n    {},\n    {\n      get: (_, id: string) => {\n        const workers =\n          serverActionsManifest[\n            process.env.NEXT_RUNTIME === 'edge' ? 'edge' : 'node'\n          ]?.[id]?.workers\n\n        if (!workers) {\n          return undefined\n        }\n\n        const workStore = workAsyncStorage.getStore()\n\n        let workerEntry:\n          | { moduleId: string | number; async: boolean }\n          | undefined\n\n        if (workStore) {\n          workerEntry = workers[normalizeWorkerPageName(workStore.page)]\n        } else {\n          // If there's no work store defined, we can assume that a server\n          // module map is needed during module evaluation, e.g. to create a\n          // server action using a higher-order function. Therefore it should be\n          // safe to return any entry from the manifest that matches the action\n          // ID. They all refer to the same module ID, which must also exist in\n          // the current page bundle. TODO: This is currently not guaranteed in\n          // Turbopack, and needs to be fixed.\n          workerEntry = Object.values(workers).at(0)\n        }\n\n        if (!workerEntry) {\n          return undefined\n        }\n\n        const { moduleId, async } = workerEntry\n\n        return { id: moduleId, name: id, chunks: [], async }\n      },\n    }\n  )\n}\n\n/**\n * Checks if the requested action has a worker for the current page.\n * If not, it returns the first worker that has a handler for the action.\n */\nexport function selectWorkerForForwarding(\n  actionId: string,\n  pageName: string,\n  serverActionsManifest: ActionManifest\n) {\n  const workers =\n    serverActionsManifest[\n      process.env.NEXT_RUNTIME === 'edge' ? 'edge' : 'node'\n    ][actionId]?.workers\n  const workerName = normalizeWorkerPageName(pageName)\n\n  // no workers, nothing to forward to\n  if (!workers) return\n\n  // if there is a worker for this page, no need to forward it.\n  if (workers[workerName]) {\n    return\n  }\n\n  // otherwise, grab the first worker that has a handler for this action id\n  return denormalizeWorkerPageName(Object.keys(workers)[0])\n}\n\n/**\n * The flight entry loader keys actions by bundlePath.\n * bundlePath corresponds with the relative path (including 'app') to the page entrypoint.\n */\nfunction normalizeWorkerPageName(pageName: string) {\n  if (pathHasPrefix(pageName, 'app')) {\n    return pageName\n  }\n\n  return 'app' + pageName\n}\n\n/**\n * Converts a bundlePath (relative path to the entrypoint) to a routable page name\n */\nfunction denormalizeWorkerPageName(bundlePath: string) {\n  return normalizeAppPath(removePathPrefix(bundlePath, 'app'))\n}\n"],"names":["normalizeAppPath","pathHasPrefix","removePathPrefix","workAsyncStorage","createServerModuleMap","serverActionsManifest","Proxy","get","_","id","workers","process","env","NEXT_RUNTIME","undefined","workStore","getStore","workerEntry","normalizeWorkerPageName","page","Object","values","at","moduleId","async","name","chunks","selectWorkerForForwarding","actionId","pageName","workerName","denormalizeWorkerPageName","keys","bundlePath"],"mappings":";;;;;;AACA,SAASA,gBAAgB,QAAQ,0CAAyC;AAC1E,SAASC,aAAa,QAAQ,gDAA+C;AAC7E,SAASC,gBAAgB,QAAQ,mDAAkD;AACnF,SAASC,gBAAgB,QAAQ,gCAA+B;;;;;AAMzD,SAASC,sBAAsB,EACpCC,qBAAqB,EAGtB;IACC,OAAO,IAAIC,MACT,CAAC,GACD;QACEC,KAAK,CAACC,GAAGC;gBAELJ,4BAAAA;YADF,MAAMK,UAAAA,CACJL,0BAAAA,qBAAqB,CACnBM,QAAQC,GAAG,CAACC,YAAY,KAAK,SAAS,0BAAS,OAChD,KAAA,OAAA,KAAA,IAAA,CAFDR,6BAAAA,uBAEG,CAACI,GAAG,KAAA,OAAA,KAAA,IAFPJ,2BAESK,OAAO;YAElB,IAAI,CAACA,SAAS;gBACZ,OAAOI;YACT;YAEA,MAAMC,YAAYZ,uRAAAA,CAAiBa,QAAQ;YAE3C,IAAIC;YAIJ,IAAIF,WAAW;gBACbE,cAAcP,OAAO,CAACQ,wBAAwBH,UAAUI,IAAI,EAAE;YAChE,OAAO;gBACL,gEAAgE;gBAChE,kEAAkE;gBAClE,sEAAsE;gBACtE,qEAAqE;gBACrE,qEAAqE;gBACrE,qEAAqE;gBACrE,oCAAoC;gBACpCF,cAAcG,OAAOC,MAAM,CAACX,SAASY,EAAE,CAAC;YAC1C;YAEA,IAAI,CAACL,aAAa;gBAChB,OAAOH;YACT;YAEA,MAAM,EAAES,QAAQ,EAAEC,KAAK,EAAE,GAAGP;YAE5B,OAAO;gBAAER,IAAIc;gBAAUE,MAAMhB;gBAAIiB,QAAQ,EAAE;gBAAEF;YAAM;QACrD;IACF;AAEJ;AAMO,SAASG,0BACdC,QAAgB,EAChBC,QAAgB,EAChBxB,qBAAqC;QAGnCA;IADF,MAAMK,UAAAA,CACJL,mCAAAA,qBAAqB,CACnBM,QAAQC,GAAG,CAACC,YAAY,KAAK,SAAS,0BAAS,OAChD,CAACe,SAAS,KAAA,OAAA,KAAA,IAFXvB,iCAEaK,OAAO;IACtB,MAAMoB,aAAaZ,wBAAwBW;IAE3C,oCAAoC;IACpC,IAAI,CAACnB,SAAS;IAEd,6DAA6D;IAC7D,IAAIA,OAAO,CAACoB,WAAW,EAAE;QACvB;IACF;IAEA,yEAAyE;IACzE,OAAOC,0BAA0BX,OAAOY,IAAI,CAACtB,QAAQ,CAAC,EAAE;AAC1D;AAEA;;;CAGC,GACD,SAASQ,wBAAwBW,QAAgB;IAC/C,QAAI5B,iNAAAA,EAAc4B,UAAU,QAAQ;QAClC,OAAOA;IACT;IAEA,OAAO,QAAQA;AACjB;AAEA;;CAEC,GACD,SAASE,0BAA0BE,UAAkB;IACnD,WAAOjC,2MAAAA,MAAiBE,uNAAAA,EAAiB+B,YAAY;AACvD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4664, "column": 0}, "map": {"version":3,"sources":["file:///home/joeagharib/My-Github/taskhive/client/node_modules/next/dist/src/server/lib/server-action-request-meta.ts"],"sourcesContent":["import type { IncomingMessage } from 'http'\nimport type { BaseNextRequest } from '../base-http'\nimport type { NextRequest } from '../web/exports'\nimport { ACTION_HEADER } from '../../client/components/app-router-headers'\n\nexport function getServerActionRequestMetadata(\n  req: IncomingMessage | BaseNextRequest | NextRequest\n): {\n  actionId: string | null\n  isURLEncodedAction: boolean\n  isMultipartAction: boolean\n  isFetchAction: boolean\n  isPossibleServerAction: boolean\n} {\n  let actionId: string | null\n  let contentType: string | null\n\n  if (req.headers instanceof Headers) {\n    actionId = req.headers.get(ACTION_HEADER) ?? null\n    contentType = req.headers.get('content-type')\n  } else {\n    actionId = (req.headers[ACTION_HEADER] as string) ?? null\n    contentType = req.headers['content-type'] ?? null\n  }\n\n  const isURLEncodedAction = Boolean(\n    req.method === 'POST' && contentType === 'application/x-www-form-urlencoded'\n  )\n  const isMultipartAction = Boolean(\n    req.method === 'POST' && contentType?.startsWith('multipart/form-data')\n  )\n  const isFetchAction = Boolean(\n    actionId !== undefined &&\n      typeof actionId === 'string' &&\n      req.method === 'POST'\n  )\n\n  const isPossibleServerAction = Boolean(\n    isFetchAction || isURLEncodedAction || isMultipartAction\n  )\n\n  return {\n    actionId,\n    isURLEncodedAction,\n    isMultipartAction,\n    isFetchAction,\n    isPossibleServerAction,\n  }\n}\n\nexport function getIsPossibleServerAction(\n  req: IncomingMessage | BaseNextRequest | NextRequest\n): boolean {\n  return getServerActionRequestMetadata(req).isPossibleServerAction\n}\n"],"names":["ACTION_HEADER","getServerActionRequestMetadata","req","actionId","contentType","headers","Headers","get","isURLEncodedAction","Boolean","method","isMultipartAction","startsWith","isFetchAction","undefined","isPossibleServerAction","getIsPossibleServerAction"],"mappings":";;;;;;AAGA,SAASA,aAAa,QAAQ,6CAA4C;;AAEnE,SAASC,+BACdC,GAAoD;IAQpD,IAAIC;IACJ,IAAIC;IAEJ,IAAIF,IAAIG,OAAO,YAAYC,SAAS;QAClCH,WAAWD,IAAIG,OAAO,CAACE,GAAG,CAACP,wMAAAA,KAAkB;QAC7CI,cAAcF,IAAIG,OAAO,CAACE,GAAG,CAAC;IAChC,OAAO;QACLJ,WAAYD,IAAIG,OAAO,CAACL,wMAAAA,CAAc,IAAe;QACrDI,cAAcF,IAAIG,OAAO,CAAC,eAAe,IAAI;IAC/C;IAEA,MAAMG,qBAAqBC,QACzBP,IAAIQ,MAAM,KAAK,UAAUN,gBAAgB;IAE3C,MAAMO,oBAAoBF,QACxBP,IAAIQ,MAAM,KAAK,UAAA,CAAUN,eAAAA,OAAAA,KAAAA,IAAAA,YAAaQ,UAAU,CAAC,sBAAA;IAEnD,MAAMC,gBAAgBJ,QACpBN,aAAaW,aACX,OAAOX,aAAa,YACpBD,IAAIQ,MAAM,KAAK;IAGnB,MAAMK,yBAAyBN,QAC7BI,iBAAiBL,sBAAsBG;IAGzC,OAAO;QACLR;QACAK;QACAG;QACAE;QACAE;IACF;AACF;AAEO,SAASC,0BACdd,GAAoD;IAEpD,OAAOD,+BAA+BC,KAAKa,sBAAsB;AACnE","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4701, "column": 0}, "map": {"version":3,"sources":["file:///home/joeagharib/My-Github/taskhive/client/node_modules/next/dist/src/lib/fallback.ts"],"sourcesContent":["/**\n * Describes the different fallback modes that a given page can have.\n */\nexport const enum FallbackMode {\n  /**\n   * A BLOCKING_STATIC_RENDER fallback will block the request until the page is\n   * generated. No fallback page will be rendered, and users will have to wait\n   * to render the page.\n   */\n  BLOCKING_STATIC_RENDER = 'BLOCKING_STATIC_RENDER',\n\n  /**\n   * When set to PRERENDER, a fallback page will be sent to users in place of\n   * forcing them to wait for the page to be generated. This allows the user to\n   * see a rendered page earlier.\n   */\n  PRERENDER = 'PRERENDER',\n\n  /**\n   * When set to NOT_FOUND, pages that are not already prerendered will result\n   * in a not found response.\n   */\n  NOT_FOUND = 'NOT_FOUND',\n}\n\n/**\n * The fallback value returned from the `getStaticPaths` function.\n */\nexport type GetStaticPathsFallback = boolean | 'blocking'\n\n/**\n * Parses the fallback field from the prerender manifest.\n *\n * @param fallbackField The fallback field from the prerender manifest.\n * @returns The fallback mode.\n */\nexport function parseFallbackField(\n  fallbackField: string | boolean | null | undefined\n): FallbackMode | undefined {\n  if (typeof fallbackField === 'string') {\n    return FallbackMode.PRERENDER\n  } else if (fallbackField === null) {\n    return FallbackMode.BLOCKING_STATIC_RENDER\n  } else if (fallbackField === false) {\n    return FallbackMode.NOT_FOUND\n  } else if (fallbackField === undefined) {\n    return undefined\n  } else {\n    throw new Error(\n      `Invalid fallback option: ${fallbackField}. Fallback option must be a string, null, undefined, or false.`\n    )\n  }\n}\n\nexport function fallbackModeToFallbackField(\n  fallback: FallbackMode,\n  page: string | undefined\n): string | false | null {\n  switch (fallback) {\n    case FallbackMode.BLOCKING_STATIC_RENDER:\n      return null\n    case FallbackMode.NOT_FOUND:\n      return false\n    case FallbackMode.PRERENDER:\n      if (!page) {\n        throw new Error(\n          `Invariant: expected a page to be provided when fallback mode is \"${fallback}\"`\n        )\n      }\n\n      return page\n    default:\n      throw new Error(`Invalid fallback mode: ${fallback}`)\n  }\n}\n\n/**\n * Parses the fallback from the static paths result.\n *\n * @param result The result from the static paths function.\n * @returns The fallback mode.\n */\nexport function parseStaticPathsResult(\n  result: GetStaticPathsFallback\n): FallbackMode {\n  if (result === true) {\n    return FallbackMode.PRERENDER\n  } else if (result === 'blocking') {\n    return FallbackMode.BLOCKING_STATIC_RENDER\n  } else {\n    return FallbackMode.NOT_FOUND\n  }\n}\n"],"names":["FallbackMode","parseFallbackField","fallbackField","undefined","Error","fallbackModeToFallbackField","fallback","page","parseStaticPathsResult","result"],"mappings":"AAAA;;CAEC,GACD;;;;;;;;;;AAAO,IAAWA,eAAAA,WAAAA,GAAAA,SAAAA,YAAAA;IAChB;;;;GAIC,GAAA,YAAA,CAAA,yBAAA,GAAA;IAGD;;;;GAIC,GAAA,YAAA,CAAA,YAAA,GAAA;IAGD;;;GAGC,GAAA,YAAA,CAAA,YAAA,GAAA;WAlBeA;MAoBjB;AAaM,SAASC,mBACdC,aAAkD;IAElD,IAAI,OAAOA,kBAAkB,UAAU;QACrC,OAAA;IACF,OAAO,IAAIA,kBAAkB,MAAM;QACjC,OAAA;IACF,OAAO,IAAIA,kBAAkB,OAAO;QAClC,OAAA;IACF,OAAO,IAAIA,kBAAkBC,WAAW;QACtC,OAAOA;IACT,OAAO;QACL,MAAM,OAAA,cAEL,CAFK,IAAIC,MACR,CAAC,yBAAyB,EAAEF,cAAc,8DAA8D,CAAC,GADrG,qBAAA;mBAAA;wBAAA;0BAAA;QAEN;IACF;AACF;AAEO,SAASG,4BACdC,QAAsB,EACtBC,IAAwB;IAExB,OAAQD;QACN,KAAA;YACE,OAAO;QACT,KAAA;YACE,OAAO;QACT,KAAA;YACE,IAAI,CAACC,MAAM;gBACT,MAAM,OAAA,cAEL,CAFK,IAAIH,MACR,CAAC,iEAAiE,EAAEE,SAAS,CAAC,CAAC,GAD3E,qBAAA;2BAAA;gCAAA;kCAAA;gBAEN;YACF;YAEA,OAAOC;QACT;YACE,MAAM,OAAA,cAA+C,CAA/C,IAAIH,MAAM,CAAC,uBAAuB,EAAEE,UAAU,GAA9C,qBAAA;uBAAA;4BAAA;8BAAA;YAA8C;IACxD;AACF;AAQO,SAASE,uBACdC,MAA8B;IAE9B,IAAIA,WAAW,MAAM;QACnB,OAAA;IACF,OAAO,IAAIA,WAAW,YAAY;QAChC,OAAA;IACF,OAAO;QACL,OAAA;IACF;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4783, "column": 0}, "map": {"version":3,"sources":["file:///home/joeagharib/My-Github/taskhive/client/node_modules/next/dist/src/server/lib/etag.ts"],"sourcesContent":["/**\n * FNV-1a Hash implementation\n * @author Travis Webb (tjwebb) <me@traviswebb.com>\n *\n * Ported from https://github.com/tjwebb/fnv-plus/blob/master/index.js\n *\n * Simplified, optimized and add modified for 52 bit, which provides a larger hash space\n * and still making use of Javascript's 53-bit integer space.\n */\nexport const fnv1a52 = (str: string) => {\n  const len = str.length\n  let i = 0,\n    t0 = 0,\n    v0 = 0x2325,\n    t1 = 0,\n    v1 = 0x8422,\n    t2 = 0,\n    v2 = 0x9ce4,\n    t3 = 0,\n    v3 = 0xcbf2\n\n  while (i < len) {\n    v0 ^= str.charCodeAt(i++)\n    t0 = v0 * 435\n    t1 = v1 * 435\n    t2 = v2 * 435\n    t3 = v3 * 435\n    t2 += v0 << 8\n    t3 += v1 << 8\n    t1 += t0 >>> 16\n    v0 = t0 & 65535\n    t2 += t1 >>> 16\n    v1 = t1 & 65535\n    v3 = (t3 + (t2 >>> 16)) & 65535\n    v2 = t2 & 65535\n  }\n\n  return (\n    (v3 & 15) * 281474976710656 +\n    v2 * 4294967296 +\n    v1 * 65536 +\n    (v0 ^ (v3 >> 4))\n  )\n}\n\nexport const generateETag = (payload: string, weak = false) => {\n  const prefix = weak ? 'W/\"' : '\"'\n  return (\n    prefix + fnv1a52(payload).toString(36) + payload.length.toString(36) + '\"'\n  )\n}\n"],"names":["fnv1a52","str","len","length","i","t0","v0","t1","v1","t2","v2","t3","v3","charCodeAt","generateETag","payload","weak","prefix","toString"],"mappings":"AAAA;;;;;;;;CAQC,GACD;;;;;;AAAO,MAAMA,UAAU,CAACC;IACtB,MAAMC,MAAMD,IAAIE,MAAM;IACtB,IAAIC,IAAI,GACNC,KAAK,GACLC,KAAK,QACLC,KAAK,GACLC,KAAK,QACLC,KAAK,GACLC,KAAK,QACLC,KAAK,GACLC,KAAK;IAEP,MAAOR,IAAIF,IAAK;QACdI,MAAML,IAAIY,UAAU,CAACT;QACrBC,KAAKC,KAAK;QACVC,KAAKC,KAAK;QACVC,KAAKC,KAAK;QACVC,KAAKC,KAAK;QACVH,MAAMH,MAAM;QACZK,MAAMH,MAAM;QACZD,MAAMF,OAAO;QACbC,KAAKD,KAAK;QACVI,MAAMF,OAAO;QACbC,KAAKD,KAAK;QACVK,KAAMD,KAAMF,CAAAA,OAAO,EAAC,IAAM;QAC1BC,KAAKD,KAAK;IACZ;IAEA,OACGG,CAAAA,KAAK,EAAC,IAAK,kBACZF,KAAK,aACLF,KAAK,QACJF,CAAAA,KAAMM,MAAM,CAAC;AAElB,EAAC;AAEM,MAAME,eAAe,CAACC,SAAiBC,OAAO,KAAK;IACxD,MAAMC,SAASD,OAAO,QAAQ;IAC9B,OACEC,SAASjB,QAAQe,SAASG,QAAQ,CAAC,MAAMH,QAAQZ,MAAM,CAACe,QAAQ,CAAC,MAAM;AAE3E,EAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4824, "column": 0}, "map": {"version":3,"sources":["file:///home/joeagharib/My-Github/taskhive/client/node_modules/next/dist/compiled/fresh/index.js"],"sourcesContent":["(()=>{\"use strict\";var e={695:e=>{\n/*!\n * fresh\n * Copyright(c) 2012 TJ Holowaychuk\n * Copyright(c) 2016-2017 Douglas Christopher Wilson\n * MIT Licensed\n */\nvar r=/(?:^|,)\\s*?no-cache\\s*?(?:,|$)/;e.exports=fresh;function fresh(e,a){var t=e[\"if-modified-since\"];var s=e[\"if-none-match\"];if(!t&&!s){return false}var i=e[\"cache-control\"];if(i&&r.test(i)){return false}if(s&&s!==\"*\"){var f=a[\"etag\"];if(!f){return false}var n=true;var u=parseTokenList(s);for(var _=0;_<u.length;_++){var o=u[_];if(o===f||o===\"W/\"+f||\"W/\"+o===f){n=false;break}}if(n){return false}}if(t){var p=a[\"last-modified\"];var v=!p||!(parseHttpDate(p)<=parseHttpDate(t));if(v){return false}}return true}function parseHttpDate(e){var r=e&&Date.parse(e);return typeof r===\"number\"?r:NaN}function parseTokenList(e){var r=0;var a=[];var t=0;for(var s=0,i=e.length;s<i;s++){switch(e.charCodeAt(s)){case 32:if(t===r){t=r=s+1}break;case 44:a.push(e.substring(t,r));t=r=s+1;break;default:r=s+1;break}}a.push(e.substring(t,r));return a}}};var r={};function __nccwpck_require__(a){var t=r[a];if(t!==undefined){return t.exports}var s=r[a]={exports:{}};var i=true;try{e[a](s,s.exports,__nccwpck_require__);i=false}finally{if(i)delete r[a]}return s.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var a=__nccwpck_require__(695);module.exports=a})();"],"names":[],"mappings":"AAAA,CAAC;IAAK;IAAa,IAAI,IAAE;QAAC,KAAI,CAAA;YAC9B;;;;;CAKC,GACD,IAAI,IAAE;YAAiC,EAAE,OAAO,GAAC;YAAM,SAAS,MAAM,CAAC,EAAC,CAAC;gBAAE,IAAI,IAAE,CAAC,CAAC,oBAAoB;gBAAC,IAAI,IAAE,CAAC,CAAC,gBAAgB;gBAAC,IAAG,CAAC,KAAG,CAAC,GAAE;oBAAC,OAAO;gBAAK;gBAAC,IAAI,IAAE,CAAC,CAAC,gBAAgB;gBAAC,IAAG,KAAG,EAAE,IAAI,CAAC,IAAG;oBAAC,OAAO;gBAAK;gBAAC,IAAG,KAAG,MAAI,KAAI;oBAAC,IAAI,IAAE,CAAC,CAAC,OAAO;oBAAC,IAAG,CAAC,GAAE;wBAAC,OAAO;oBAAK;oBAAC,IAAI,IAAE;oBAAK,IAAI,IAAE,eAAe;oBAAG,IAAI,IAAI,IAAE,GAAE,IAAE,EAAE,MAAM,EAAC,IAAI;wBAAC,IAAI,IAAE,CAAC,CAAC,EAAE;wBAAC,IAAG,MAAI,KAAG,MAAI,OAAK,KAAG,OAAK,MAAI,GAAE;4BAAC,IAAE;4BAAM;wBAAK;oBAAC;oBAAC,IAAG,GAAE;wBAAC,OAAO;oBAAK;gBAAC;gBAAC,IAAG,GAAE;oBAAC,IAAI,IAAE,CAAC,CAAC,gBAAgB;oBAAC,IAAI,IAAE,CAAC,KAAG,CAAC,CAAC,cAAc,MAAI,cAAc,EAAE;oBAAE,IAAG,GAAE;wBAAC,OAAO;oBAAK;gBAAC;gBAAC,OAAO;YAAI;YAAC,SAAS,cAAc,CAAC;gBAAE,IAAI,IAAE,KAAG,KAAK,KAAK,CAAC;gBAAG,OAAO,OAAO,MAAI,WAAS,IAAE;YAAG;YAAC,SAAS,eAAe,CAAC;gBAAE,IAAI,IAAE;gBAAE,IAAI,IAAE,EAAE;gBAAC,IAAI,IAAE;gBAAE,IAAI,IAAI,IAAE,GAAE,IAAE,EAAE,MAAM,EAAC,IAAE,GAAE,IAAI;oBAAC,OAAO,EAAE,UAAU,CAAC;wBAAI,KAAK;4BAAG,IAAG,MAAI,GAAE;gCAAC,IAAE,IAAE,IAAE;4BAAC;4BAAC;wBAAM,KAAK;4BAAG,EAAE,IAAI,CAAC,EAAE,SAAS,CAAC,GAAE;4BAAI,IAAE,IAAE,IAAE;4BAAE;wBAAM;4BAAQ,IAAE,IAAE;4BAAE;oBAAK;gBAAC;gBAAC,EAAE,IAAI,CAAC,EAAE,SAAS,CAAC,GAAE;gBAAI,OAAO;YAAC;QAAC;IAAC;IAAE,IAAI,IAAE,CAAC;IAAE,SAAS,oBAAoB,CAAC;QAAE,IAAI,IAAE,CAAC,CAAC,EAAE;QAAC,IAAG,MAAI,WAAU;YAAC,OAAO,EAAE,OAAO;QAAA;QAAC,IAAI,IAAE,CAAC,CAAC,EAAE,GAAC;YAAC,SAAQ,CAAC;QAAC;QAAE,IAAI,IAAE;QAAK,IAAG;YAAC,CAAC,CAAC,EAAE,CAAC,GAAE,EAAE,OAAO,EAAC;YAAqB,IAAE;QAAK,SAAQ;YAAC,IAAG,GAAE,OAAO,CAAC,CAAC,EAAE;QAAA;QAAC,OAAO,EAAE,OAAO;IAAA;IAAC,IAAG,OAAO,wBAAsB,aAAY,oBAAoB,EAAE,GAAC,kFAAU;IAAI,IAAI,IAAE,oBAAoB;IAAK,OAAO,OAAO,GAAC;AAAC,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4927, "column": 0}, "map": {"version":3,"sources":["file:///home/joeagharib/My-Github/taskhive/client/node_modules/next/dist/src/server/lib/cache-control.ts"],"sourcesContent":["import { CACHE_ONE_YEAR } from '../../lib/constants'\n\n/**\n * The revalidate option used internally for pages. A value of `false` means\n * that the page should not be revalidated. A number means that the page\n * should be revalidated after the given number of seconds (this also includes\n * `1` which means to revalidate after 1 second). A value of `0` is not a valid\n * value for this option.\n */\nexport type Revalidate = number | false\n\nexport interface CacheControl {\n  revalidate: Revalidate\n  expire: number | undefined\n}\n\nexport function getCacheControlHeader({\n  revalidate,\n  expire,\n}: CacheControl): string {\n  const swrHeader =\n    typeof revalidate === 'number' &&\n    expire !== undefined &&\n    revalidate < expire\n      ? `, stale-while-revalidate=${expire - revalidate}`\n      : ''\n\n  if (revalidate === 0) {\n    return 'private, no-cache, no-store, max-age=0, must-revalidate'\n  } else if (typeof revalidate === 'number') {\n    return `s-maxage=${revalidate}${swrHeader}`\n  }\n\n  return `s-maxage=${CACHE_ONE_YEAR}${swrHeader}`\n}\n"],"names":["CACHE_ONE_YEAR","getCacheControlHeader","revalidate","expire","swrHeader","undefined"],"mappings":";;;;AAAA,SAASA,cAAc,QAAQ,sBAAqB;;AAgB7C,SAASC,sBAAsB,EACpCC,UAAU,EACVC,MAAM,EACO;IACb,MAAMC,YACJ,OAAOF,eAAe,YACtBC,WAAWE,aACXH,aAAaC,SACT,CAAC,yBAAyB,EAAEA,SAASD,YAAY,GACjD;IAEN,IAAIA,eAAe,GAAG;QACpB,OAAO;IACT,OAAO,IAAI,OAAOA,eAAe,UAAU;QACzC,OAAO,CAAC,SAAS,EAAEA,aAAaE,WAAW;IAC7C;IAEA,OAAO,CAAC,SAAS,EAAEJ,yKAAAA,GAAiBI,WAAW;AACjD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4946, "column": 0}, "map": {"version":3,"sources":["file:///home/joeagharib/My-Github/taskhive/client/node_modules/next/dist/src/server/send-payload.ts"],"sourcesContent":["import type { IncomingMessage, ServerResponse } from 'http'\nimport type RenderResult from './render-result'\nimport type { CacheControl } from './lib/cache-control'\n\nimport { isResSent } from '../shared/lib/utils'\nimport { generateETag } from './lib/etag'\nimport fresh from 'next/dist/compiled/fresh'\nimport { getCacheControlHeader } from './lib/cache-control'\nimport { HTML_CONTENT_TYPE_HEADER } from '../lib/constants'\n\nexport function sendEtagResponse(\n  req: IncomingMessage,\n  res: ServerResponse,\n  etag: string | undefined\n): boolean {\n  if (etag) {\n    /**\n     * The server generating a 304 response MUST generate any of the\n     * following header fields that would have been sent in a 200 (OK)\n     * response to the same request: Cache-Control, Content-Location, Date,\n     * ETag, Expires, and Vary. https://tools.ietf.org/html/rfc7232#section-4.1\n     */\n    res.setHeader('ETag', etag)\n  }\n\n  if (fresh(req.headers, { etag })) {\n    res.statusCode = 304\n    res.end()\n    return true\n  }\n\n  return false\n}\n\nexport async function sendRenderResult({\n  req,\n  res,\n  result,\n  generateEtags,\n  poweredByHeader,\n  cacheControl,\n}: {\n  req: IncomingMessage\n  res: ServerResponse\n  result: RenderResult\n  generateEtags: boolean\n  poweredByHeader: boolean\n  cacheControl: CacheControl | undefined\n}): Promise<void> {\n  if (isResSent(res)) {\n    return\n  }\n\n  if (poweredByHeader && result.contentType === HTML_CONTENT_TYPE_HEADER) {\n    res.setHeader('X-Powered-By', 'Next.js')\n  }\n\n  // If cache control is already set on the response we don't\n  // override it to allow users to customize it via next.config\n  if (cacheControl && !res.getHeader('Cache-Control')) {\n    res.setHeader('Cache-Control', getCacheControlHeader(cacheControl))\n  }\n\n  const payload = result.isDynamic ? null : result.toUnchunkedString()\n\n  if (generateEtags && payload !== null) {\n    const etag = generateETag(payload)\n    if (sendEtagResponse(req, res, etag)) {\n      return\n    }\n  }\n\n  if (!res.getHeader('Content-Type') && result.contentType) {\n    res.setHeader('Content-Type', result.contentType)\n  }\n\n  if (payload) {\n    res.setHeader('Content-Length', Buffer.byteLength(payload))\n  }\n\n  if (req.method === 'HEAD') {\n    res.end(null)\n    return\n  }\n\n  if (payload !== null) {\n    res.end(payload)\n    return\n  }\n\n  // Pipe the render result to the response after we get a writer for it.\n  await result.pipeToNodeResponse(res)\n}\n"],"names":["isResSent","generateETag","fresh","getCacheControlHeader","HTML_CONTENT_TYPE_HEADER","sendEtagResponse","req","res","etag","setHeader","headers","statusCode","end","sendRenderResult","result","generateEtags","poweredByHeader","cacheControl","contentType","getHeader","payload","isDynamic","toUnchunkedString","Buffer","byteLength","method","pipeToNodeResponse"],"mappings":";;;;;;AAIA,SAASA,SAAS,QAAQ,sBAAqB;AAC/C,SAASC,YAAY,QAAQ,aAAY;AACzC,OAAOC,WAAW,2BAA0B;AAC5C,SAASC,qBAAqB,QAAQ,sBAAqB;AAC3D,SAASC,wBAAwB,QAAQ,mBAAkB;;;;;;AAEpD,SAASC,iBACdC,GAAoB,EACpBC,GAAmB,EACnBC,IAAwB;IAExB,IAAIA,MAAM;QACR;;;;;KAKC,GACDD,IAAIE,SAAS,CAAC,QAAQD;IACxB;IAEA,QAAIN,qKAAAA,EAAMI,IAAII,OAAO,EAAE;QAAEF;IAAK,IAAI;QAChCD,IAAII,UAAU,GAAG;QACjBJ,IAAIK,GAAG;QACP,OAAO;IACT;IAEA,OAAO;AACT;AAEO,eAAeC,iBAAiB,EACrCP,GAAG,EACHC,GAAG,EACHO,MAAM,EACNC,aAAa,EACbC,eAAe,EACfC,YAAY,EAQb;IACC,QAAIjB,0KAAAA,EAAUO,MAAM;QAClB;IACF;IAEA,IAAIS,mBAAmBF,OAAOI,WAAW,KAAKd,mLAAAA,EAA0B;QACtEG,IAAIE,SAAS,CAAC,gBAAgB;IAChC;IAEA,2DAA2D;IAC3D,6DAA6D;IAC7D,IAAIQ,gBAAgB,CAACV,IAAIY,SAAS,CAAC,kBAAkB;QACnDZ,IAAIE,SAAS,CAAC,qBAAiBN,iMAAAA,EAAsBc;IACvD;IAEA,MAAMG,UAAUN,OAAOO,SAAS,GAAG,OAAOP,OAAOQ,iBAAiB;IAElE,IAAIP,iBAAiBK,YAAY,MAAM;QACrC,MAAMZ,WAAOP,4KAAAA,EAAamB;QAC1B,IAAIf,iBAAiBC,KAAKC,KAAKC,OAAO;YACpC;QACF;IACF;IAEA,IAAI,CAACD,IAAIY,SAAS,CAAC,mBAAmBL,OAAOI,WAAW,EAAE;QACxDX,IAAIE,SAAS,CAAC,gBAAgBK,OAAOI,WAAW;IAClD;IAEA,IAAIE,SAAS;QACXb,IAAIE,SAAS,CAAC,kBAAkBc,OAAOC,UAAU,CAACJ;IACpD;IAEA,IAAId,IAAImB,MAAM,KAAK,QAAQ;QACzBlB,IAAIK,GAAG,CAAC;QACR;IACF;IAEA,IAAIQ,YAAY,MAAM;QACpBb,IAAIK,GAAG,CAACQ;QACR;IACF;IAEA,uEAAuE;IACvE,MAAMN,OAAOY,kBAAkB,CAACnB;AAClC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 5026, "column": 0}, "map": {"version":3,"sources":["file:///home/joeagharib/My-Github/taskhive/client/node_modules/next/dist/src/build/templates/app-page.ts"],"sourcesContent":["import type { LoaderTree } from '../../server/lib/app-dir-module'\nimport type { IncomingMessage, ServerResponse } from 'node:http'\n\nimport {\n  AppPageRouteModule,\n  type AppPageRouteHandlerContext,\n} from '../../server/route-modules/app-page/module.compiled' with { 'turbopack-transition': 'next-ssr' }\n\nimport { RouteKind } from '../../server/route-kind' with { 'turbopack-transition': 'next-server-utility' }\n\nimport { getRevalidateReason } from '../../server/instrumentation/utils'\nimport { getTracer, SpanKind, type Span } from '../../server/lib/trace/tracer'\nimport { getRequestMeta } from '../../server/request-meta'\nimport { BaseServerSpan } from '../../server/lib/trace/constants'\nimport { interopDefault } from '../../server/app-render/interop-default'\nimport { stripFlightHeaders } from '../../server/app-render/strip-flight-headers'\nimport { NodeNextRequest, NodeNextResponse } from '../../server/base-http/node'\nimport { checkIsAppPPREnabled } from '../../server/lib/experimental/ppr'\nimport {\n  getFallbackRouteParams,\n  type FallbackRouteParams,\n} from '../../server/request/fallback-params'\nimport { setReferenceManifestsSingleton } from '../../server/app-render/encryption-utils'\nimport {\n  isHtmlBotRequest,\n  shouldServeStreamingMetadata,\n} from '../../server/lib/streaming-metadata'\nimport { createServerModuleMap } from '../../server/app-render/action-utils'\nimport { normalizeAppPath } from '../../shared/lib/router/utils/app-paths'\nimport { getIsPossibleServerAction } from '../../server/lib/server-action-request-meta'\nimport {\n  RSC_HEADER,\n  NEXT_ROUTER_PREFETCH_HEADER,\n  NEXT_IS_PRERENDER_HEADER,\n  NEXT_DID_POSTPONE_HEADER,\n  RSC_CONTENT_TYPE_HEADER,\n} from '../../client/components/app-router-headers'\nimport { getBotType, isBot } from '../../shared/lib/router/utils/is-bot'\nimport {\n  CachedRouteKind,\n  type CachedAppPageValue,\n  type CachedPageValue,\n  type ResponseCacheEntry,\n  type ResponseGenerator,\n} from '../../server/response-cache'\nimport { FallbackMode, parseFallbackField } from '../../lib/fallback'\nimport RenderResult from '../../server/render-result'\nimport {\n  CACHE_ONE_YEAR,\n  HTML_CONTENT_TYPE_HEADER,\n  NEXT_CACHE_TAGS_HEADER,\n} from '../../lib/constants'\nimport type { CacheControl } from '../../server/lib/cache-control'\nimport { ENCODED_TAGS } from '../../server/stream-utils/encoded-tags'\nimport { sendRenderResult } from '../../server/send-payload'\nimport { NoFallbackError } from '../../shared/lib/no-fallback-error.external'\n\n// These are injected by the loader afterwards.\n\n/**\n * The tree created in next-app-loader that holds component segments and modules\n * and I've updated it.\n */\ndeclare const tree: LoaderTree\ndeclare const pages: any\n\n// We inject the tree and pages here so that we can use them in the route\n// module.\n// INJECT:tree\n// INJECT:pages\n\nexport { tree, pages }\n\nimport GlobalError from 'VAR_MODULE_GLOBAL_ERROR' with { 'turbopack-transition': 'next-server-utility' }\n\nexport { GlobalError }\n\n// These are injected by the loader afterwards.\ndeclare const __next_app_require__: (id: string | number) => unknown\ndeclare const __next_app_load_chunk__: (id: string | number) => Promise<unknown>\n\n// INJECT:__next_app_require__\n// INJECT:__next_app_load_chunk__\n\nexport const __next_app__ = {\n  require: __next_app_require__,\n  loadChunk: __next_app_load_chunk__,\n}\n\nimport * as entryBase from '../../server/app-render/entry-base' with { 'turbopack-transition': 'next-server-utility' }\nimport { RedirectStatusCode } from '../../client/components/redirect-status-code'\n\nexport * from '../../server/app-render/entry-base' with { 'turbopack-transition': 'next-server-utility' }\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new AppPageRouteModule({\n  definition: {\n    kind: RouteKind.APP_PAGE,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n    appPaths: [],\n  },\n  userland: {\n    loaderTree: tree,\n  },\n  distDir: process.env.__NEXT_RELATIVE_DIST_DIR || '',\n  relativeProjectDir: process.env.__NEXT_RELATIVE_PROJECT_DIR || '',\n})\n\nexport async function handler(\n  req: IncomingMessage,\n  res: ServerResponse,\n  ctx: {\n    waitUntil: (prom: Promise<void>) => void\n  }\n) {\n  let srcPage = 'VAR_DEFINITION_PAGE'\n\n  // turbopack doesn't normalize `/index` in the page name\n  // so we need to to process dynamic routes properly\n  // TODO: fix turbopack providing differing value from webpack\n  if (process.env.TURBOPACK) {\n    srcPage = srcPage.replace(/\\/index$/, '') || '/'\n  } else if (srcPage === '/index') {\n    // we always normalize /index specifically\n    srcPage = '/'\n  }\n  const multiZoneDraftMode = process.env\n    .__NEXT_MULTI_ZONE_DRAFT_MODE as any as boolean\n\n  const initialPostponed = getRequestMeta(req, 'postponed')\n  // TODO: replace with more specific flags\n  const minimalMode = getRequestMeta(req, 'minimalMode')\n\n  const prepareResult = await routeModule.prepare(req, res, {\n    srcPage,\n    multiZoneDraftMode,\n  })\n\n  if (!prepareResult) {\n    res.statusCode = 400\n    res.end('Bad Request')\n    ctx.waitUntil?.(Promise.resolve())\n    return null\n  }\n\n  const {\n    buildId,\n    query,\n    params,\n    parsedUrl,\n    pageIsDynamic,\n    buildManifest,\n    nextFontManifest,\n    reactLoadableManifest,\n    serverActionsManifest,\n    clientReferenceManifest,\n    subresourceIntegrityManifest,\n    prerenderManifest,\n    isDraftMode,\n    resolvedPathname,\n    revalidateOnlyGenerated,\n    routerServerContext,\n    nextConfig,\n    interceptionRoutePatterns,\n  } = prepareResult\n\n  const pathname = parsedUrl.pathname || '/'\n  const normalizedSrcPage = normalizeAppPath(srcPage)\n\n  let { isOnDemandRevalidate } = prepareResult\n\n  const prerenderInfo = routeModule.match(pathname, prerenderManifest)\n  const isPrerendered = !!prerenderManifest.routes[resolvedPathname]\n\n  let isSSG = Boolean(\n    prerenderInfo ||\n      isPrerendered ||\n      prerenderManifest.routes[normalizedSrcPage]\n  )\n\n  const userAgent = req.headers['user-agent'] || ''\n  const botType = getBotType(userAgent)\n  const isHtmlBot = isHtmlBotRequest(req)\n\n  /**\n   * If true, this indicates that the request being made is for an app\n   * prefetch request.\n   */\n  const isPrefetchRSCRequest =\n    getRequestMeta(req, 'isPrefetchRSCRequest') ??\n    req.headers[NEXT_ROUTER_PREFETCH_HEADER] === '1' // exclude runtime prefetches, which use '2'\n\n  // NOTE: Don't delete headers[RSC] yet, it still needs to be used in renderToHTML later\n\n  const isRSCRequest =\n    getRequestMeta(req, 'isRSCRequest') ?? Boolean(req.headers[RSC_HEADER])\n\n  const isPossibleServerAction = getIsPossibleServerAction(req)\n\n  /**\n   * If the route being rendered is an app page, and the ppr feature has been\n   * enabled, then the given route _could_ support PPR.\n   */\n  const couldSupportPPR: boolean = checkIsAppPPREnabled(\n    nextConfig.experimental.ppr\n  )\n\n  // When enabled, this will allow the use of the `?__nextppronly` query to\n  // enable debugging of the static shell.\n  const hasDebugStaticShellQuery =\n    process.env.__NEXT_EXPERIMENTAL_STATIC_SHELL_DEBUGGING === '1' &&\n    typeof query.__nextppronly !== 'undefined' &&\n    couldSupportPPR\n\n  // When enabled, this will allow the use of the `?__nextppronly` query\n  // to enable debugging of the fallback shell.\n  const hasDebugFallbackShellQuery =\n    hasDebugStaticShellQuery && query.__nextppronly === 'fallback'\n\n  // This page supports PPR if it is marked as being `PARTIALLY_STATIC` in the\n  // prerender manifest and this is an app page.\n  const isRoutePPREnabled: boolean =\n    couldSupportPPR &&\n    ((\n      prerenderManifest.routes[normalizedSrcPage] ??\n      prerenderManifest.dynamicRoutes[normalizedSrcPage]\n    )?.renderingMode === 'PARTIALLY_STATIC' ||\n      // Ideally we'd want to check the appConfig to see if this page has PPR\n      // enabled or not, but that would require plumbing the appConfig through\n      // to the server during development. We assume that the page supports it\n      // but only during development.\n      (hasDebugStaticShellQuery &&\n        (routeModule.isDev === true ||\n          routerServerContext?.experimentalTestProxy === true)))\n\n  const isDebugStaticShell: boolean =\n    hasDebugStaticShellQuery && isRoutePPREnabled\n\n  // We should enable debugging dynamic accesses when the static shell\n  // debugging has been enabled and we're also in development mode.\n  const isDebugDynamicAccesses =\n    isDebugStaticShell && routeModule.isDev === true\n\n  const isDebugFallbackShell = hasDebugFallbackShellQuery && isRoutePPREnabled\n\n  // If we're in minimal mode, then try to get the postponed information from\n  // the request metadata. If available, use it for resuming the postponed\n  // render.\n  const minimalPostponed = isRoutePPREnabled ? initialPostponed : undefined\n\n  // If PPR is enabled, and this is a RSC request (but not a prefetch), then\n  // we can use this fact to only generate the flight data for the request\n  // because we can't cache the HTML (as it's also dynamic).\n  const isDynamicRSCRequest =\n    isRoutePPREnabled && isRSCRequest && !isPrefetchRSCRequest\n\n  // Need to read this before it's stripped by stripFlightHeaders. We don't\n  // need to transfer it to the request meta because it's only read\n  // within this function; the static segment data should have already been\n  // generated, so we will always either return a static response or a 404.\n  const segmentPrefetchHeader = getRequestMeta(req, 'segmentPrefetchRSCRequest')\n\n  // TODO: investigate existing bug with shouldServeStreamingMetadata always\n  // being true for a revalidate due to modifying the base-server this.renderOpts\n  // when fixing this to correct logic it causes hydration issue since we set\n  // serveStreamingMetadata to true during export\n  let serveStreamingMetadata = !userAgent\n    ? true\n    : shouldServeStreamingMetadata(userAgent, nextConfig.htmlLimitedBots)\n\n  if (isHtmlBot && isRoutePPREnabled) {\n    isSSG = false\n    serveStreamingMetadata = false\n  }\n\n  // In development, we always want to generate dynamic HTML.\n  let supportsDynamicResponse: boolean =\n    // If we're in development, we always support dynamic HTML, unless it's\n    // a data request, in which case we only produce static HTML.\n    routeModule.isDev === true ||\n    // If this is not SSG or does not have static paths, then it supports\n    // dynamic HTML.\n    !isSSG ||\n    // If this request has provided postponed data, it supports dynamic\n    // HTML.\n    typeof initialPostponed === 'string' ||\n    // If this is a dynamic RSC request, then this render supports dynamic\n    // HTML (it's dynamic).\n    isDynamicRSCRequest\n\n  // When html bots request PPR page, perform the full dynamic rendering.\n  const shouldWaitOnAllReady = isHtmlBot && isRoutePPREnabled\n\n  let ssgCacheKey: string | null = null\n  if (\n    !isDraftMode &&\n    isSSG &&\n    !supportsDynamicResponse &&\n    !isPossibleServerAction &&\n    !minimalPostponed &&\n    !isDynamicRSCRequest\n  ) {\n    ssgCacheKey = resolvedPathname\n  }\n\n  // the staticPathKey differs from ssgCacheKey since\n  // ssgCacheKey is null in dev since we're always in \"dynamic\"\n  // mode in dev to bypass the cache, but we still need to honor\n  // dynamicParams = false in dev mode\n  let staticPathKey = ssgCacheKey\n  if (!staticPathKey && routeModule.isDev) {\n    staticPathKey = resolvedPathname\n  }\n\n  // If this is a request for an app path that should be statically generated\n  // and we aren't in the edge runtime, strip the flight headers so it will\n  // generate the static response.\n  if (\n    !routeModule.isDev &&\n    !isDraftMode &&\n    isSSG &&\n    isRSCRequest &&\n    !isDynamicRSCRequest\n  ) {\n    stripFlightHeaders(req.headers)\n  }\n\n  const ComponentMod = {\n    ...entryBase,\n    tree,\n    pages,\n    GlobalError,\n    handler,\n    routeModule,\n    __next_app__,\n  }\n\n  // Before rendering (which initializes component tree modules), we have to\n  // set the reference manifests to our global store so Server Action's\n  // encryption util can access to them at the top level of the page module.\n  if (serverActionsManifest && clientReferenceManifest) {\n    setReferenceManifestsSingleton({\n      page: srcPage,\n      clientReferenceManifest,\n      serverActionsManifest,\n      serverModuleMap: createServerModuleMap({\n        serverActionsManifest,\n      }),\n    })\n  }\n\n  const method = req.method || 'GET'\n  const tracer = getTracer()\n  const activeSpan = tracer.getActiveScopeSpan()\n\n  try {\n    const varyHeader = routeModule.getVaryHeader(\n      resolvedPathname,\n      interceptionRoutePatterns\n    )\n    res.setHeader('Vary', varyHeader)\n    const invokeRouteModule = async (\n      span: Span | undefined,\n      context: AppPageRouteHandlerContext\n    ) => {\n      const nextReq = new NodeNextRequest(req)\n      const nextRes = new NodeNextResponse(res)\n\n      // TODO: adapt for putting the RDC inside the postponed data\n      // If we're in dev, and this isn't a prefetch or a server action,\n      // we should seed the resume data cache.\n      if (process.env.NODE_ENV === 'development') {\n        if (\n          nextConfig.experimental.cacheComponents &&\n          !isPrefetchRSCRequest &&\n          !context.renderOpts.isPossibleServerAction\n        ) {\n          const warmup = await routeModule.warmup(nextReq, nextRes, context)\n\n          // If the warmup is successful, we should use the resume data\n          // cache from the warmup.\n          if (warmup.metadata.renderResumeDataCache) {\n            context.renderOpts.renderResumeDataCache =\n              warmup.metadata.renderResumeDataCache\n          }\n        }\n      }\n\n      return routeModule.render(nextReq, nextRes, context).finally(() => {\n        if (!span) return\n\n        span.setAttributes({\n          'http.status_code': res.statusCode,\n          'next.rsc': false,\n        })\n\n        const rootSpanAttributes = tracer.getRootSpanAttributes()\n        // We were unable to get attributes, probably OTEL is not enabled\n        if (!rootSpanAttributes) {\n          return\n        }\n\n        if (\n          rootSpanAttributes.get('next.span_type') !==\n          BaseServerSpan.handleRequest\n        ) {\n          console.warn(\n            `Unexpected root span type '${rootSpanAttributes.get(\n              'next.span_type'\n            )}'. Please report this Next.js issue https://github.com/vercel/next.js`\n          )\n          return\n        }\n\n        const route = rootSpanAttributes.get('next.route')\n        if (route) {\n          const name = `${method} ${route}`\n\n          span.setAttributes({\n            'next.route': route,\n            'http.route': route,\n            'next.span_name': name,\n          })\n          span.updateName(name)\n        } else {\n          span.updateName(`${method} ${req.url}`)\n        }\n      })\n    }\n\n    const doRender = async ({\n      span,\n      postponed,\n      fallbackRouteParams,\n    }: {\n      span?: Span\n      /**\n       * The postponed data for this render. This is only provided when resuming\n       * a render that has been postponed.\n       */\n      postponed: string | undefined\n\n      /**\n       * The unknown route params for this render.\n       */\n      fallbackRouteParams: FallbackRouteParams | null\n    }): Promise<ResponseCacheEntry> => {\n      const context: AppPageRouteHandlerContext = {\n        query,\n        params,\n        page: normalizedSrcPage,\n        sharedContext: {\n          buildId,\n        },\n        serverComponentsHmrCache: getRequestMeta(\n          req,\n          'serverComponentsHmrCache'\n        ),\n        fallbackRouteParams,\n        renderOpts: {\n          App: () => null,\n          Document: () => null,\n          pageConfig: {},\n          ComponentMod,\n          Component: interopDefault(ComponentMod),\n\n          params,\n          routeModule,\n          page: srcPage,\n          postponed,\n          shouldWaitOnAllReady,\n          serveStreamingMetadata,\n          supportsDynamicResponse:\n            typeof postponed === 'string' || supportsDynamicResponse,\n          buildManifest,\n          nextFontManifest,\n          reactLoadableManifest,\n          subresourceIntegrityManifest,\n          serverActionsManifest,\n          clientReferenceManifest,\n          setIsrStatus: routerServerContext?.setIsrStatus,\n\n          dir:\n            process.env.NEXT_RUNTIME === 'nodejs'\n              ? (require('path') as typeof import('path')).join(\n                  /* turbopackIgnore: true */\n                  process.cwd(),\n                  routeModule.relativeProjectDir\n                )\n              : `${process.cwd()}/${routeModule.relativeProjectDir}`,\n          isDraftMode,\n          isRevalidate: isSSG && !postponed && !isDynamicRSCRequest,\n          botType,\n          isOnDemandRevalidate,\n          isPossibleServerAction,\n          assetPrefix: nextConfig.assetPrefix,\n          nextConfigOutput: nextConfig.output,\n          crossOrigin: nextConfig.crossOrigin,\n          trailingSlash: nextConfig.trailingSlash,\n          previewProps: prerenderManifest.preview,\n          deploymentId: nextConfig.deploymentId,\n          enableTainting: nextConfig.experimental.taint,\n          htmlLimitedBots: nextConfig.htmlLimitedBots,\n          devtoolSegmentExplorer:\n            nextConfig.experimental.devtoolSegmentExplorer,\n          reactMaxHeadersLength: nextConfig.reactMaxHeadersLength,\n\n          multiZoneDraftMode,\n          incrementalCache: getRequestMeta(req, 'incrementalCache'),\n          cacheLifeProfiles: nextConfig.experimental.cacheLife,\n          basePath: nextConfig.basePath,\n          serverActions: nextConfig.experimental.serverActions,\n\n          ...(isDebugStaticShell || isDebugDynamicAccesses\n            ? {\n                nextExport: true,\n                supportsDynamicResponse: false,\n                isStaticGeneration: true,\n                isRevalidate: true,\n                isDebugDynamicAccesses: isDebugDynamicAccesses,\n              }\n            : {}),\n\n          experimental: {\n            isRoutePPREnabled,\n            expireTime: nextConfig.expireTime,\n            staleTimes: nextConfig.experimental.staleTimes,\n            cacheComponents: Boolean(nextConfig.experimental.cacheComponents),\n            clientSegmentCache: Boolean(\n              nextConfig.experimental.clientSegmentCache\n            ),\n            clientParamParsing: Boolean(\n              nextConfig.experimental.clientParamParsing\n            ),\n            dynamicOnHover: Boolean(nextConfig.experimental.dynamicOnHover),\n            inlineCss: Boolean(nextConfig.experimental.inlineCss),\n            authInterrupts: Boolean(nextConfig.experimental.authInterrupts),\n            clientTraceMetadata:\n              nextConfig.experimental.clientTraceMetadata || ([] as any),\n          },\n\n          waitUntil: ctx.waitUntil,\n          onClose: (cb) => {\n            res.on('close', cb)\n          },\n          onAfterTaskError: () => {},\n\n          onInstrumentationRequestError: (error, _request, errorContext) =>\n            routeModule.onRequestError(\n              req,\n              error,\n              errorContext,\n              routerServerContext\n            ),\n          err: getRequestMeta(req, 'invokeError'),\n          dev: routeModule.isDev,\n        },\n      }\n\n      const result = await invokeRouteModule(span, context)\n\n      const { metadata } = result\n\n      const {\n        cacheControl,\n        headers = {},\n        // Add any fetch tags that were on the page to the response headers.\n        fetchTags: cacheTags,\n      } = metadata\n\n      if (cacheTags) {\n        headers[NEXT_CACHE_TAGS_HEADER] = cacheTags\n      }\n\n      // Pull any fetch metrics from the render onto the request.\n      ;(req as any).fetchMetrics = metadata.fetchMetrics\n\n      // we don't throw static to dynamic errors in dev as isSSG\n      // is a best guess in dev since we don't have the prerender pass\n      // to know whether the path is actually static or not\n      if (\n        isSSG &&\n        cacheControl?.revalidate === 0 &&\n        !routeModule.isDev &&\n        !isRoutePPREnabled\n      ) {\n        const staticBailoutInfo = metadata.staticBailoutInfo\n\n        const err = new Error(\n          `Page changed from static to dynamic at runtime ${resolvedPathname}${\n            staticBailoutInfo?.description\n              ? `, reason: ${staticBailoutInfo.description}`\n              : ``\n          }` +\n            `\\nsee more here https://nextjs.org/docs/messages/app-static-to-dynamic-error`\n        )\n\n        if (staticBailoutInfo?.stack) {\n          const stack = staticBailoutInfo.stack\n          err.stack = err.message + stack.substring(stack.indexOf('\\n'))\n        }\n\n        throw err\n      }\n\n      return {\n        value: {\n          kind: CachedRouteKind.APP_PAGE,\n          html: result,\n          headers,\n          rscData: metadata.flightData,\n          postponed: metadata.postponed,\n          status: metadata.statusCode,\n          segmentData: metadata.segmentData,\n        } satisfies CachedAppPageValue,\n        cacheControl,\n      } satisfies ResponseCacheEntry\n    }\n\n    const responseGenerator: ResponseGenerator = async ({\n      hasResolved,\n      previousCacheEntry,\n      isRevalidating,\n      span,\n    }) => {\n      const isProduction = routeModule.isDev === false\n      const didRespond = hasResolved || res.writableEnded\n\n      // skip on-demand revalidate if cache is not present and\n      // revalidate-if-generated is set\n      if (\n        isOnDemandRevalidate &&\n        revalidateOnlyGenerated &&\n        !previousCacheEntry &&\n        !minimalMode\n      ) {\n        if (routerServerContext?.render404) {\n          await routerServerContext.render404(req, res)\n        } else {\n          res.statusCode = 404\n          res.end('This page could not be found')\n        }\n        return null\n      }\n\n      let fallbackMode: FallbackMode | undefined\n\n      if (prerenderInfo) {\n        fallbackMode = parseFallbackField(prerenderInfo.fallback)\n      }\n\n      // When serving a HTML bot request, we want to serve a blocking render and\n      // not the prerendered page. This ensures that the correct content is served\n      // to the bot in the head.\n      if (fallbackMode === FallbackMode.PRERENDER && isBot(userAgent)) {\n        if (!isRoutePPREnabled || isHtmlBot) {\n          fallbackMode = FallbackMode.BLOCKING_STATIC_RENDER\n        }\n      }\n\n      if (previousCacheEntry?.isStale === -1) {\n        isOnDemandRevalidate = true\n      }\n\n      // TODO: adapt for PPR\n      // only allow on-demand revalidate for fallback: true/blocking\n      // or for prerendered fallback: false paths\n      if (\n        isOnDemandRevalidate &&\n        (fallbackMode !== FallbackMode.NOT_FOUND || previousCacheEntry)\n      ) {\n        fallbackMode = FallbackMode.BLOCKING_STATIC_RENDER\n      }\n\n      if (\n        !minimalMode &&\n        fallbackMode !== FallbackMode.BLOCKING_STATIC_RENDER &&\n        staticPathKey &&\n        !didRespond &&\n        !isDraftMode &&\n        pageIsDynamic &&\n        (isProduction || !isPrerendered)\n      ) {\n        // if the page has dynamicParams: false and this pathname wasn't\n        // prerendered trigger the no fallback handling\n        if (\n          // In development, fall through to render to handle missing\n          // getStaticPaths.\n          (isProduction || prerenderInfo) &&\n          // When fallback isn't present, abort this render so we 404\n          fallbackMode === FallbackMode.NOT_FOUND\n        ) {\n          throw new NoFallbackError()\n        }\n\n        let fallbackResponse: ResponseCacheEntry | null | undefined\n\n        if (isRoutePPREnabled && !isRSCRequest) {\n          const cacheKey =\n            typeof prerenderInfo?.fallback === 'string'\n              ? prerenderInfo.fallback\n              : isProduction\n                ? normalizedSrcPage\n                : null\n\n          // We use the response cache here to handle the revalidation and\n          // management of the fallback shell.\n          fallbackResponse = await routeModule.handleResponse({\n            cacheKey,\n            req,\n            nextConfig,\n            routeKind: RouteKind.APP_PAGE,\n            isFallback: true,\n            prerenderManifest,\n            isRoutePPREnabled,\n            responseGenerator: async () =>\n              doRender({\n                span,\n                // We pass `undefined` as rendering a fallback isn't resumed\n                // here.\n                postponed: undefined,\n                fallbackRouteParams:\n                  // If we're in production or we're debugging the fallback\n                  // shell then we should postpone when dynamic params are\n                  // accessed.\n                  isProduction || isDebugFallbackShell\n                    ? getFallbackRouteParams(normalizedSrcPage)\n                    : null,\n              }),\n            waitUntil: ctx.waitUntil,\n          })\n\n          // If the fallback response was set to null, then we should return null.\n          if (fallbackResponse === null) return null\n\n          // Otherwise, if we did get a fallback response, we should return it.\n          if (fallbackResponse) {\n            // Remove the cache control from the response to prevent it from being\n            // used in the surrounding cache.\n            delete fallbackResponse.cacheControl\n\n            return fallbackResponse\n          }\n        }\n      }\n      // Only requests that aren't revalidating can be resumed. If we have the\n      // minimal postponed data, then we should resume the render with it.\n      const postponed =\n        !isOnDemandRevalidate && !isRevalidating && minimalPostponed\n          ? minimalPostponed\n          : undefined\n\n      // When we're in minimal mode, if we're trying to debug the static shell,\n      // we should just return nothing instead of resuming the dynamic render.\n      if (\n        (isDebugStaticShell || isDebugDynamicAccesses) &&\n        typeof postponed !== 'undefined'\n      ) {\n        return {\n          cacheControl: { revalidate: 1, expire: undefined },\n          value: {\n            kind: CachedRouteKind.PAGES,\n            html: RenderResult.EMPTY,\n            pageData: {},\n            headers: undefined,\n            status: undefined,\n          } satisfies CachedPageValue,\n        }\n      }\n\n      // If this is a dynamic route with PPR enabled and the default route\n      // matches were set, then we should pass the fallback route params to\n      // the renderer as this is a fallback revalidation request.\n      const fallbackRouteParams =\n        pageIsDynamic &&\n        isRoutePPREnabled &&\n        (getRequestMeta(req, 'renderFallbackShell') || isDebugFallbackShell)\n          ? getFallbackRouteParams(pathname)\n          : null\n\n      // Perform the render.\n      return doRender({\n        span,\n        postponed,\n        fallbackRouteParams,\n      })\n    }\n\n    const handleResponse = async (span?: Span): Promise<null | void> => {\n      const cacheEntry = await routeModule.handleResponse({\n        cacheKey: ssgCacheKey,\n        responseGenerator: (c) =>\n          responseGenerator({\n            span,\n            ...c,\n          }),\n        routeKind: RouteKind.APP_PAGE,\n        isOnDemandRevalidate,\n        isRoutePPREnabled,\n        req,\n        nextConfig,\n        prerenderManifest,\n        waitUntil: ctx.waitUntil,\n      })\n\n      if (isDraftMode) {\n        res.setHeader(\n          'Cache-Control',\n          'private, no-cache, no-store, max-age=0, must-revalidate'\n        )\n      }\n\n      // In dev, we should not cache pages for any reason.\n      if (routeModule.isDev) {\n        res.setHeader('Cache-Control', 'no-store, must-revalidate')\n      }\n\n      if (!cacheEntry) {\n        if (ssgCacheKey) {\n          // A cache entry might not be generated if a response is written\n          // in `getInitialProps` or `getServerSideProps`, but those shouldn't\n          // have a cache key. If we do have a cache key but we don't end up\n          // with a cache entry, then either Next.js or the application has a\n          // bug that needs fixing.\n          throw new Error('invariant: cache entry required but not generated')\n        }\n        return null\n      }\n\n      if (cacheEntry.value?.kind !== CachedRouteKind.APP_PAGE) {\n        throw new Error(\n          `Invariant app-page handler received invalid cache entry ${cacheEntry.value?.kind}`\n        )\n      }\n\n      const didPostpone = typeof cacheEntry.value.postponed === 'string'\n\n      if (\n        isSSG &&\n        // We don't want to send a cache header for requests that contain dynamic\n        // data. If this is a Dynamic RSC request or wasn't a Prefetch RSC\n        // request, then we should set the cache header.\n        !isDynamicRSCRequest &&\n        (!didPostpone || isPrefetchRSCRequest)\n      ) {\n        if (!minimalMode) {\n          // set x-nextjs-cache header to match the header\n          // we set for the image-optimizer\n          res.setHeader(\n            'x-nextjs-cache',\n            isOnDemandRevalidate\n              ? 'REVALIDATED'\n              : cacheEntry.isMiss\n                ? 'MISS'\n                : cacheEntry.isStale\n                  ? 'STALE'\n                  : 'HIT'\n          )\n        }\n        // Set a header used by the client router to signal the response is static\n        // and should respect the `static` cache staleTime value.\n        res.setHeader(NEXT_IS_PRERENDER_HEADER, '1')\n      }\n      const { value: cachedData } = cacheEntry\n\n      // Coerce the cache control parameter from the render.\n      let cacheControl: CacheControl | undefined\n\n      // If this is a resume request in minimal mode it is streamed with dynamic\n      // content and should not be cached.\n      if (minimalPostponed) {\n        cacheControl = { revalidate: 0, expire: undefined }\n      }\n\n      // If this is in minimal mode and this is a flight request that isn't a\n      // prefetch request while PPR is enabled, it cannot be cached as it contains\n      // dynamic content.\n      else if (\n        minimalMode &&\n        isRSCRequest &&\n        !isPrefetchRSCRequest &&\n        isRoutePPREnabled\n      ) {\n        cacheControl = { revalidate: 0, expire: undefined }\n      } else if (!routeModule.isDev) {\n        // If this is a preview mode request, we shouldn't cache it\n        if (isDraftMode) {\n          cacheControl = { revalidate: 0, expire: undefined }\n        }\n\n        // If this isn't SSG, then we should set change the header only if it is\n        // not set already.\n        else if (!isSSG) {\n          if (!res.getHeader('Cache-Control')) {\n            cacheControl = { revalidate: 0, expire: undefined }\n          }\n        } else if (cacheEntry.cacheControl) {\n          // If the cache entry has a cache control with a revalidate value that's\n          // a number, use it.\n          if (typeof cacheEntry.cacheControl.revalidate === 'number') {\n            if (cacheEntry.cacheControl.revalidate < 1) {\n              throw new Error(\n                `Invalid revalidate configuration provided: ${cacheEntry.cacheControl.revalidate} < 1`\n              )\n            }\n\n            cacheControl = {\n              revalidate: cacheEntry.cacheControl.revalidate,\n              expire: cacheEntry.cacheControl?.expire ?? nextConfig.expireTime,\n            }\n          }\n          // Otherwise if the revalidate value is false, then we should use the\n          // cache time of one year.\n          else {\n            cacheControl = { revalidate: CACHE_ONE_YEAR, expire: undefined }\n          }\n        }\n      }\n\n      cacheEntry.cacheControl = cacheControl\n\n      if (\n        typeof segmentPrefetchHeader === 'string' &&\n        cachedData?.kind === CachedRouteKind.APP_PAGE &&\n        cachedData.segmentData\n      ) {\n        // This is a prefetch request issued by the client Segment Cache. These\n        // should never reach the application layer (lambda). We should either\n        // respond from the cache (HIT) or respond with 204 No Content (MISS).\n\n        // Set a header to indicate that PPR is enabled for this route. This\n        // lets the client distinguish between a regular cache miss and a cache\n        // miss due to PPR being disabled. In other contexts this header is used\n        // to indicate that the response contains dynamic data, but here we're\n        // only using it to indicate that the feature is enabled — the segment\n        // response itself contains whether the data is dynamic.\n        res.setHeader(NEXT_DID_POSTPONE_HEADER, '2')\n\n        // Add the cache tags header to the response if it exists and we're in\n        // minimal mode while rendering a static page.\n        const tags = cachedData.headers?.[NEXT_CACHE_TAGS_HEADER]\n        if (minimalMode && isSSG && tags && typeof tags === 'string') {\n          res.setHeader(NEXT_CACHE_TAGS_HEADER, tags)\n        }\n\n        const matchedSegment = cachedData.segmentData.get(segmentPrefetchHeader)\n        if (matchedSegment !== undefined) {\n          // Cache hit\n          return sendRenderResult({\n            req,\n            res,\n            generateEtags: nextConfig.generateEtags,\n            poweredByHeader: nextConfig.poweredByHeader,\n            result: RenderResult.fromStatic(\n              matchedSegment,\n              RSC_CONTENT_TYPE_HEADER\n            ),\n            cacheControl: cacheEntry.cacheControl,\n          })\n        }\n\n        // Cache miss. Either a cache entry for this route has not been generated\n        // (which technically should not be possible when PPR is enabled, because\n        // at a minimum there should always be a fallback entry) or there's no\n        // match for the requested segment. Respond with a 204 No Content. We\n        // don't bother to respond with 404, because these requests are only\n        // issued as part of a prefetch.\n        res.statusCode = 204\n        return sendRenderResult({\n          req,\n          res,\n          generateEtags: nextConfig.generateEtags,\n          poweredByHeader: nextConfig.poweredByHeader,\n          result: RenderResult.EMPTY,\n          cacheControl: cacheEntry.cacheControl,\n        })\n      }\n\n      // If there's a callback for `onCacheEntry`, call it with the cache entry\n      // and the revalidate options.\n      const onCacheEntry = getRequestMeta(req, 'onCacheEntry')\n      if (onCacheEntry) {\n        const finished = await onCacheEntry(\n          {\n            ...cacheEntry,\n            // TODO: remove this when upstream doesn't\n            // always expect this value to be \"PAGE\"\n            value: {\n              ...cacheEntry.value,\n              kind: 'PAGE',\n            },\n          },\n          {\n            url: getRequestMeta(req, 'initURL'),\n          }\n        )\n        if (finished) {\n          // TODO: maybe we have to end the request?\n          return null\n        }\n      }\n\n      // If the request has a postponed state and it's a resume request we\n      // should error.\n      if (didPostpone && minimalPostponed) {\n        throw new Error(\n          'Invariant: postponed state should not be present on a resume request'\n        )\n      }\n\n      if (cachedData.headers) {\n        const headers = { ...cachedData.headers }\n\n        if (!minimalMode || !isSSG) {\n          delete headers[NEXT_CACHE_TAGS_HEADER]\n        }\n\n        for (let [key, value] of Object.entries(headers)) {\n          if (typeof value === 'undefined') continue\n\n          if (Array.isArray(value)) {\n            for (const v of value) {\n              res.appendHeader(key, v)\n            }\n          } else if (typeof value === 'number') {\n            value = value.toString()\n            res.appendHeader(key, value)\n          } else {\n            res.appendHeader(key, value)\n          }\n        }\n      }\n\n      // Add the cache tags header to the response if it exists and we're in\n      // minimal mode while rendering a static page.\n      const tags = cachedData.headers?.[NEXT_CACHE_TAGS_HEADER]\n      if (minimalMode && isSSG && tags && typeof tags === 'string') {\n        res.setHeader(NEXT_CACHE_TAGS_HEADER, tags)\n      }\n\n      // If the request is a data request, then we shouldn't set the status code\n      // from the response because it should always be 200. This should be gated\n      // behind the experimental PPR flag.\n      if (cachedData.status && (!isRSCRequest || !isRoutePPREnabled)) {\n        res.statusCode = cachedData.status\n      }\n\n      // Redirect information is encoded in RSC payload, so we don't need to use redirect status codes\n      if (\n        !minimalMode &&\n        cachedData.status &&\n        RedirectStatusCode[cachedData.status] &&\n        isRSCRequest\n      ) {\n        res.statusCode = 200\n      }\n\n      // Mark that the request did postpone.\n      if (didPostpone) {\n        res.setHeader(NEXT_DID_POSTPONE_HEADER, '1')\n      }\n\n      // we don't go through this block when preview mode is true\n      // as preview mode is a dynamic request (bypasses cache) and doesn't\n      // generate both HTML and payloads in the same request so continue to just\n      // return the generated payload\n      if (isRSCRequest && !isDraftMode) {\n        // If this is a dynamic RSC request, then stream the response.\n        if (typeof cachedData.rscData === 'undefined') {\n          if (cachedData.postponed) {\n            throw new Error('Invariant: Expected postponed to be undefined')\n          }\n\n          return sendRenderResult({\n            req,\n            res,\n            generateEtags: nextConfig.generateEtags,\n            poweredByHeader: nextConfig.poweredByHeader,\n            result: cachedData.html,\n            // Dynamic RSC responses cannot be cached, even if they're\n            // configured with `force-static` because we have no way of\n            // distinguishing between `force-static` and pages that have no\n            // postponed state.\n            // TODO: distinguish `force-static` from pages with no postponed state (static)\n            cacheControl: isDynamicRSCRequest\n              ? { revalidate: 0, expire: undefined }\n              : cacheEntry.cacheControl,\n          })\n        }\n\n        // As this isn't a prefetch request, we should serve the static flight\n        // data.\n        return sendRenderResult({\n          req,\n          res,\n          generateEtags: nextConfig.generateEtags,\n          poweredByHeader: nextConfig.poweredByHeader,\n          result: RenderResult.fromStatic(\n            cachedData.rscData,\n            RSC_CONTENT_TYPE_HEADER\n          ),\n          cacheControl: cacheEntry.cacheControl,\n        })\n      }\n\n      // This is a request for HTML data.\n      let body = cachedData.html\n\n      // If there's no postponed state, we should just serve the HTML. This\n      // should also be the case for a resume request because it's completed\n      // as a server render (rather than a static render).\n      if (!didPostpone || minimalMode || isRSCRequest) {\n        // If we're in test mode, we should add a sentinel chunk to the response\n        // that's between the static and dynamic parts so we can compare the\n        // chunks and add assertions.\n        if (\n          process.env.__NEXT_TEST_MODE &&\n          minimalMode &&\n          isRoutePPREnabled &&\n          body.contentType === HTML_CONTENT_TYPE_HEADER\n        ) {\n          // As we're in minimal mode, the static part would have already been\n          // streamed first. The only part that this streams is the dynamic part\n          // so we should FIRST stream the sentinel and THEN the dynamic part.\n          body.unshift(createPPRBoundarySentinel())\n        }\n\n        return sendRenderResult({\n          req,\n          res,\n          generateEtags: nextConfig.generateEtags,\n          poweredByHeader: nextConfig.poweredByHeader,\n          result: body,\n          cacheControl: cacheEntry.cacheControl,\n        })\n      }\n\n      // If we're debugging the static shell or the dynamic API accesses, we\n      // should just serve the HTML without resuming the render. The returned\n      // HTML will be the static shell so all the Dynamic API's will be used\n      // during static generation.\n      if (isDebugStaticShell || isDebugDynamicAccesses) {\n        // Since we're not resuming the render, we need to at least add the\n        // closing body and html tags to create valid HTML.\n        body.push(\n          new ReadableStream({\n            start(controller) {\n              controller.enqueue(ENCODED_TAGS.CLOSED.BODY_AND_HTML)\n              controller.close()\n            },\n          })\n        )\n\n        return sendRenderResult({\n          req,\n          res,\n          generateEtags: nextConfig.generateEtags,\n          poweredByHeader: nextConfig.poweredByHeader,\n          result: body,\n          cacheControl: { revalidate: 0, expire: undefined },\n        })\n      }\n\n      // If we're in test mode, we should add a sentinel chunk to the response\n      // that's between the static and dynamic parts so we can compare the\n      // chunks and add assertions.\n      if (process.env.__NEXT_TEST_MODE) {\n        body.push(createPPRBoundarySentinel())\n      }\n\n      // This request has postponed, so let's create a new transformer that the\n      // dynamic data can pipe to that will attach the dynamic data to the end\n      // of the response.\n      const transformer = new TransformStream<Uint8Array, Uint8Array>()\n      body.push(transformer.readable)\n\n      // Perform the render again, but this time, provide the postponed state.\n      // We don't await because we want the result to start streaming now, and\n      // we've already chained the transformer's readable to the render result.\n      doRender({\n        span,\n        postponed: cachedData.postponed,\n        // This is a resume render, not a fallback render, so we don't need to\n        // set this.\n        fallbackRouteParams: null,\n      })\n        .then(async (result) => {\n          if (!result) {\n            throw new Error('Invariant: expected a result to be returned')\n          }\n\n          if (result.value?.kind !== CachedRouteKind.APP_PAGE) {\n            throw new Error(\n              `Invariant: expected a page response, got ${result.value?.kind}`\n            )\n          }\n\n          // Pipe the resume result to the transformer.\n          await result.value.html.pipeTo(transformer.writable)\n        })\n        .catch((err) => {\n          // An error occurred during piping or preparing the render, abort\n          // the transformers writer so we can terminate the stream.\n          transformer.writable.abort(err).catch((e) => {\n            console.error(\"couldn't abort transformer\", e)\n          })\n        })\n\n      return sendRenderResult({\n        req,\n        res,\n        generateEtags: nextConfig.generateEtags,\n        poweredByHeader: nextConfig.poweredByHeader,\n        result: body,\n        // We don't want to cache the response if it has postponed data because\n        // the response being sent to the client it's dynamic parts are streamed\n        // to the client on the same request.\n        cacheControl: { revalidate: 0, expire: undefined },\n      })\n    }\n\n    // TODO: activeSpan code path is for when wrapped by\n    // next-server can be removed when this is no longer used\n    if (activeSpan) {\n      await handleResponse(activeSpan)\n    } else {\n      return await tracer.withPropagatedContext(req.headers, () =>\n        tracer.trace(\n          BaseServerSpan.handleRequest,\n          {\n            spanName: `${method} ${req.url}`,\n            kind: SpanKind.SERVER,\n            attributes: {\n              'http.method': method,\n              'http.target': req.url,\n            },\n          },\n          handleResponse\n        )\n      )\n    }\n  } catch (err) {\n    // if we aren't wrapped by base-server handle here\n    if (!activeSpan && !(err instanceof NoFallbackError)) {\n      await routeModule.onRequestError(\n        req,\n        err,\n        {\n          routerKind: 'App Router',\n          routePath: srcPage,\n          routeType: 'render',\n          revalidateReason: getRevalidateReason({\n            isRevalidate: isSSG,\n            isOnDemandRevalidate,\n          }),\n        },\n        routerServerContext\n      )\n    }\n\n    // rethrow so that we can handle serving error page\n    throw err\n  }\n}\n\n// TODO: omit this from production builds, only test builds should include it\n/**\n * Creates a readable stream that emits a PPR boundary sentinel.\n *\n * @returns A readable stream that emits a PPR boundary sentinel.\n */\nfunction createPPRBoundarySentinel() {\n  return new ReadableStream({\n    start(controller) {\n      controller.enqueue(\n        new TextEncoder().encode('<!-- PPR_BOUNDARY_SENTINEL -->')\n      )\n      controller.close()\n    },\n  })\n}\n"],"names":["AppPageRouteModule","RouteKind","getRevalidateReason","getTracer","SpanKind","getRequestMeta","BaseServerSpan","interopDefault","stripFlightHeaders","NodeNextRequest","NodeNextResponse","checkIsAppPPREnabled","getFallbackRouteParams","setReferenceManifestsSingleton","isHtmlBotRequest","shouldServeStreamingMetadata","createServerModuleMap","normalizeAppPath","getIsPossibleServerAction","RSC_HEADER","NEXT_ROUTER_PREFETCH_HEADER","NEXT_IS_PRERENDER_HEADER","NEXT_DID_POSTPONE_HEADER","RSC_CONTENT_TYPE_HEADER","getBotType","isBot","CachedRouteKind","FallbackMode","parseFallbackField","RenderResult","CACHE_ONE_YEAR","HTML_CONTENT_TYPE_HEADER","NEXT_CACHE_TAGS_HEADER","ENCODED_TAGS","sendRenderResult","NoFallbackError","tree","pages","GlobalError","__next_app__","require","__next_app_require__","loadChunk","__next_app_load_chunk__","entryBase","RedirectStatusCode","routeModule","definition","kind","APP_PAGE","page","pathname","bundlePath","filename","appPaths","userland","loaderTree","distDir","process","env","__NEXT_RELATIVE_DIST_DIR","relativeProjectDir","__NEXT_RELATIVE_PROJECT_DIR","handler","req","res","ctx","prerenderManifest","srcPage","TURBOPACK","replace","multiZoneDraftMode","__NEXT_MULTI_ZONE_DRAFT_MODE","initialPostponed","minimalMode","prepareResult","prepare","statusCode","end","waitUntil","Promise","resolve","buildId","query","params","parsedUrl","pageIsDynamic","buildManifest","nextFontManifest","reactLoadableManifest","serverActionsManifest","clientReferenceManifest","subresourceIntegrityManifest","isDraftMode","resolvedPathname","revalidateOnlyGenerated","routerServerContext","nextConfig","interceptionRoutePatterns","normalizedSrcPage","isOnDemandRevalidate","prerenderInfo","match","isPrerendered","routes","isSSG","Boolean","userAgent","headers","botType","isHtmlBot","isPrefetchRSCRequest","isRSCRequest","isPossibleServerAction","couldSupportPPR","experimental","ppr","hasDebugStaticShellQuery","__NEXT_EXPERIMENTAL_STATIC_SHELL_DEBUGGING","__nextppronly","hasDebugFallbackShellQuery","isRoutePPREnabled","dynamicRoutes","renderingMode","isDev","experimentalTestProxy","isDebugStaticShell","isDebugDynamicAccesses","isDebugFallbackShell","minimalPostponed","undefined","isDynamicRSCRequest","segmentPrefetchHeader","serveStreamingMetadata","htmlLimitedBots","supportsDynamicResponse","shouldWaitOnAllReady","ssgCacheKey","staticPathKey","ComponentMod","serverModuleMap","method","tracer","activeSpan","getActiveScopeSpan","varyHeader","getVaryHeader","setHeader","invokeRouteModule","span","context","nextReq","nextRes","NODE_ENV","cacheComponents","renderOpts","warmup","metadata","renderResumeDataCache","render","finally","setAttributes","rootSpanAttributes","getRootSpanAttributes","get","handleRequest","console","warn","route","name","updateName","url","doRender","postponed","fallbackRouteParams","sharedContext","serverComponentsHmrCache","App","Document","pageConfig","Component","setIsrStatus","dir","NEXT_RUNTIME","join","cwd","isRevalidate","assetPrefix","nextConfigOutput","output","crossOrigin","trailingSlash","previewProps","preview","deploymentId","enableTainting","taint","devtoolSegmentExplorer","reactMaxHeadersLength","incrementalCache","cacheLifeProfiles","cacheLife","basePath","serverActions","nextExport","isStaticGeneration","expireTime","staleTimes","clientSegmentCache","clientParamParsing","dynamicOnHover","inlineCss","authInterrupts","clientTraceMetadata","onClose","cb","on","onAfterTaskError","onInstrumentationRequestError","error","_request","errorContext","onRequestError","err","dev","result","cacheControl","fetchTags","cacheTags","fetchMetrics","revalidate","staticBailoutInfo","Error","description","stack","message","substring","indexOf","value","html","rscData","flightData","status","segmentData","responseGenerator","hasResolved","previousCacheEntry","isRevalidating","isProduction","didRespond","writableEnded","render404","fallbackMode","fallback","PRERENDER","BLOCKING_STATIC_RENDER","isStale","NOT_FOUND","fallbackResponse","cacheKey","handleResponse","routeKind","isFallback","expire","PAGES","EMPTY","pageData","cacheEntry","cachedData","c","didPostpone","isMiss","getHeader","tags","matchedSegment","generateEtags","poweredByHeader","fromStatic","onCacheEntry","finished","key","Object","entries","Array","isArray","v","appendHeader","toString","body","__NEXT_TEST_MODE","contentType","unshift","createPPRBoundarySentinel","push","ReadableStream","start","controller","enqueue","CLOSED","BODY_AND_HTML","close","transformer","TransformStream","readable","then","pipeTo","writable","catch","abort","e","withPropagatedContext","trace","spanName","SERVER","attributes","routerKind","routePath","routeType","revalidateReason","TextEncoder","encode"],"mappings":";;;;;;;;;;;;AAGA,SACEA,kBAAkB,QAEb,2DAA2D;IAAE,wBAAwB;AAAW,EAAC;IAE7C,wBAAwB;AAEnF,SAASE,mBAAmB,QAAQ,qCAAoC;AAExE,SAASG,cAAc,QAAQ,4BAA2B;AAE1D,SAASE,cAAc,QAAQ,0CAAyC;AAExE,SAASE,eAAe,EAAEC,gBAAgB,QAAQ,8BAA6B;AAE/E,SACEE,sBAAsB,QAEjB,uCAAsC;AAM7C,SAASI,qBAAqB,QAAQ,uCAAsC;AAG5E,SACEG,UAAU,EACVC,2BAA2B,EAC3BC,wBAAwB,EACxBC,wBAAwB,EACxBC,uBAAuB,QAClB,6CAA4C;AACnD,SAASC,UAAU,EAAEC,KAAK,QAAQ,uCAAsC;AACxE,SACEC,eAAe,QAKV,8BAA6B;AACpC,SAASC,YAAY,EAAEC,kBAAkB,QAAQ,qBAAoB;AACrE,OAAOC,kBAAkB,6BAA4B;AACrD,SACEC,cAAc,EACdC,wBAAwB,EACxBC,sBAAsB,QACjB,sBAAqB;AAE5B,SAASC,YAAY,QAAQ,yCAAwC;AACrE,SAASC,gBAAgB,QAAQ,4BAA2B;AAC5D,SAASC,eAAe,QAAQ,8CAA6C;AAW7E,yEAAyE;AACzE,UAAU;AACV,cAAc;AACd,eAAe;AAEf,SAASC,IAAI,EAAEC,KAAK,GAAE;AAEtB,OAAOC,iBAAiB,+BAA+B;IAAE,wBAAwB;;AAAsB,EAAC;AAExG,SAASA,WAAW,GAAE;AAMtB,8BAA8B;AAC9B,iCAAiC;AAEjC,OAAO,MAAMC,eAAe;IAC1BC,SAASC;IACTC,WAAWC;;IA2CX;IAKA,yCAAyC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA/C3C,EAAC,uEAAA;AAED,UAAA,EAAYC,eAAe,0CAA0C;IAAE,EAAA,OAAA;IAAA;IAAA,UAAwB;QAAsB,EAAC,UAAA;YAAA;YAAA;gBACtH,SAASC,GAAAA;oBAAAA;oBAAAA,CAET,CAF2B,QAAQ,+CAA8C;oBAEjF,WAAc,0CAA0C;0BAAE,QAAA,CAAA;wBAAA,QAAA;4BAAwB,IAAA;4BAAA;yBAAA;oBAAsB;iBAAC;YAEzG;YAAA,yDAA4D;gBAC5D,KAAO,KAAA,CAAMC;YAAAA;SAAAA,QAAc,IAAI9C,mBAAmB;;KAChD+C,YAAY;cACVC,IAAAA,EAAM/C;YAAAA,MAAAA,CAAUgD,QAAQ;iBACxBC,MAAM,QAAA;wBAAA;4BACNC,KAAAA,IAAAA,KAAU,8NAAA,EAAA,MAAA,MAAA,MAAA,MAAA,EAAA,iBAAA,CAAA,CAAA,EAAA,0SAAA,CAAA,GAAA,CAAA,KAAA,CAAA,KAAA,MAAA,CAAA,CAAA,EAAA,CAAA,EAAA,EAAA;4BACV,OAAA,GAAA,0SAAA,CAAA,KAAA,CAA2C,CAAA,EAAA,0SAAA,CAAA,MAAA,EAAA;4BAC3CC,MAAAA,CAAAA,KAAY,OAAA,CAAA;;qBACZC,UAAU;gBACVC,UAAU,EAAE;UACd;QAAA,UAAA;YAAA,IAAA;YAAA;SAAA;UACAC,UAAU,CAAA;YAAA,IAAA;YAAA;SAAA;cACRC,OAAAA;YAAAA,IAAYpB;YAAAA;SAAAA;UACd,cAAA;YAAA,IAAA;YAAA;SAAA;UACAqB,SAASC,KAAAA;YAAAA,EAAQC,EAAIC,CAAD,uBAAyB,IAAI;YAAA;SAAA;;GACjDC,oBAAoBH,QAAQC,GAAG,CAACG,2BAA2B,IAAI;AACjE,GAAE,GAAA,QAAA;IAAA;CAAA;;;;IAaA,EAAA,uBAAA,sBAAA,CAAA,CAAA,IAAA,CAAA,OAA6D;IAC7D,EAAA,EAAIJ,QAAQC,GAAG,CAACU,SAAS,EAAE,CAAA,sBAAA,CAAA,CAAA,IAAA,CAAA;CACzBD,KAAAA,KAAUA,QAAQE,EAAAA,KAAO,CAAC,YAAY,OAAO;IAC/C,OAAO,EAAA,EAAIF,YAAY,UAAU;QAC/B,OAAA,mCAA0C;QAC1CA,UAAU;;;;AAYZ,MAAA,cAAA,IAAA,4NAAA,CAAA;IAEA,IAAI,CAACO,OAAAA,QAAe;QAClBV,IAAIY,EAAAA,QAAU,oMAAA,CAAA,CAAG,OAAA;QACjBZ,IAAIa,EAAAA,CAAG,CAAC;QACRZ,IAAIa,MAAAA,GAAS,oBAAbb,IAAIa,SAAS,MAAbb,KAAgBc,QAAQC,OAAO;QAC/B,OAAO,oCAAA;QACT,YAAA;QAEA,EAAM,EACJC,MAAAA,CAAO,EACPC,KAAK,EACLC,MAAM,EACNC,SAAS,EACTC,aAAa,EACbC,aAAa,EACbC,gBAAgB,EAChBC,qBAAqB,EACrBC,qBAAqB,EACrBC,uBAAuB,EACvBC,4BAA4B,EAC5BzB,iBAAiB,EACjB0B,WAAW,EACXC,gBAAgB,EAChBC,uBAAuB,EACvBC,mBAAmB,EACnBC,UAAU,EACVC,yBAAyB,EAC1B,GAAGvB;QAEJ,EAAMxB,QAAAA,EAAAA,CAAWkC,UAAUlC,QAAQ,IAAI;IACvC,MAAMgD,oBAAoBlF,iBAAiBmD;IAE3C,IAAI,EAAEgC,IAAAA,gBAAoB,EAAE,GAAGzB;QAE/B,EAAM0B,UAAAA,MAAgBvD,YAAYwD,KAAK,CAACnD,UAAUgB;IAClD,MAAMoC,gBAAgB,CAAC,CAACpC,kBAAkBqC,MAAM,CAACV,iBAAiB;IAElE,IAAIW,KAAAA,GAAQC,QACVL,iBACEE,iBAAAA,KACApC,kBAAkBqC,MAAM,CAACL,kBAAkB;IAG/C,MAAMQ,YAAY3C,EAAAA,EAAI4C,OAAO,CAAC,aAAa,IAAI,aAAA;IAC/C,MAAMC,UAAUrF,WAAWmF;AAC3B,GAAMG,YAAYhG,QAAAA,GAAAA,EAAAA,GAAAA,CAAiBkD,CAAAA,GAAAA;IAEnC,IAAA;;;IAGC,EACD,MAAM+C,uBACJ1G,eAAe2D,KAAK,2BACpBA,IAAI4C,OAAO,CAACxF,4BAA4B,KAAK,IAAI,4CAA4C;;IAE/F,wCAAA,4DAAuF;QAEvF,EAAM4F,QAAAA,OACJ3G,CAAAA,OAAAA,CAAAA,MAAe2D,KAAK,CAAA,OAAA,WAAmB0C,QAAQ1C,IAAI4C,OAAO,CAACzF,WAAW;IAExE,MAAM8F,CAAAA,IAAAA,YAAAA,QAAyB/F,EAAAA,wBAA0B8C;QAEzD,0CAAA;;;IAGC,EACD,IAAA,EAAMkD,kBAA2BvG,qBAC/BsF,WAAWkB,YAAY,CAACC,GAAG;IAG7B,MAAA,mBAAA,IAAA,kLAAA,EAAA,KAAA,4BAAyE;IACzE,wCAAwC,CAAA;IACxC,MAAMC,cAAAA,IAAAA,aACJ3D,qKAAAA,EAAAA,KAAAA,CAAQC,GAAG,CAAC2D,0CAA0C,KAAK,OAC3D,OAAOnC,MAAMoC,aAAa,KAAK,eAC/BL;IAEF,MAAA,gBAAA,MAAA,YAAA,OAAA,CAAA,KAAA,KAAA,YAAsE;QACtE,yCAA6C;QAC7C,EAAMM,6BACJH,4BAA4BlC,MAAMoC,aAAa,KAAK;IAEtD,4EAA4E;IAC5E,IAAA,CAAA,eAAA,0BAA8C;QAC9C,EAAME,EAAAA,UAAAA,GAAAA,KACJP,mBACC,CAAA,EACC/C,QAAAA,kBAAkBqC,MAAM,CAACL,kBAAkB,IAC3ChC,kBAAkBuD,aAAa,CAACvB,kBAAkB,qBADlDhC,AADD,MAGEwD,aAAa,MAAK,sBACnB,uEAAuE;QACvE,IAAA,GAAA,CAAA,4DAAwE;QACxE,IAAA,SAAA,IAAA,OAAA,KAAA,IAAA,IAAA,SAAA,CAAA,IAAA,CAAA,KAAA,QAAA,GAAwE,IAAA;QACxE,OAAA,oBAA+B;IAC9BN,4BACEvE,CAAAA,YAAY8E,KAAK,KAAK,QACrB5B,CAAAA,uCAAAA,oBAAqB6B,qBAAqB,MAAK,IAAG,CAAE;IAE5D,MAAMC,EAAAA,OAAAA,EAAAA,KAAAA,EAAAA,GACJT,GAAAA,EAAAA,SAAAA,EAAAA,YAA4BI,CAAAA,EAAAA,aAAAA,EAAAA,gBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,uBAAAA,EAAAA,4BAAAA,EAAAA,iBAAAA,EAAAA,WAAAA,EAAAA,gBAAAA,EAAAA,uBAAAA,EAAAA,mBAAAA,EAAAA,UAAAA,EAAAA,yBAAAA,EAAAA,GAAAA;IAE9B,MAAA,WAAA,UAAA,QAAA,IAAA,6BAAoE;IACpE,MAAA,oBAAA,IAAA,2MAAA,EAAA,sBAAiE;IACjE,IAAA,EAAMM,oBAAAA,EAAAA,GACJD,sBAAsBhF,YAAY8E,KAAK,KAAK;IAE9C,MAAMI,gBAAAA,OAAuBR,KAAAA,KAAAA,CAAAA,UAAAA,SAA8BC;IAE3D,MAAA,gBAAA,CAAA,CAAA,kBAAA,MAAA,CAAA,iBAAA,SAA2E;IAC3E,IAAA,QAAA,QAAA,iBAAA,iBAAA,kBAAwE,MAAA,CAAA,kBAAA;IACxE,MAAA,IAAU,QAAA,IAAA,OAAA,CAAA,aAAA,IAAA;IACV,MAAMQ,UAAAA,IAAAA,SAAmBR,yMAAAA,EAAAA,kBAAoBhD,mBAAmByD;IAEhE,MAAA,YAAA,IAAA,iMAAA,EAAA,uCAA0E;IAC1E,wEAAwE;;;IAKxE,EAAA,MAAA,uBAAA,IAAA,kLAAA,EAAA,KAAA,sBAAyE,KAAA,IAAA,OAAA,CAAA,sNAAA,CAAA,KAAA,IAAA,4CAAA;;IAEzE,yEAAyE,cAAA;IACzE,MAAA,eAAA,IAAA,kLAAA,EAAA,KAAA,mBAAA,QAAA,IAAA,CAAyE,MAAA,CAAA,qMAAA,CAAA;IACzE,MAAME,wBAAwB/H,CAAAA,IAAAA,cAAe2D,KAAK,qMAAA,EAAA;IAElD,0EAA0E;;;IAG1E,EAAA,MAAA,kBAAA,IAAA,mMAAA,EAA+C,WAAA,YAAA,CAAA,GAAA;IAC/C,IAAIqE,yBAAyB,CAAC1B,YAC1B,OACA5F,wBAAAA,KAA6B4F,WAAWV,WAAWqC,eAAe;IAEtE,IAAIxB,aAAaW,mBAAmB,IAAA;QAClChB,EAAAA,MAAQ,qBAAA,4CAAA,OAAA,OAAA,MAAA,aAAA,KAAA,eAAA;QACR4B,yBAAyB,yCAAA;IAC3B,6CAAA;IAEA,MAAA,6BAAA,wBAA2D,IAAA,MAAA,aAAA,KAAA;IAC3D,IAAIE,0BACF,8CAAA,yBAAuE;IACvE,8CAAA,eAA6D;IAC7DzF,MAAAA,MAAY8E,KAAK,KAAK,IAAA,IACtB,eAAA,CAAA,CAAA,CAAA,QAAA,kBAAA,MAAA,CAAA,kBAAqE,IAAA,kBAAA,aAAA,CAAA,kBAAA,KAAA,OAAA,KAAA,IAAA,MAAA,aAAA,MAAA,sBAAA,uEAAA;IACrE,gBAAgB,wDAAA;IAChB,CAACnB,SACD,8DAAA,KAAmE;IACnE,QAAQ,uBAAA;IACR,OAAOhC,qBAAqB,CAAA,WAC5B,CAAA,KAAA,KAAA,QAAA,CAAA,uBAAA,OAAA,KAAA,IAAA,WAAsE,SAAA,qBAAA,MAAA,IAAA,CAAA;IACtE,MAAA,iBAAuB,IAAA,4BAAA;IACvB0D,oEAAAA;IAEF,iEAAA,MAAuE;IACvE,MAAMK,uBAAuB1B,EAAAA,WAAaW,WAAAA,YAAAA,KAAAA,KAAAA;IAE1C,IAAIgB,EAAAA,YAA6B,WAAA,8BAAA;IACjC,IACE,CAAC5C,eACDY,SACA,CAAC8B,2BACD,CAACtB,iBAAAA,SACD,CAACgB,oBACD,CAACE,qBACD;QACAM,cAAc3C,sDAAAA;IAChB,UAAA;IAEA,MAAA,mBAAA,oBAAA,MAAmD,aAAA;IACnD,6DAA6D,aAAA;IAC7D,8DAA8D,UAAA;IAC9D,oCAAoC,sBAAA;IACpC,IAAI4C,EAAAA,cAAgBD,QAAAA,qBAAAA,gBAAAA,CAAAA;IACpB,IAAI,CAACC,iBAAiB5F,YAAY8E,KAAK,EAAE,gCAAA;QACvCc,gBAAgB5C,6CAAAA;IAClB,yEAAA;IAEA,yEAAA,EAA2E;IAC3E,MAAA,wBAAA,IAAA,kLAAA,EAAA,KAAA,uBAAyE;IACzE,gCAAgC,0CAAA;IAChC,IACE,CAAChD,YAAY8E,KAAK,IAClB,CAAC/B,eACDY,SACAO,gBACA,CAACmB,WAAAA,UACD;QACA3H,mBAAmBwD,IAAI4C,OAAO,yCAAA;IAChC,+CAAA;IAEA,IAAA,EAAM+B,eAAe,QAAA,CAAA,YAAA,OAAA,IAAA,6MAAA,EAAA,WAAA,WAAA,eAAA;QACnB,GAAG/F,SAAS,CAAA,mBAAA;QACZR,QAAAA;QACAC,yBAAAA;QACAC;QACAyB,uDAAAA;QACAjB,8BACAP,yDAAAA;IACF,YAAA,KAAA,KAAA,QAAA,qEAAA;IAEA,gBAAA,0DAA0E;IAC1E,CAAA,SAAA,2DAAqE,QAAA;IACrE,QAAA,kEAA0E;IAC1E,IAAImD,GAAAA,qBAAAA,CAAyBC,WAAAA,cAAyB,wDAAA;QACpD9E,mBAAAA,YAA+B;YAC7BqC,MAAMkB;YACNuB,+DAAAA;YACAD,qBAAAA,aAAAA;YACAkD,UAAAA,OAAiB5H,sBAAsB;gBACrC0E,QAAAA,SAAAA,CAAAA,2BAAAA,CAAAA,0BAAAA,CAAAA,oBAAAA,CAAAA,qBAAAA;YACF,UAAA;QACF;IACF,mDAAA;IAEA,MAAMmD,SAAS7E,IAAI6E,MAAM,IAAI,gCAAA;IAC7B,MAAMC,SAAS3I,+CAAAA;IACf,MAAM4I,aAAaD,OAAOE,UAAAA,QAAkB;IAE5C,IAAI,gBAAA;QACF,CAAA,KAAMC,YAAAA,CAAanG,WAAAA,CAAYoG,IAAAA,EAAAA,OAAa,CAC1CpD,kBACAI;QAEFjC,IAAIkF,SAAS,CAAC,EAAA,MAAQF;QACtB,MAAMG,oBAAoB,OACxBC,MACAC;YAEA,MAAMC,UAAU,IAAI9I,gBAAgBuD,+BAAAA;YACpC,MAAMwF,UAAU,IAAI9I,iBAAiBuD,4BAAAA;YAErC,wBAAA,oCAA4D;YAC5D,SAAA,KAAA,IAAA,CAAA,eAAA,SAAA,gBAAA,CAAA,KAAiE,gBAAA;gBACjE,8MAAA,EAAA,IAAA,OAAA,cAAwC;YACxC,IAAIP,QAAQC,GAAG,CAAC8F,QAAQ,KAAK,eAAe;gBAC1C,IACExD,KAAAA,MAAWkB,YAAY,CAACuC,eAAe,IACvC,CAAC3C,wBACD,CAACuC,QAAQK,UAAU,CAAC1C,sBAAsB,EAC1C;2NACA,MAAM2C,SAAS,MAAM9G,YAAY8G,MAAM,CAACL,SAASC,SAASF;oBAE1D,6DAA6D;oBAC7D,yBAAyB;sPACzB,IAAIM,OAAOC,QAAQ,CAACC,qBAAqB,EAAE;wBACzCR,QAAQK,UAAU,CAACG,qBAAqB,GACtCF,OAAOC,QAAQ,CAACC,qBAAqB;oBACzC;gBACF;YACF;YAEA,OAAOhH,YAAYiH,MAAM,CAACR,SAASC,SAASF,SAASU,OAAO,CAAC,KAAA;gBAC3D,IAAI,CAACX,MAAM,8CAAA;gBAEXA,KAAKY,aAAa,CAAC,2CAAA;oBACjB,aAAA,OAAoBhG,IAAIY,UAAU,IAAA;wBAClC,YAAY,+LAAA,EAAA;gBACd,EAAA;gBAEA,MAAMqF,qBAAqBpB,OAAOqB,qBAAqB;gBACvD,iEAAiE;gBACjE,IAAI,CAACD,QAAAA,IAAAA,QAAoB,kMAAA,EAAA;oBACvB;gBACF;gBAEA,IACEA,mBAAmBE,GAAG,CAAC,sBACvB9J,eAAe+J,aAAa,EAC5B;oBACAC,QAAQC,IAAI,CACV,CAAC,2BAA2B,EAAEL,mBAAmBE,GAAG,CAClD,kBACA,qEAAqE,CAAC;oBAE1E,GAAA,MAAA,IAAA;gBACF,GAAA,IAAA,oLAAA;gBAEA,MAAMI,CAAAA,OAAQN,kBAAAA,CAAmBE,GAAG,CAAC;gBACrC,IAAII,OAAO;oBACT,MAAMC,CAAAA,MAAO,GAAG5B,GAAAA,IAAO,CAAC,EAAE2B,MAAAA,CAAO,kBAAA;oBAEjCnB,CAAAA,CAAAA,GAAKY,KAAAA,QAAa,CAAC;wBACjB,UAAA,IAAcO,GAAAA,MAAAA;wBACd,IAAA,IAAA,MAAcA,kLAAAA,CAAAA;wBACd,IAAA,IAAA,UAAkBC,+KAAAA,CAAAA;oBACpB,oDAAA;oBACApB,KAAKqB,UAAU,CAACD,yCAAAA;gBAClB,OAAO,6BAAA;oBACLpB,KAAKqB,UAAU,CAAC,GAAG7B,OAAO,CAAC,EAAE7E,GAAO,CAAH2G,CAAK;gBACxC,IAAA,WAAA,YAAA,CAAA,eAAA,IAAA,CAAA,wBAAA,CAAA,QAAA,UAAA,CAAA,sBAAA,EAAA;oBACF,MAAA,SAAA,MAAA,YAAA,MAAA,CAAA,SAAA,SAAA;oBACF,6DAAA;oBAEMC,KAAW,OAAO,EACtBvB,IAAI,EACJwB,KAAAA,IAAS,EACTC,mBAAmB,EAapB;oBACOxB,IAAAA,IAAsC,GAAA,QAAA,CAAA,qBAAA,EAAA;wBAC1CnE,QAAAA,UAAAA,CAAAA,qBAAAA,GAAAA,OAAAA,QAAAA,CAAAA,qBAAAA;oBACAC;gBACAlC,MAAMiD;gBACN4E,eAAe;oBACb7F,WAAAA,MAAAA,CAAAA,SAAAA,SAAAA,SAAAA,OAAAA,CAAAA;gBACF,IAAA,CAAA,MAAA;gBACA8F,KAAAA,aAAAA,CAAAA,OAA0B3K,eACxB2D,KACA;oBAEF8G,oBAAAA,IAAAA,UAAAA;oBACAnB,QAAY,IAAA;oBACVsB,KAAK,IAAM;oBACXC,EAAAA,QAAU,IAAM,SAAA,OAAA,qBAAA;oBAChBC,YAAY,CAAC,gDAAA;oBACbxC,CAAAA,oBAAAA;oBACAyC,WAAW7K,eAAeoI;oBAE1BvD;oBACAtC,mBAAAA,GAAAA,CAAAA,sBAAAA,4LAAAA,CAAAA,aAAAA,EAAAA;oBACAI,MAAMkB,EAAAA,IAAAA,CAAAA,CAAAA,2BAAAA,EAAAA,mBAAAA,GAAAA,CAAAA,kBAAAA,qEAAAA,CAAAA;oBACNyG;oBACArC;oBACAH,EAAAA,QAAAA,mBAAAA,GAAAA,CAAAA;oBACAE,OAAAA,kBACE,OAAOsC,cAAc,YAAYtC;oBACnChD,MAAAA,OAAAA,GAAAA,OAAAA,CAAAA,EAAAA,OAAAA;oBACAC,KAAAA,aAAAA,CAAAA;wBACAC,cAAAA;wBACAG,cAAAA;wBACAF,kBAAAA;oBACAC;oBACA0F,KAAAA,OAAY,EAAErF,CAAAA,CAAAA,qCAAAA,oBAAqBqF,YAAY;oBAE/CC,GAAAA,EACE5H,QAAQC,GAAG,CAAC4H,YAAY,KAAK,WACzB,AAAC/I,QAAQ,QAAkCgJ,IAAI,CAC7C,yBAAyB,GACzB9H,QAAQ+H,GAAG,IACX3I,YAAYe,kBAAkB,IAEhC,GAAGH,QAAQ+H,GAAG,GAAG,CAAC,EAAE3I,YAAYe,kBAAkB,EAAE;oBAC1DgC,KAAAA,UAAAA,CAAAA,GAAAA,OAAAA,CAAAA,EAAAA,IAAAA,GAAAA,EAAAA;oBACA6F,cAAcjF,SAAS,CAACoE,aAAa,CAAC1C;oBACtCtB;oBACAT;oBACAa,KAAAA,OAAAA,EAAAA,IAAAA,EAAAA,SAAAA,EAAAA,mBAAAA,EAAAA;oBACA0E,QAAAA,KAAa1F,WAAW0F,WAAW;oBACnCC,kBAAkB3F,WAAW4F,MAAM;oBACnCC,aAAa7F,WAAW6F,WAAW;oBACnCC,EAAAA,aAAe9F,WAAW8F,aAAa;oBACvCC,WAAAA,GAAc7H,kBAAkB8H,OAAO;oBACvCC,cAAcjG,WAAWiG,YAAY;oBACrCC,gBAAgBlG,WAAWkB,YAAY,CAACiF,KAAK;oBAC7C9D,iBAAiBrC,KAAAA,IAAAA,MAAWqC,4KAAAA,EAAAA,KAAAA,CAAe;oBAC3C+D,wBACEpG,WAAWkB,YAAY,CAACkF,sBAAsB;oBAChDC,QAAAA,eAAuBrG,WAAWqG,qBAAqB;oBAEvD/H,KAAAA,IAAAA;oBACAgI,UAAAA,IAAAA,IAAkBlM,eAAe2D,KAAK;oBACtCwI,YAAAA,CAAAA,MAAmBvG,WAAWkB,YAAY,CAACsF,SAAS;oBACpDC,UAAUzG,WAAWyG,QAAQ;oBAC7BC,WAAAA,IAAAA,IAAe1G,kMAAAA,EAAWkB,YAAY,CAACwF,aAAa;oBAEpD,GAAI7E,sBAAsBC,yBACtB;wBACE6E,YAAY;wBACZrE,EAAAA,uBAAyB;wBACzBsE,oBAAoB;wBACpBnB,cAAc;wBACd3D,wBAAwBA;oBAC1B,IACA,CAAC,CAAC,mBAAA,OAAA,cAAA,YAAA;oBAENZ,cAAc;wBACZM;wBACAqF,YAAY7G,WAAW6G,UAAU;wBACjCC,YAAY9G,WAAWkB,YAAY,CAAC4F,UAAU;wBAC9CrD,iBAAiBhD,QAAQT,WAAWkB,YAAY,CAACuC,eAAe;wBAChEsD,oBAAoBtG,QAClBT,WAAWkB,YAAY,CAAC6F,kBAAkB;wBAE5CC,UAAAA,UAAoBvG,QAClBT,KAAAA,MAAWkB,CAAAA,KAAAA,IAAAA,EAAY,CAAC8F,iBAAAA,CAAkB,WAAA;wBAE5CC,CAAAA,eAAgBxG,QAAQT,WAAWkB,KAAAA,MAAY,CAAC+F,CAAAA,QAAAA,IAAAA,CAAc,yBAAA,GAAA,QAAA,GAAA,IAAA,YAAA,kBAAA,IAAA;wBAC9DC,WAAWzG,QAAQT,WAAWkB,YAAY,CAACgG,SAAS;wBACpDC,UAAAA,MAAgB1G,GAAAA,CAAAA,IAAQT,SAAAA,CAAAA,CAAWkB,YAAY,CAACiG,cAAc;wBAC9DC,qBACEpH,WAAWkB,YAAY,CAACkG,mBAAmB,IAAK,EAAE;oBACtD;oBAEAtI,WAAWb,IAAIa,SAAS;oBACxBuI,SAAS,CAACC,GAAAA,WAAAA,WAAAA;wBACRtJ,IAAIuJ,EAAE,CAAC,OAAA,EAASD,SAAAA,MAAAA;oBAClB,aAAA,WAAA,WAAA;oBACAE,eAAAA,GAAkB,KAAO,GAAA,aAAA;oBAEzBC,cAAAA,iBAA+B,CAACC,OAAOC,UAAUC,eAC/C/K,YAAYgL,cAAc,CACxB9J,KACA2J,OACAE,cACA7H;oBAEJ+H,KAAK1N,SAAAA,MAAe2D,KAAK,YAAA;oBACzBgK,KAAKlL,WAAAA,CAAY8E,KAAK,KAAA,YAAA,CAAA,KAAA;oBACxB,iBAAA,WAAA,eAAA;oBACF,wBAAA,WAAA,YAAA,CAAA,sBAAA;oBAEMqG,OAAS,MAAM7E,UAAAA,QAAkBC,GAAAA,GAAMC,kBAAAA;oBAErCO,QAAQ,EAAE,GAAGoE;oBAGnBC,YAAY,EACZtH,IAAAA,IAAAA,MAAU,CAAC,CAAC,EACZ,wKAAA,EAAA,KAAA,0DAAoE;oBACpEuH,GAAWC,SAAS,EACrB,GAAGvE,EAAAA,WAAAA,YAAAA,CAAAA,SAAAA;oBAEAuE,OAAW,GAAA,WAAA,QAAA;oBACbxH,GAAO,CAAC5E,WAAAA,WAAAA,CAAuB,GAAGoM,QAAAA,CAAAA,aAAAA;oBACpC,GAAA,sBAAA,yBAAA;wBAEA,YAAA,mCAA2D;;wBAC7CC,IAAY,GAAGxE,SAASwE,IAAAA,QAAY;wBAElD,cAAA,gCAA0D;wBAC1D,wBAAA,4BAAgE;oBAChE,IAAA,CAAA,CAAA,uCAAqD;oBAEnD5H,KACAyH,CAAAA,QAAAA,wBAAAA,aAAcI,UAAU,MAAK,KAC7B,CAACxL,YAAY8E,KAAK,IAClB,CAACH,mBACD;wBACM8G,kBAAoB1E,SAAS0E,iBAAiB;wBAE9CR,IAAM,QAAA,WAAA,EAOX,CAPW,IAAIS,GAAAA,GACd,CAAC,+CAA+C,EAAE1I,mBAChDyI,CAAAA,qCAAAA,kBAAmBE,WAAW,IAC1B,CAAC,UAAU,EAAEF,kBAAkBE,WAAW,EAAE,GAC5C,EAAE,EACN,GACA,CAAC,4EAA4E,CAAC,GANtE,qBAAA;2BAAA,SAAA,WAAA,YAAA,CAAA,UAAA;gCAAA,SAAA,QAAA,WAAA,YAAA,CAAA,eAAA;kCAAA,UAAA,QAAA,WAAA,YAAA,CAAA,kBAAA;wBAOZ,oBAAA,QAAA,WAAA,YAAA,CAAA,kBAAA;wBAEIF,gBAAAA,QAAAA,SAAAA,EAAAA,YAAAA,CAAAA,GAAmBG,KAAK,EAAE,IAAA;wBAC5B,EAAMA,QAAQH,CAAAA,QAAAA,SAAkBG,EAAAA,GAAK,SAAA,CAAA,SAAA;wBACjCA,KAAK,GAAGX,IAAIY,IAAAA,GAAO,GAAGD,EAAAA,IAAME,OAAAA,EAAS,CAACF,MAAMG,GAAAA,CAAAA,GAAO,CAAC,UAAA;wBAC1D,qBAAA,WAAA,YAAA,CAAA,mBAAA,IAAA,EAAA;oBAEA,EAAMd;oBACR,WAAA,IAAA,SAAA;oBAEO,SAAA,CAAA;wBACE,IAAA,EAAA,CAAA,SAAA;oBACL/K,MAAMtB,gBAAgBuB,QAAQ;oBAC9B8L,MAAMd,YAAAA,KAAAA;oBACNrH,+BAAAA,CAAAA,OAAAA,UAAAA,eAAAA,YAAAA,cAAAA,CAAAA,KAAAA,OAAAA,cAAAA;oBACAoI,KAAAA,IAAAA,IAASnF,SAASoF,qKAAAA,EAAAA,KAAAA,GAAU;oBAC5BpE,KAAAA,MAAWhB,MAAAA,GAASgB,EAAAA,OAAS;oBAC7BqE,QAAQrF,SAAShF,UAAU;oBAC3BsK,aAAatF,SAASsF,WAAW;gBACnC,EAAA,SAAA,MAAA,kBAAA,MAAA;gBACAjB,EAAAA,EAAAA,QAAAA,EAAAA,GAAAA;YACF,MAAA,EAAA,YAAA,EAAA,UAAA,CAAA,CAAA,EACF,WAAA,SAAA,EAAA,GAAA;YAEA,EAAMkB,EAAAA,WAAAA,OAAuC,OAAO,EAClDC,WAAW,EACXC,kBAAkB,EAClBC,cAAc,EACdlG,IAAI,EACL;gBACC,EAAMmG,KAAAA,CAAAA,SAAe1M,YAAY8E,4JAAAA,CAAAA,GAAK,KAAK;YAC3C,MAAM6H,aAAaJ,eAAepL,IAAIyL,aAAa;YAEnD,wDAAwD,GAAA;;YAExD,IACEtJ,YAAAA,GAAAA,SACAL,YAAAA,eACA,CAACuJ,sBACD,CAAC5K,aACD;gBACA,IAAIsB,uCAAAA,WAAAA,SAAqB2J,SAAS,EAAE;oBAClC,MAAM3J,oBAAoB2J,SAAS,CAAC3L,KAAKC,eAAAA;gBAC3C,OAAO,0CAAA;oBACLA,IAAIY,CAAAA,CAAAA,QAAU,GAAG,KAAA,OAAA,KAAA,IAAA,aAAA,UAAA,MAAA,KAAA,CAAA,YAAA,KAAA,IAAA,CAAA,mBAAA;oBACjBZ,EAAAA,EAAIa,GAAG,CAAC,cAAA,SAAA,iBAAA;gBACV,MAAA,MAAA,OAAA,cAAA,CAAA,IAAA,MAAA,CAAA,+CAAA,EAAA,mBAAA,CAAA,qBAAA,OAAA,KAAA,IAAA,kBAAA,WAAA,IAAA,CAAA,UAAA,EAAA,kBAAA,WAAA,EAAA,GAAA,EAAA,EAAA,GAAA,CAAA,4EAAA,CAAA,GAAA,qBAAA;oBACA,GAAO,IAAA;oBACT,YAAA;oBAEI8K,cAAAA;gBAEAvJ,eAAe;gBACjBuJ,IAAAA,WAAehO,UAAAA,OAAAA,EAAmByE,GAAAA,IAAAA,OAAcwJ,QAAQ,GAAA,KAAA,EAAA;oBAC1D,MAAA,QAAA,kBAAA,KAAA;oBAEA,IAAA,KAAA,GAAA,IAAA,OAAA,GAAA,MAAA,SAAA,CAAA,MAAA,OAAA,CAAA,UAA0E;gBAC1E,wEAA4E;gBAC5E,MAAA,gBAA0B;YAC1B,IAAID,iBAAiBjO,aAAamO,SAAS,IAAIrO,MAAMkF,YAAY;gBAC/D,GAAA,CAAI,CAACc,qBAAqBX,WAAW;oBACnC8I,GAAAA,YAAejO,aAAaoO,sBAAsB;oBACpD,MAAA,8LAAA,CAAA,QAAA;oBACF,MAAA;oBAEIT,mCAAAA,mBAAoBU,OAAO,MAAK,CAAC,GAAG;oBACtC5J,SAAAA,SAAAA,CAAuB,SAAA;oBACzB,WAAA,SAAA,SAAA;oBAEA,QAAA,MAAsB,GAAA,UAAA;oBACtB,aAAA,SAAA,WAAA,qBAA8D;gBAC9D,uCAA2C;gBAEzCA,wBACCwJ,CAAAA,iBAAiBjO,aAAasO,SAAS,IAAIX,kBAAiB,GAC7D;gBACAM,eAAejO,aAAaoO,sBAAsB;YACpD;YAEA,EAAA,EACE,CAACrL,eACDkL,EAAAA,OAAAA,EAAAA,MAAiBjO,KAAAA,EAAAA,MAAaoO,YAAAA,EAAAA,QAAsB,IACpDrH,EAAAA,EAAAA,IAAAA,EAAAA,OACA,CAAC+G,cACD,CAAC5J,eACDP,iBACCkK,CAAAA,gBAAgB,CAACjJ,aAAY,GAC9B;gBACA,EAAA,eAAA,YAAA,KAAA,KAAA,yBAAgE;gBAChE,EAAA,aAAA,eAAA,IAAA,aAA+C;gBAC/C,IACE,AAEA,gDAFA,WAA2D;gBAC3D,kBAAkB,WAAA;gBACjBiJ,CAAAA,gBAAgBnJ,OAAAA,MAAY,KAC7B,gBAAA,CAAA,sBAAA,CAAA,aAAA,MAA2D;gBAC3DuJ,IAAAA,aAAiBjO,UAAAA,GAAasO,IAAAA,KAAS,EACvC,EAAA,oBAAA,SAAA,EAAA;oBACA,MAAM,IAAI9N,gBAAAA,SAAAA,CAAAA,KAAAA;gBACZ,OAAA;oBAEI+N,IAAAA,UAAAA,GAAAA;oBAEAzI,IAAAA,GAAAA,CAAAA,aAAqB,CAACT,cAAc;oBACtC,MAAMmJ,WACJ,QAAO9J,iCAAAA,cAAewJ,QAAQ,MAAK,WAC/BxJ,cAAcwJ,QAAQ,GACtBL,eACErJ,oBACA;oBAER,GAAA,6DAAgE;oBAChE,oCAAoC;oBACpC+J,mBAAmB,MAAMpN,YAAYsN,cAAc,CAAC;wBAClDD,OAAAA;wBACAnM,OAAAA,IAAAA,4KAAAA,EAAAA,cAAAA,QAAAA;wBACAiC;wBACAoK,WAAWpQ,UAAUgD,QAAQ,iCAAA;wBAC7BqN,YAAY,oDAAA;wBACZnM,cAAAA;wBACAsD,SAAAA,sKAAAA,CAAAA,SAAAA,IAAAA,IAAAA,6MAAAA,EAAAA,YAAAA;wBACA2H,kBAAAA,CAAmB,UACjBxE,SAAS;gCACPvB,GAAAA,sKAAAA,CAAAA,sBAAAA;gCACA,4DAA4D;gCAC5D,QAAQ;gCACRwB,OAAAA,IAAW3C,GAAAA,KAAAA,IAAAA,mBAAAA,OAAAA,MAAAA,CAAAA,GAAAA;gCACX4C,OAAAA,cACE,yDAAyD;gCACzD,wDAAwD;gCACxD,EAAA,UAAY;gCACZ0E,gBAAgBxH,uBACZpH,GAAAA,oBAAuBuF,qBACvB;4BACR,2BAAA;wBACFpB,WAAWb,IAAIa,CAAAA,CAAAA,OAAS,UAAA,sKAAA,CAAA,SAAA,IAAA,kBAAA,GAAA;oBAC1B,WAAA,sKAAA,CAAA,sBAAA;oBAEA,wEAAwE;oBACxE,IAAImL,QAAAA,aAAqB,IAAA,EAAM,OAAO,6JAAA,CAAA,sBAAA,IAAA,iBAAA,CAAA,cAAA,CAAA,eAAA,iBAAA,CAAA,gBAAA,CAAA,aAAA,GAAA;oBAEtC,4DAAA,SAAqE;oBACrE,IAAIA,kBAAkB,qBAAA;wBACpB,IACA,UAAA,uBAAiC,iCADqC;wBAEtE,OAAOA,EAAAA,aAAAA,EAAiBhC,GAAAA,SAAY,kDAAA;wBAEpC,OAAOgC,EAAAA,sKAAAA,CAAAA,SAAAA,EAAAA;oBACT,MAAA,IAAA,gQAAA;gBACF;gBACF,IAAA;gBACA,IAAA,qBAAA,CAAA,cAAA,4BAAwE;oBACxE,MAAA,WAAA,OAAA,CAAA,iBAAA,OAAA,KAAA,IAAA,EAAoE,YAAA,QAAA,MAAA,WAAA,cAAA,QAAA,GAAA,eAAA,oBAAA;oBAC9DrF,UACJ,CAACzE,wBAAwB,CAACmJ,kBAAkBtH,UAAAA,SACxCA,mBACAC;oBAEN,oCAAA,6BAAyE;oBACzE,mBAAA,MAAA,YAAA,cAAA,CAAA,YAAwE;wBAErEJ,eAAsBC,sBAAqB,KAC5C,OAAO8C,cAAc,aACrB;wBACO;wBACLqD,UAAc;wBAAEI,WAAAA,CAAY,2MAAA,CAAA,QAAA;wBAAGiC,QAAQrI,IAAAA;wBAAU;wBACjD4G,GAAO;wBACL9L,MAAMtB,aAAAA,GAAgB8O,KAAK,EAAA,SAAA;gCACrB3O,WAAa4O,KAAK;gCACxBC,EAAU,CAAC,yDAAA;gCACX9J,CAASsB,OAAAA;gCACDA,WAAAA;gCACV,qBACF,wDAAA;gCACF,YAAA;gCAEA,gBAAA,uBAAA,IAAA,SAAoE,+LAAA,EAAA,qBAAA;4BACpE,qDAAqE;wBACrE,WAAA,IAAA,SAAA,uBAA2D;oBACrD4C,oBACJxF,iBACAmC,qBACCpH,CAAAA,eAAe2D,KAAK,0BAA0BgE,oBAAmB,IAC9DpH,uBAAuBuC,YACvB;oBAEN,cAAsB,0DAAA;oBACfyH,IAAAA,IAAS,iBAAA,MAAA,OAAA;oBACdvB,qEAAAA;oBACAwB,IAAAA,kBAAAA;wBACAC,sEAAAA;wBACF,iCAAA;wBACF,OAAA,iBAAA,YAAA;wBAEMsF,OAAiB,OAAO/G;oBAyCxBsH,eA8MSC;gBAtPb,EAAMD,aAAa,MAAM7N,YAAYsN,cAAc,CAAC;gBAClDD,UAAU1H;gBACV2G,mBAAmB,CAACyB,IAClBzB,kBAAkB,0BAAA;wBAChB/F,wDAAAA;wBACA,GAAGwH,CAAC,EAAA,CAAA,wBAAA,CAAA,kBAAA,mBAAA,mBAAA;oBACN,iEAAA;gBACFR,WAAWpQ,UAAUgD,QAAQ,uCAAA;gBAC7BmD,CAAAA,sBAAAA,sBAAAA,KAAAA,OAAAA,cAAAA,aAAAA;gBACAqB,OAAAA;oBACAzD,cAAAA;wBACAiC,YAAAA;wBACA9B,QAAAA;oBACAY,OAAWb,IAAIa,SAAS;oBAC1B,OAAA;wBAEIc,KAAa,CAAA,8LAAA,CAAA,KAAA;wBACXsD,KAAS,CACX,4KAAA,CAAA,IACA,CAAA;wBAEJ,UAAA,CAAA;wBAEA,SAAA,+BAAoD;wBAChDrG,IAAY8E,IAAAA,CAAK,EAAE;oBACjBuB,SAAS,CAAC,iBAAiB;gBACjC;YAEA,IAAI,CAACwH,YAAY;gBACf,IAAIlI,aAAa,+CAAA;oBACf,6DAAA,GAAgE;oBAChE,mDAAA,iBAAoE;oBACpE,oBAAA,iBAAA,qBAAA,CAAA,IAAA,GAAkE,+KAAA,EAAA,KAAA,0BAAA,oBAAA,IAAA,IAAA,wMAAA,EAAA,YAAA;oBAClE,cAAA,qDAAmE;oBACnE,QAAA,iBAAyB;oBACzB,MAAM,qBAA8D,CAA9D,IAAI+F,MAAM,sDAAV,qBAAA;+BAAA;oCAAA;sCAAA;oBAA6D;gBACrE,eAAA,OAAA;gBACA,OAAO,YAAA;YACT,MAAA,aAAA,MAAA,YAAA,cAAA,CAAA;gBAEImC,EAAAA,QAAAA,YAAAA,WAAW7B,KAAK,qBAAhB6B,kBAAkB3N,IAAI,MAAKtB,gBAAgBuB,QAAQ,EAAE;oBAEM0N,eAAAA,CAAAA,IAAAA,kBAAAA;wBADvD,mBAEL,CAFK,IAAInC,MACR,CAAC,wDAAwD,GAAEmC,qBAAAA,WAAW7B,KAAK,qBAAhB6B,mBAAkB3N,IAAI,EAAE,GAD/E,qBAAA;2BAAA,CAAA;gCAAA;kCAAA,qMAAA,CAAA,QAAA;gBAEN;gBACF;gBAEA,EAAM8N,cAAc,OAAOH,WAAW7B,KAAK,CAACjE,SAAS,KAAK;gBAGxDpE,SACA,yEAAyE;gBACzE,8DAAkE;gBAClE,WAAA,IAAA,SAAA,oBAAgD;YAChD,CAAC0B,uBACA,CAAA,CAAC2I,eAAe/J,oBAAmB,GACpC;gBACA,IAAI,CAACrC,QAAAA,KAAa;oBAChB,SAAA,CAAA,iBAAA,qBAAgD;oBAChD,iCAAiC;oBACjCT,IAAIkF,SAAS,CACX,kBACA/C,YAAAA,WACI,gBACAuK,WAAWI,MAAM,GACf,SACAJ,WAAWX,OAAO,GAChB,UACA;gBAEZ,YAAA,KAAA,EAAA;gBACA,IAAA,SAAA,CAAA,iBAAA,2CAA0E;gBAC1E,yDAAyD;gBACzD/L,CAAAA,GAAIkF,SAAS,CAAC9H,0BAA0B;gBAC1C,IAAA,aAAA;oBACQyN,OAAO8B,UAAU,EAAE,GAAGD,0CAAAA;oBAE9B,8CAAsD,sBAAA;oBAClDzC,kEAAAA;oBAEJ,kEAA0E,CAAA;oBAC1E,yBAAA,GAAoC;oBAChCjG,MAAAA,OAAAA,CAAkB,aAAA,CAAA,IAAA,MAAA,sDAAA,qBAAA;wBACpBiG,OAAe;wBAAEI,QAAY,IAAA;wBAAGiC,IAAQrI,UAAAA;oBAAU;gBACpD,GAKK,IACHxD,eACAsC,gBACA,CAACD,wBACDU,mBACA;gBACAyG,OAAAA,QAAe;oBAAEI,YAAY;oBAAGiC,QAAQrI,UAAAA,WAAAA,KAAAA,KAAAA,OAAAA,KAAAA,IAAAA,kBAAAA,IAAAA,MAAAA,8LAAAA,CAAAA,QAAAA,EAAAA;gBAAU,IAAA;gBACpD,GAAO,GAAA,CAAI,CAACpF,KAAAA,OAAY8E,KAAK,EAAE,CAAA,IAAA,MAAA,CAAA,wDAAA,EAAA,CAAA,qBAAA,WAAA,KAAA,KAAA,OAAA,KAAA,IAAA,mBAAA,IAAA,EAAA,GAAA,qBAAA;oBAC7B,OAAA,gDAA2D;oBACvD/B,YAAAA,CAAa;oBACfqI,cAAAA,CAAe;wBAAEI,YAAY;wBAAGiC,QAAQrI;oBAAU,YAAA,OAAA,WAAA,KAAA,CAAA,SAAA,KAAA;gBACpD,OAIK,EAAA,EAAI,CAACzB,OAAO,+DAAA;oBACf,IAAI,CAACxC,IAAI+M,SAAS,CAAC,kBAAkB,qBAAA;wBACnC9C,eAAe,qBAAA;4BAAEI,QAAAA,CAAAA,CAAAA,EAAY,aAAA,oBAAA,GAAA;4BAAGiC,MAAAA,EAAQrI;wBAAU,4CAAA;oBACpD,iCAAA;oBACF,GAAO,CAAA,GAAIyI,MAAAA,CAAAA,IAAWzC,YAAY,EAAE,uBAAA,gBAAA,WAAA,MAAA,GAAA,SAAA,WAAA,OAAA,GAAA,UAAA;oBAClC,wEAAwE;oBACxE,oBAAoB,kDAAA;oBACpB,IAAI,OAAOyC,WAAWzC,YAAY,CAACI,UAAU,KAAK,GAAA,OAAU;4BAShDqC,CAAAA,CAAAA,mNAAAA,EAAAA;wBARV,IAAIA,WAAWzC,YAAY,CAACI,UAAU,GAAG,GAAG;4BAC1C,MAAM,GAAA,EAAA,GAAA,aAEL,CAFK,IAAIE,MACR,CAAC,2CAA2C,EAAEmC,WAAWzC,YAAY,CAACI,UAAU,CAAC,IAAI,CAAC,GADlF,qBAAA;uCAAA,2BAAA;4CAAA;8CAAA,wCAAA;4BAEN,oBAAA;wBACF,UAAA;wBAEAJ,OAAAA,QAAe;4BACbI,IAAAA,QAAYqC,WAAWzC,YAAY,CAACI,UAAU;4BAC9CiC,QAAQI,EAAAA,2BAAAA,WAAWzC,YAAY,qBAAvByC,yBAAyBJ,MAAM,KAAItK,WAAW6G,UAAU;wBAClE;oBACF,GAAA,IAGK,WAAA,gBAAA,CAAA,wBAAA,mBAAA;wBACHoB,OAAAA,QAAe;4BAAEI,IAAAA,QAAYxM;4BAAgByO,QAAQrI;wBAAU;oBACjE,GAAA,CAAA,YAAA,KAAA,EAAA;gBACF,2DAAA;gBACF,IAAA,aAAA;oBAEAyI,GAAWzC,YAAY,GAAGA;wBAGjB9F,YAAAA,aAA0B,YACjCwI,CAAAA,8BAAAA,WAAY5N,IAAI,MAAKtB,gBAAgBuB,QAAQ,IAC7C2N,WAAWzB,WAAW,EACtB;wBAeayB,QAAAA;oBAdb,mEAAuE;gBACvE,OAAA,IAAA,CAAA,OAAA,mDAAsE;oBACtE,IAAA,CAAA,IAAA,SAAA,CAAA,kBAAA,6BAAsE;wBAEtE,eAAA,6CAAoE;4BACpE,YAAA,+CAAuE;4BACvE,QAAA,oDAAwE;wBACxE,8DAAsE;oBACtE,kEAAsE;gBACtE,OAAA,IAAA,WAAA,YAAA,EAAA,oBAAwD;oBACpDzH,SAAS,CAAC7H,0BAA0B,oCAAA;oBAExC,oBAAA,8CAAsE;oBACtE,IAAA,OAAA,WAAA,YAAA,CAAA,OAA8C,GAAA,KAAA,UAAA;wBACxC2P,IAAAA,EAAOL,uBAAAA,WAAWhK,OAAO,qBAAlBgK,oBAAoB,CAAC5O,uBAAuB;wBACrD0C,IAAAA,OAAe+B,IAAAA,KAASwK,OAAAA,CAAQ,OAAOA,GAAAA,GAAAA,GAAS,UAAU;4BACxD9H,KAAS,CAACnH,OAAAA,cAAAA,CAAAA,EAAwBiP,EAAAA,MAAAA,CAAAA,2CAAAA,EAAAA,WAAAA,YAAAA,CAAAA,UAAAA,CAAAA,IAAAA,CAAAA,GAAAA,qBAAAA;gCACxC,OAAA;gCAEMC,OAAiBN,KAAAA,MAAWzB,WAAW,CAAC/E,GAAG,CAAChC;gCAC9C8I,OAAmBhJ,OAAAA,IAAW;4BAChC,IAAY;wBACZ,GAAOhG,iBAAiB;wBACtB8B,eAAAA;4BACAC,YAAAA,WAAAA,YAAAA,CAAAA,UAAAA;4BACAkN,QAAAA,CAAAA,CAAAA,CAAelL,WAAWkL,aAAa,EAAA,WAAA,YAAA,KAAA,OAAA,KAAA,IAAA,yBAAA,MAAA,KAAA,WAAA,UAAA;wBACvCC,iBAAiBnL,WAAWmL,eAAe;wBAC3CnD,GAAAA,KAAQpM,aAAawP,UAAU,CAC7BH,gBACA3P;wBAEF2M,cAAcyC,CAAAA,UAAWzC,YAAY;4BACvC,YAAA,yKAAA;4BACF,QAAA;wBAEA,iEAAyE;oBACzE,qEAAyE;gBACzE,sEAAsE;gBACtE,qEAAqE;gBACrE,OAAA,YAAA,GAAA,8CAAoE;gBACpE,OAAA,yBAAgC,CAAA,YAAA,CAAA,cAAA,OAAA,KAAA,IAAA,WAAA,IAAA,MAAA,8LAAA,CAAA,QAAA,IAAA,WAAA,WAAA,EAAA;gBAChCjK,IAAIY,UAAU,GAAG;gBACjB,OAAO3C,iBAAiB,+CAAA;oBACtB8B,kEAAAA;oBACAC,kEAAAA;oBACAkN,eAAelL,WAAWkL,aAAa,yBAAA;oBACvCC,iBAAiBnL,WAAWmL,eAAe,wBAAA;oBAC3CnD,QAAQpM,aAAa4O,KAAK,0CAAA;oBAC1BvC,cAAcyC,WAAWzC,YAAY,6BAAA;gBACvC,sEAAA;gBACF,wDAAA;gBAEA,IAAA,SAAA,CAAA,mNAAA,EAAA,6BAAyE;gBACzE,0BAA8B,4CAAA;gBAC9B,EAAMoD,eAAejR,eAAe2D,KAAK,SAAA;gBACrCsN,MAAAA,OAAAA,CAAc,uBAAA,WAAA,OAAA,KAAA,OAAA,KAAA,IAAA,oBAAA,CAAA,iLAAA,CAAA;gBAChB,IAAA,EAAMC,WAAW,EAAA,IAAMD,KAAAA,QACrB,OAAA,SAAA,UAAA;oBACE,GAAGX,CAAAA,SAAU,CAAA,iLAAA,EAAA;oBACb,0CAA0C;oBAC1C,EAAA,iBAAA,WAAA,UAAwC,CAAA,CAAA,GAAA,CAAA;oBACxC7B,OAAO,YAAA,WAAA;wBACL,GAAG6B,KAAAA,MAAW7B,KAAK;wBACnB9L,GAAAA,GAAM,CAANA,oLAAM,EAAA;wBACR;wBAEF;wBACE2H,CAAKtK,cAAAA,CAAe2D,KAAK,KAAA,aAAA;wBAC3B,iBAAA,WAAA,eAAA;wBAEEuN,MAAU,EAAA,4KAAA,CAAA,UAAA,CAAA,gBAAA,kNAAA;wBACZ,cAAA,WAAA,YAAA,CAA0C;oBAC1C,OAAO;gBACT;gBACF,yEAAA;gBAEA,gEAAoE,SAAA;gBACpE,YAAgB,0DAAA;gBACZT,eAAe7I,kBAAkB,oCAAA;gBACnC,MAAM,qBAEL,CAFK,IAAIuG,MACR,8BAAA,2CADI,qBAAA;2BAAA,qBAAA;gCAAA,CAAA;kCAAA,6KAAA,EAAA;oBAEN;oBACF;oBAEIoC,OAAWhK,OAAO,CAAA,CAAE,UAAA,aAAA;oBACtB,EAAMA,UAAU,KAAA,WAAA,eAAA;oBAAE,GAAGgK,KAAAA,MAAWhK,sKAAAA,CAAO,KAAA;oBAAC,cAAA,WAAA,YAAA;gBAExC,IAAI,CAAClC,eAAe,CAAC+B,OAAO;oBAC1B,OAAOG,OAAO,CAAC5E,uBAAuB;gBACxC,qEAAA;gBAEA,KAAK,IAAI,CAACwP,KAAK1C,MAAM,IAAI2C,CAAAA,MAAOC,OAAO,CAAC9K,SAAU;oBAChD,IAAI,OAAOkI,EAAAA,IAAAA,QAAU,0KAAA,EAAA,KAAA,CAAa;oBAElC,IAAI6C,MAAMC,OAAO,CAAC9C,QAAQ;wBACxB,KAAK,IAAA,EAAM+C,IAAAA,CAAK/C,MAAO,MAAA;4BACrB7K,IAAI6N,CAAAA,WAAY,CAACN,KAAKK;wBACxB,sCAAA;oBACF,OAAO,IAAI,OAAO/C,UAAU,UAAU,EAAA;wBACpCA,GAAAA,KAAQA,MAAMiD,QAAQ;wBACtB9N,GAAAA,CAAI6N,UAAAA,EAAY,CAACN,EAAAA,GAAK1C;wBACxB,GAAO,GAAA;wBACL7K,IAAI6N,YAAY,CAACN,KAAK1C;oBACxB;oBACF,KAAA,IAAA,kLAAA,EAAA,KAAA;gBACF;gBAEA,IAAA,UAAA,oDAAsE;oBACtE,sCAA8C,IAAA;oBACxCmC,MAAOL,CAAAA,qBAAAA,WAAWhK,OAAO,qBAAlBgK,mBAAoB,CAAC5O,uBAAuB;gBACrD0C,eAAe+B,SAASwK,QAAQ,OAAOA,SAAS,UAAU;gBAC5DhN,IAAIkF,SAAS,CAACnH,wBAAwBiP;YACxC,oEAAA;YAEA,gBAAA,0DAA0E;YAC1E,IAAA,eAAA,kBAAA,qCAA0E;gBAC1E,MAAA,OAAA,cAAA,CAAA,IAAoC,MAAA,yEAAA,qBAAA;oBAChCL,OAAW1B,MAAM,IAAK,CAAA,CAAClI,gBAAgB,CAACS,iBAAgB,GAAI;oBAC1D5C,UAAU,EAAA,CAAG+L,WAAW1B,MAAM;oBACpC,cAAA;gBAEA,4FAAgG;YAChG,IACE,CAACxK,eACDkM,WAAW1B,MAAM,IACjBrM,kBAAkB,CAAC+N,WAAW1B,MAAM,CAAC,IACrClI,cACA;gBACA/C,IAAIY,OAAAA,GAAU,GAAG,CAAA,EAAA;gBACnB,MAAA,UAAA;oBAEA,GAAA,WAAA,OAAA,SAAsC;gBAClCiM,aAAa;gBACf7M,IAAIkF,CAAAA,QAAS,CAAC7H,MAAAA,CAAAA,OAAAA,YAA0B;oBAC1C,OAAA,OAAA,CAAA,iLAAA,CAAA;gBAEA,uDAA2D;gBAC3D,KAAA,IAAA,CAAA,KAAA,MAAA,IAAA,OAAA,OAAA,CAAA,SAAA,eAAoE;oBACpE,IAAA,OAAA,UAAA,aAAA,gCAA0E;oBAC1E,IAAA,MAAA,OAAA,CAAA,KAA+B,GAAA;wBAC3B0F,KAAAA,GAAgB,CAACnB,EAAAA,KAAAA,MAAa;4BAChC,IAAA,YAAA,CAAA,KAAA,4BAA8D;wBAC1D,GAAO+K,WAAW5B,OAAO,KAAK,aAAa;oBAC7C,IAAI4B,GAAAA,IAAAA,IAAW/F,GAAAA,MAAS,EAAE,EAAA,UAAA;wBACxB,MAAM,EAAA,MAAA,QAAA,KAA0D,CAA1D,IAAI2D,MAAM,kDAAV,qBAAA;mCAAA,KAAA,CAAA,KAAA;wCAAA;0CAAA,IAAA;wBAAyD;oBACjE;oBAEA,OAAOtM,iBAAiB;wBACtB8B,0DAAAA;wBACAC,kCAAAA;wBACAkN,CAAAA,CAAAA,aAAelL,SAAAA,EAAWkL,SAAAA,IAAa,GAAA,KAAA,OAAA,KAAA,IAAA,mBAAA,CAAA,iLAAA,CAAA;wBACvCC,OAAAA,SAAAA,CAAiBnL,OAAAA,IAAWmL,GAAAA,SAAAA,GAAe,OAAA;wBAC3CnD,KAAAA,CAAAA,EAAQ2C,WAAW7B,IAAI,gKAAA,EAAA;wBACvB,0DAA0D;wBAC1D,2DAA2D,GAAA;wBAC3D,8DAAA,CAA+D;wBAC/D,mBAAmB,KAAA;wBACnB,GAAA,MAAA,IAAA,CAAA,CAAA,gBAAA,CAAA,iBAAA,GAAA,2BAA+E;wBAC/Eb,MAAAA,GAAAA,KAAc/F,MAAAA,MAAAA,UACV;4BAAEmG,YAAY;4BAAGiC,QAAQrI,wEAAAA;wBAAU,IACnCyI,IAAAA,OAAWzC,IAAAA,MAAAA,EAAY,EAAA,+MAAA,CAAA,WAAA,MAAA,CAAA,IAAA,cAAA;oBAC7B,UAAA,GAAA;gBACF;gBAEA,kCAAA,oCAAsE;gBACtE,QAAQ,KAAA;gBACR,IAAA,GAAOhM,MAAAA,CAAAA,UAAiB,yMAAA,EAAA;oBACtB8B;oBACAC,mDAAAA;oBACAkN,eAAelL,WAAWkL,aAAa,qBAAA;oBACvCC,iBAAiBnL,WAAWmL,eAAe,uBAAA;oBAC3CnD,QAAQpM,aAAawP,EAAAA,QAAU,CAC7BT,WAAW5B,OAAO,EAClBzN;oBAEF2M,YAAAA,CAAAA,CAAcyC,WAAWzC,CAAAA,WAAY;gBACvC,8DAAA;gBACF,IAAA,OAAA,WAAA,OAAA,KAAA,aAAA;oBAEA,IAAA,WAAA,SAAA,EAAA,CAAmC;wBACxB0C,MAAAA,IAAW7B,GAAAA,CAAI,aAAA,CAAA,IAAA,MAAA,kDAAA,qBAAA;4BAE1B,OAAA,8CAAqE;4BACrE,YAAA,0CAAsE;4BACtE,cAAA,sBAAoD;wBAC/C+B,QAAepM,eAAesC,cAAc;oBAC/C,oEAAwE;oBACxE,OAAA,IAAA,oLAAA,EAAA,wCAAoE;wBACpE,qBAA6B;wBAE3BtD,IAAQC,GAAG,CAACsO,gBAAgB,IAC5BvN,eACA+C,qBACAuK,KAAKE,WAAW,KAAKnQ,0BACrB;wBACA,eAAA,WAAA,aAAA,yBAAoE;wBACpE,iBAAA,WAAA,eAAA,uBAAsE;wBACtE,QAAA,WAAA,IAAA,yCAAoE;wBACpEiQ,CAAKG,OAAO,CAACC,iDAAAA;wBACf,2DAAA;wBAEOlQ,gBAAiB,+CAAA;wBACtB8B,mBAAAA;wBACAC,+EAAAA;wBACAkN,WAAelL,GAAAA,QAAWkL,aAAa,CAAA;4BACvCC,SAAiBnL,GAAAA,QAAWmL,eAAe;4BACnCY,QAAAA;wBACR9D,IAAAA,MAAcyC,KAAAA,MAAWzC,MAAAA,MAAY;oBACvC;gBACF;gBAEA,kEAAsE,IAAA;gBACtE,QAAA,2DAAuE;gBACvE,OAAA,IAAA,oLAAA,EAAA,0CAAsE;oBACtE,oBAA4B;oBACxBpG,kBAAsBC,wBAAwB;oBAChD,eAAA,WAAA,aAAA,wBAAmE;oBACnE,iBAAA,WAAA,eAAA,IAAmD;oBACnDiK,CAAKK,IAAI,CACP,EAAA,EAAIC,0KAAAA,CAAAA,IAAe,MAAA,CAAA,WAAA,OAAA,EAAA,kNAAA;oBACjBC,OAAMC,OAAAA,GAAU,QAAA,YAAA;wBACdA,WAAWC,OAAO,CAACxQ,aAAayQ,MAAM,CAACC,aAAa;wBACpDH,WAAWI,KAAK;oBAClB,2BAAA;gBACF,OAAA,WAAA,IAAA;gBAGF,OAAO1Q,iBAAiB,yCAAA;oBACtB8B,8DAAAA;oBACAC,4CAAAA;oBACAkN,YAAAA,GAAelL,WAAWkL,CAAAA,YAAa,EAAA;oBACvCC,iBAAiBnL,WAAWmL,eAAe,yBAAA;oBAC3CnD,QAAQ+D,wDAAAA;oBACR9D,cAAc,WAAA;wBAAEI,YAAY;;gBAKhC,OAAA,IAAA,oLAAA,EAAA,wCAAoE;oBACpE,qBAA6B;oBACzB5K,IAAQC,GAAG,CAACsO,gBAAgB,EAAE;oBAChCD,CAAKK,IAAI,CAACD,SAAAA,WAAAA,aAAAA;oBACZ,iBAAA,WAAA,eAAA;oBAEA,QAAA,yDAAyE;oBACzE,cAAA,WAAA,YAAA,2BAAwE;gBACxE,eAAmB;YACnB,MAAMS,cAAc,IAAIC;YACxBd,KAAKK,IAAI,CAACQ,YAAYE,QAAQ,wCAAA;YAE9B,uEAAA,CAAwE;YACxE,sEAAA,EAAwE;YACxE,4BAAA,6CAAyE;YACzEnI,IAAAA,KAAS,iBAAA,wBAAA;gBACPvB,mEAAAA;gBACAwB,WAAW+F,WAAW/F,SAAS,oBAAA;gBAC/B,KAAA,IAAA,CAAA,IAAA,eAAA,yCAAsE;oBACtE,OAAA,CAAY,SAAA;wBACZC,WAAAA,EAAqB,KAAA,CAAA,mMAAA,CAAA,MAAA,CAAA,aAAA;wBAEf,GAAOmD,QAAAA,KAAAA;oBAKPA;gBAJJ,IAAI,CAACA,QAAQ;oBACX,GAAA,IAAA,GAAM,iLAAA,EAAA,OAAwD,CAAxD,IAAIO,MAAM,gDAAV,qBAAA;+BAAA;oCAAA;sCAAA,QAAA,aAAA;oBAAuD,iBAAA,WAAA,eAAA;oBAC/D,QAAA;oBAEIP,EAAAA,YAAAA,IAAAA,OAAOa,KAAK,qBAAZb,cAAcjL,IAAI,MAAKtB,gBAAgBuB,QAAQ,EAAE;wBAELgL,YAAAA;wBAD9C,EAAM,MAAA,eAEL,CAFK,IAAIO,MACR,CAAC,yCAAyC,GAAEP,iBAAAA,OAAOa,KAAK,qBAAZb,eAAcjL,IAAI,EAAE,GAD5D,qBAAA;+BAAA;oCAAA;sCAAA;oBAEN,gEAAA;gBACF,gEAAA;gBAEA,yBAAA,oBAA6C;gBAC7C,MAAMiL,OAAOa,KAAK,CAACC,IAAI,CAACkE,MAAM,CAACJ,YAAYK,QAAQ;;gBAInD,0DAA0D,WAAA;gBAC1DL,YAAYK,QAAQ,CAACE,KAAK,CAACrF,KAAKoF,KAAK,CAAC,CAACE,6BAAAA;oBACrC/I,QAAQqD,GAAAA,EAAK,CAAC,8BAA8B0F;gBAC9C,EAAA,cAAA,IAAA;YACF,KAAA,IAAA,CAAA,YAAA,QAAA;YAEF,OAAOnR,iBAAiB,gDAAA;gBACtB8B,oEAAAA;gBACAC,qEAAAA;gBACAkN,KAAAA,UAAelL,WAAWkL,aAAa;gBACvCC,iBAAiBnL,WAAWmL,eAAe;gBAC3CnD,QAAQ+D,GAAAA,WAAAA,SAAAA;gBACR,sEAAA,CAAuE;gBACvE,YAAA,4DAAwE;gBACxE,qBAAA,gBAAqC;gBACrC9D,GAAAA,CAAAA,OAAAA,GAAc;oBAAEI,YAAY;oBAAGiC,CAAAA,OAAQrI,CAAAA;oBAAU,MAAA,OAAA,cAAA,CAAA,IAAA,MAAA,gDAAA,qBAAA;wBACnD,OAAA;wBACF,YAAA;wBAEA,cAAA,sBAAoD;oBACpD,6CAAyD;gBACrDa,QAAY;gBACd,EAAMqH,EAAAA,CAAAA,CAAAA,WAAerH,KAAAA,OAAAA,KAAAA,KAAAA,OAAAA,KAAAA,IAAAA,cAAAA,IAAAA,MAAAA,8LAAAA,CAAAA,QAAAA,EAAAA;oBAChB,IAAA;oBACE,KAAMD,CAAAA,MAAOwK,CAAAA,cAAAA,CAAAA,IAAAA,CAAqB,CAACtP,IAAI4C,CAAAA,MAAO,EAAE,IACrDkC,OAAOyK,KAAK,CACVjT,eAAe+J,CAAAA,EAAAA,CAAAA,SAAa,EAC5B,MAAA,OAAA,KAAA,KAAA,OAAA,KAAA,IAAA,eAAA,IAAA,EAAA,GAAA,qBAAA;wBACEmJ,MAAU,CAAA,EAAG3K,OAAO,CAAC,EAAE7E,IAAI2G,GAAG,EAAE;wBAChC3H,EAAM5C,SAASqT,CAAAA,KAAM;wBACrBC,QAAY,MAAA;wBACV,eAAe7K;wBACf,eAAe7E,IAAI2G,GAAG;oBACxB,yCAAA;gBACF,GACAyF,GAAAA,OAAAA,KAAAA,CAAAA,IAAAA,CAAAA,MAAAA,CAAAA,YAAAA,QAAAA;YAGN,GAAA,KAAA,CAAA,CAAA;gBACOrC,EAAK,+DAAA;gBACZ,0CAAkD,gBAAA;gBAC7ChF,WAAc,CAAEgF,CAAAA,OAAAA,CAAAA,KAAAA,CAAAA,CAAe5L,IAAAA,KAAAA,CAAAA,CAAAA,IAAc,GAAI;oBAC9CW,QAAAA,EAAYgL,GAAAA,CAAAA,UAAc,CAC9B9J,KACA+J,KACA,SAAA;gBACE4F,YAAY;gBACZC,WAAWxP;gBACXyP,GAAAA,IAAAA,QAAW,4KAAA,EAAA;gBACXC,kBAAkB5T,oBAAoB;oBACpCwL,cAAcjF;oBACdL,WAAAA,WAAAA,aAAAA;gBACF,iBAAA,WAAA,eAAA;gBAEFJ,QAAAA;gBAEJ,uEAAA;gBAEA,2CAAmD,6BAAA;gBAC7C+H,qCAAAA;gBACR,cAAA;oBACF,YAAA;oBAEA,QAAA,iDAA6E;gBAC7E;;;;QAKA,KAASqE,oDAAAA;QACP,GAAO,CAAA,GAAIE,SAAAA,MAAe;YACxBC,GAAMC,GAAAA,OAAU,QAAA;YACdA,GAAAA,QAAWC,OAAO,CAChB,IAAIsB,cAAcC,MAAM,CAAC;YAE3BxB,OAAAA,IAAWI,EAAAA,GAAK,IAAA,qBAAA,CAAA,IAAA,OAAA,EAAA,IAAA,OAAA,KAAA,CAAA,4LAAA,CAAA,aAAA,EAAA;oBAClB,UAAA,GAAA,OAAA,CAAA,EAAA,IAAA,GAAA,EAAA;oBACF,MAAA,mLAAA,CAAA,MAAA;oBACF,YAAA","ignoreList":[0],"debugId":null}}]
}