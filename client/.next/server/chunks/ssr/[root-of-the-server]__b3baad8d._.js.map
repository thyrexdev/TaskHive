{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 10, "column": 0}, "map": {"version":3,"sources":["file:///home/joeagharib/My-Github/taskhive/client/lib/api.ts"],"sourcesContent":["export const apiFetch = async (endpoint: string, options?: RequestInit) => {\n  const baseUrl = process.env.NEXT_PUBLIC_API_URL;\n  const res = await fetch(`${baseUrl}${endpoint}`, {\n    credentials: \"include\",\n    ...options,\n    headers: {\n      \"Content-Type\": \"application/json\",\n      ...(options?.headers || {}),\n    },\n  });\n  if (!res.ok) {\n    throw new Error(`API request failed with status ${res.status}`);\n  }\n  return res;\n};\n"],"names":[],"mappings":";;;;AAAO,MAAM,WAAW,OAAO,UAAkB;IAC/C,MAAM;IACN,MAAM,MAAM,MAAM,MAAM,GAAG,UAAU,UAAU,EAAE;QAC/C,aAAa;QACb,GAAG,OAAO;QACV,SAAS;YACP,gBAAgB;YAChB,GAAI,SAAS,WAAW,CAAC,CAAC;QAC5B;IACF;IACA,IAAI,CAAC,IAAI,EAAE,EAAE;QACX,MAAM,IAAI,MAAM,CAAC,+BAA+B,EAAE,IAAI,MAAM,EAAE;IAChE;IACA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 51, "column": 0}, "map": {"version":3,"sources":["file:///home/joeagharib/My-Github/taskhive/client/providers/AuthProvider.tsx"],"sourcesContent":["\"use client\";\n\nimport { createContext, useContext, useState, useEffect } from \"react\";\nimport { apiFetch } from \"@/lib/api\";\nimport { headers } from \"next/headers\";\n\ntype User = {\n  id: string;\n  email: string;\n};\n\ntype AuthContextType = {\n  user: User | null;\n  loading: boolean;\n  error: string | null;\n  login: (email: string, password: string) => Promise<void>;\n  logout: () => Promise<void>;\n};\n\nconst AuthContext = createContext<AuthContextType | null>(null);\n\nexport const AuthProvider = ({ children }: { children: React.ReactNode }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  // fetch user on mount\n  useEffect(() => {\n    const fetchUser = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n        const res = await apiFetch(\"/auth/me\", { credentials: \"include\" });\n        if (res.ok) {\n          const data = await res.json();\n          setUser(data?.user || null);\n        } else {\n          setUser(null);\n        }\n      } catch (err) {\n        setError(\"Failed to fetch user\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchUser();\n  }, []);\n\n  const login = async (email: string, password: string) => {\n    try {\n      setLoading(true);\n      setError(null);\n      const res = await apiFetch(\"/auth/login\", {\n        method: \"POST\",\n        credentials: \"include\",\n        body: JSON.stringify({ email, password }),\n      });\n\n      if (!res.ok) {\n        throw new Error(\"Invalid email or password\");\n      }\n\n      const me = await apiFetch(\"/auth/me\", { credentials: \"include\" }, { headers});\n      const data = await me.json();\n      setUser(data.user);\n    } catch (err: any) {\n      setError(err.message || \"Login failed\");\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const logout = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      await apiFetch(\"/auth/logout\", {\n        method: \"POST\",\n        credentials: \"include\",\n      });\n      setUser(null);\n    } catch (err: any) {\n      setError(err.message || \"Logout failed\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <AuthContext.Provider value={{ user, loading, error, login, logout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => {\n  const ctx = useContext(AuthContext);\n  if (!ctx) throw new Error(\"useAuth must be used inside AuthProvider\");\n  return ctx;\n};\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;AACA;AAJA;;;;;AAmBA,MAAM,4BAAc,IAAA,sNAAa,EAAyB;AAEnD,MAAM,eAAe,CAAC,EAAE,QAAQ,EAAiC;IACtE,MAAM,CAAC,MAAM,QAAQ,GAAG,IAAA,iNAAQ,EAAc;IAC9C,MAAM,CAAC,SAAS,WAAW,GAAG,IAAA,iNAAQ,EAAC;IACvC,MAAM,CAAC,OAAO,SAAS,GAAG,IAAA,iNAAQ,EAAgB;IAElD,sBAAsB;IACtB,IAAA,kNAAS,EAAC;QACR,MAAM,YAAY;YAChB,IAAI;gBACF,WAAW;gBACX,SAAS;gBACT,MAAM,MAAM,MAAM,IAAA,sHAAQ,EAAC,YAAY;oBAAE,aAAa;gBAAU;gBAChE,IAAI,IAAI,EAAE,EAAE;oBACV,MAAM,OAAO,MAAM,IAAI,IAAI;oBAC3B,QAAQ,MAAM,QAAQ;gBACxB,OAAO;oBACL,QAAQ;gBACV;YACF,EAAE,OAAO,KAAK;gBACZ,SAAS;YACX,SAAU;gBACR,WAAW;YACb;QACF;QACA;IACF,GAAG,EAAE;IAEL,MAAM,QAAQ,OAAO,OAAe;QAClC,IAAI;YACF,WAAW;YACX,SAAS;YACT,MAAM,MAAM,MAAM,IAAA,sHAAQ,EAAC,eAAe;gBACxC,QAAQ;gBACR,aAAa;gBACb,MAAM,KAAK,SAAS,CAAC;oBAAE;oBAAO;gBAAS;YACzC;YAEA,IAAI,CAAC,IAAI,EAAE,EAAE;gBACX,MAAM,IAAI,MAAM;YAClB;YAEA,MAAM,KAAK,MAAM,IAAA,sHAAQ,EAAC,YAAY;gBAAE,aAAa;YAAU,GAAG;gBAAE,SAAA,0IAAO;YAAA;YAC3E,MAAM,OAAO,MAAM,GAAG,IAAI;YAC1B,QAAQ,KAAK,IAAI;QACnB,EAAE,OAAO,KAAU;YACjB,SAAS,IAAI,OAAO,IAAI;YACxB,MAAM;QACR,SAAU;YACR,WAAW;QACb;IACF;IAEA,MAAM,SAAS;QACb,IAAI;YACF,WAAW;YACX,SAAS;YACT,MAAM,IAAA,sHAAQ,EAAC,gBAAgB;gBAC7B,QAAQ;gBACR,aAAa;YACf;YACA,QAAQ;QACV,EAAE,OAAO,KAAU;YACjB,SAAS,IAAI,OAAO,IAAI;QAC1B,SAAU;YACR,WAAW;QACb;IACF;IAEA,qBACE,8OAAC,YAAY,QAAQ;QAAC,OAAO;YAAE;YAAM;YAAS;YAAO;YAAO;QAAO;kBAChE;;;;;;AAGP;AAEO,MAAM,UAAU;IACrB,MAAM,MAAM,IAAA,mNAAU,EAAC;IACvB,IAAI,CAAC,KAAK,MAAM,IAAI,MAAM;IAC1B,OAAO;AACT","debugId":null}}]
}